{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos/MTSaaSRepo/mtsaas/src/teamMembersTable.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nlet counter = 0;\n\nfunction createData(name, role, email, phone, clients) {\n  counter += 1;\n  return {\n    id: counter,\n    name,\n    role,\n    email,\n    phone,\n    clients\n  };\n}\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [{\n  id: \"name\",\n  label: \"Name\"\n}, {\n  id: \"role\",\n  label: \"Role\"\n}, {\n  id: \"email\",\n  label: \"Email\"\n}, {\n  id: \"phone\",\n  label: \"Phone\"\n}, {\n  id: \"clients\",\n  label: \"Clients\"\n}];\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: lightBlue[400],\n    color: theme.palette.common.white,\n    fontSize: 15\n  },\n  body: {\n    fontSize: 12\n  }\n}))(TableCell);\n\nclass EnhancedTableHead extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createSortHandler = property => event => {\n      this.props.onRequestSort(event, property);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy;\n    return React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, rows.map(row => React.createElement(CustomTableCell, {\n      key: row.id,\n      align: \"center\",\n      sortDirection: orderBy === row.id ? order : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(TableSortLabel, {\n      active: orderBy === row.id,\n      direction: order,\n      onClick: this.createSortHandler(row.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, row.label)), this)));\n  }\n\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired //rowCount: PropTypes.number.isRequired,\n\n};\n\nconst styles = theme => ({\n  root: {\n    width: \"60%\",\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit * 30,\n    overflowX: \"auto\"\n  },\n  table: {//minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n});\n\nclass EnhancedTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      order: \"\",\n      orderBy: \"\",\n      data: [createData(\"John Smith\", \"Therapist\", \"jsmith@email.com\", \"123-123-1234\", 4), createData(\"Jennifer Robinson\", \"Admin Assistant\", \"jrobinson@email.com\", \"123-123-1236\", 0), createData(\"Harry Potter\", \"Therapist\", \"hpotter@email.com\", \"123-123-1237\", 2), createData(\"Hermione Granger\", \"Therapist\", \"hgranger@email.com\", \"123-123-1236\", 3), createData(\"Lenny Leonard \", \"Therapist\", \"lleonard@email.com\", \"123-123-1237\", 1), createData(\"Allison Taylor\", \"Therapist\", \"ataylor@email.com\", \"123-123-1237\", 3), createData(\"John Smith\", \"Therapist\", \"jsmith@email.com\", \"123-123-1234\", 4), createData(\"Jennifer Robinson\", \"Admin Assistant\", \"jrobinson@email.com\", \"123-123-1236\", 0), createData(\"Harry Potter\", \"Therapist\", \"hpotter@email.com\", \"123-123-1237\", 2), createData(\"Hermione Granger\", \"Therapist\", \"hgranger@email.com\", \"123-123-1236\", 3), createData(\"Lenny Leonard \", \"Therapist\", \"lleonard@email.com\", \"123-123-1237\", 1), createData(\"Allison Taylor\", \"Therapist\", \"ataylor@email.com\", \"123-123-1237\", 3), createData(\"Hermione Granger\", \"Therapist\", \"hgranger@email.com\", \"123-123-1236\", 3)],\n      page: 0,\n      rowsPerPage: 5\n    };\n\n    this.handleRequestSort = (event, property) => {\n      const orderBy = property;\n      let order = \"desc\";\n\n      if (this.state.orderBy === property && this.state.order === \"desc\") {\n        order = \"asc\";\n      }\n\n      this.setState({\n        order,\n        orderBy\n      });\n    };\n\n    this.handleChangePage = (event, page) => {\n      this.setState({\n        page\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n  }\n\n  // isSelected = id => this.state.selected.indexOf(id) !== -1;\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          data = _this$state.data,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n    return React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.tableWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      \"aria-labelledby\": \"tableTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(EnhancedTableHead //numSelected={selected.length}\n    , {\n      order: order,\n      orderBy: orderBy,\n      onRequestSort: this.handleRequestSort,\n      rowCount: data.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, stableSort(data, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(n => {\n      // const isSelected = this.isSelected(n.id);\n      return React.createElement(TableRow, {\n        hover: true,\n        className: classes.row,\n        tabIndex: -1,\n        key: n.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, n.name), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, n.role), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, n.email), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, n.phone), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, n.clients));\n    }), emptyRows > 0 && React.createElement(TableRow, {\n      style: {\n        height: 49 * emptyRows\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      colSpan: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }))))), React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 15, 20],\n      component: \"div\",\n      count: data.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        \"aria-label\": \"Previous Page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"Next Page\"\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }));\n  }\n\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(EnhancedTable);","map":{"version":3,"sources":["/Users/kenneth/repos/MTSaaSRepo/mtsaas/src/teamMembersTable.js"],"names":["React","classNames","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","FilterListIcon","lighten","lightBlue","counter","createData","name","role","email","phone","clients","id","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","rows","label","CustomTableCell","theme","head","backgroundColor","color","palette","common","white","fontSize","body","EnhancedTableHead","Component","createSortHandler","property","event","props","onRequestSort","render","row","propTypes","func","isRequired","string","styles","root","width","marginTop","spacing","unit","marginLeft","overflowX","table","tableWrapper","background","default","EnhancedTable","state","data","page","rowsPerPage","handleRequestSort","setState","handleChangePage","handleChangeRowsPerPage","target","value","classes","emptyRows","Math","min","length","slice","n","height","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { lightBlue } from \"@material-ui/core/colors\";\n\nlet counter = 0;\nfunction createData(name, role, email, phone, clients) {\n  counter += 1;\n  return { id: counter, name, role, email, phone, clients };\n}\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [\n  { id: \"name\", label: \"Name\" },\n  { id: \"role\", label: \"Role\" },\n  { id: \"email\", label: \"Email\" },\n  { id: \"phone\", label: \"Phone\" },\n  { id: \"clients\", label: \"Clients\" }\n];\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: lightBlue[400],\n    color: theme.palette.common.white,\n    fontSize: 15\n  },\n  body: {\n    fontSize: 12\n  }\n}))(TableCell);\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const { order, orderBy } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          {rows.map(\n            row => (\n              <CustomTableCell\n                key={row.id}\n                align=\"center\"\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <TableSortLabel\n                  active={orderBy === row.id}\n                  direction={order}\n                  onClick={this.createSortHandler(row.id)}\n                >\n                  {row.label}\n                </TableSortLabel>\n              </CustomTableCell>\n            ),\n            this\n          )}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired\n  //rowCount: PropTypes.number.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    width: \"60%\",\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit * 30,\n    overflowX: \"auto\"\n  },\n  table: {\n    //minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n});\n\nclass EnhancedTable extends React.Component {\n  state = {\n    order: \"\",\n    orderBy: \"\",\n    data: [\n      createData(\n        \"John Smith\",\n        \"Therapist\",\n        \"jsmith@email.com\",\n        \"123-123-1234\",\n        4\n      ),\n      createData(\n        \"Jennifer Robinson\",\n        \"Admin Assistant\",\n        \"jrobinson@email.com\",\n        \"123-123-1236\",\n        0\n      ),\n      createData(\n        \"Harry Potter\",\n        \"Therapist\",\n        \"hpotter@email.com\",\n        \"123-123-1237\",\n        2\n      ),\n      createData(\n        \"Hermione Granger\",\n        \"Therapist\",\n        \"hgranger@email.com\",\n        \"123-123-1236\",\n        3\n      ),\n      createData(\n        \"Lenny Leonard \",\n        \"Therapist\",\n        \"lleonard@email.com\",\n        \"123-123-1237\",\n        1\n      ),\n      createData(\n        \"Allison Taylor\",\n        \"Therapist\",\n        \"ataylor@email.com\",\n        \"123-123-1237\",\n        3\n      ),\n      createData(\n        \"John Smith\",\n        \"Therapist\",\n        \"jsmith@email.com\",\n        \"123-123-1234\",\n        4\n      ),\n      createData(\n        \"Jennifer Robinson\",\n        \"Admin Assistant\",\n        \"jrobinson@email.com\",\n        \"123-123-1236\",\n        0\n      ),\n      createData(\n        \"Harry Potter\",\n        \"Therapist\",\n        \"hpotter@email.com\",\n        \"123-123-1237\",\n        2\n      ),\n      createData(\n        \"Hermione Granger\",\n        \"Therapist\",\n        \"hgranger@email.com\",\n        \"123-123-1236\",\n        3\n      ),\n      createData(\n        \"Lenny Leonard \",\n        \"Therapist\",\n        \"lleonard@email.com\",\n        \"123-123-1237\",\n        1\n      ),\n      createData(\n        \"Allison Taylor\",\n        \"Therapist\",\n        \"ataylor@email.com\",\n        \"123-123-1237\",\n        3\n      ),\n      createData(\n        \"Hermione Granger\",\n        \"Therapist\",\n        \"hgranger@email.com\",\n        \"123-123-1236\",\n        3\n      )\n    ],\n    page: 0,\n    rowsPerPage: 5\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = \"desc\";\n\n    if (this.state.orderBy === property && this.state.order === \"desc\") {\n      order = \"asc\";\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  // isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  render() {\n    const { classes } = this.props;\n    const { data, order, orderBy, rowsPerPage, page } = this.state;\n    const emptyRows =\n      rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\n            <EnhancedTableHead\n              //numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={this.handleRequestSort}\n              rowCount={data.length}\n            />\n            <TableBody>\n              {stableSort(data, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(n => {\n                  // const isSelected = this.isSelected(n.id);\n                  return (\n                    <TableRow\n                      hover\n                      className={classes.row}\n                      tabIndex={-1}\n                      key={n.id}\n                    >\n                      <TableCell align=\"center\">{n.name}</TableCell>\n                      <TableCell align=\"center\">{n.role}</TableCell>\n                      <TableCell align=\"center\">{n.email}</TableCell>\n                      <TableCell align=\"center\">{n.phone}</TableCell>\n                      <TableCell align=\"center\">{n.clients}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            \"aria-label\": \"Previous Page\"\n          }}\n          nextIconButtonProps={{\n            \"aria-label\": \"Next Page\"\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </Paper>\n    );\n  }\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EnhancedTable);\n"]},"metadata":{},"sourceType":"module"}