{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/goalsObjectives.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n  root: {\n    width: \"77.5%\",\n    marginLeft: theme.spacing.unit * 22,\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit * 8,\n    //marginRight: theme.spacing.unit,\n    // marginTop: theme.spacing.unit,\n    width: 300\n  },\n  button: {\n    marginLeft: theme.spacing(2)\n  },\n  saveButton: {\n    marginRight: theme.spacing(2)\n  }\n});\n\nclass TopPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      goal1: \"\",\n      obj1: \"\"\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange2 = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange3 = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-goal1\" //variant=\"outlined\"\n      ,\n      label: \"Goal\",\n      className: classes.textField,\n      value: this.state.goal1,\n      onChange: this.handleChange(\"goal1\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-obj1\",\n      label: \"Objective\" //variant=\"outlined\"\n      ,\n      className: classes.textField2,\n      value: this.state.obj1,\n      onChange: this.handleChange(\"obj1\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"medium\",\n      variant: \"contained\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"+\"), React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TopPanel);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/goalsObjectives.js"],"names":["React","PropTypes","withStyles","Paper","Grid","TextField","Button","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","width","root","paddingTop","paddingBottom","textField2","button","saveButton","TopPanel","Component","state","goal1","obj1","handleChange","name","event","setState","target","value","handleChange2","handleChange3","render","classes","props","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n\n  root: {\n    width: \"77.5%\",\n    marginLeft: theme.spacing.unit * 22,\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2\n  },\n\n  textField2: {\n    marginLeft: theme.spacing.unit * 8,\n    //marginRight: theme.spacing.unit,\n    // marginTop: theme.spacing.unit,\n    width: 300\n  },\n\n  button: {\n    marginLeft: theme.spacing(2)\n  },\n\n  saveButton: {\n    marginRight: theme.spacing(2)\n  }\n});\n\nclass TopPanel extends React.Component {\n  state = {\n    goal1: \"\",\n    obj1: \"\"\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChange2 = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n  handleChange3 = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <Paper className={classes.root} elevation={1}>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <TextField\n              id=\"standard-goal1\"\n              //variant=\"outlined\"\n              label=\"Goal\"\n              className={classes.textField}\n              value={this.state.goal1}\n              onChange={this.handleChange(\"goal1\")}\n              margin=\"normal\"\n            />\n\n            <TextField\n              id=\"standard-obj1\"\n              label=\"Objective\"\n              //variant=\"outlined\"\n              className={classes.textField2}\n              value={this.state.obj1}\n              onChange={this.handleChange(\"obj1\")}\n              margin=\"normal\"\n            />\n          </Grid>\n          <Grid container direction=\"row\" justify=\"space-between\">\n            <Button\n              size=\"medium\"\n              variant=\"contained\"\n              className={classes.button}\n            >\n              +\n            </Button>\n            <Button\n              className={classes.saveButton}\n              size=\"large\"\n              variant=\"contained\"\n            >\n              Save\n            </Button>\n          </Grid>\n        </Paper>\n      </form>\n    );\n  }\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TopPanel);\n"]},"metadata":{},"sourceType":"module"}