{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/frontEndTest4.js\";\nimport React, { Component } from \"react\"; //import Validation from 'react-validation';\n//import \"../validation.js\";\n\nexport default class Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      email: \"\",\n      msg: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var data = {\n      title: this.state.title,\n      email: this.state.email\n    };\n    console.log(data);\n    fetch(\"http://localhost:5000/putData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(function (response) {\n      if (response.status >= 400) {\n        throw new Error(\"Bad response from server\");\n      }\n\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n\n      if (data === \"success\") {\n        this.setState({\n          msg: \"Thanks for registering\"\n        });\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  logChange(e) {\n    this.setState({\n      [e.target.title]: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      ref: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/frontEndTest4.js"],"names":["React","Component","Registration","constructor","props","state","title","email","msg","handleSubmit","bind","event","preventDefault","data","console","log","fetch","method","headers","body","JSON","stringify","then","response","status","Error","json","setState","catch","err","logChange","e","target","value","render","onSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AAEA,eAAe,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAClDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,GAAG,EAAE;AAHM,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,IAAI,GAAG;AACTP,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KADT;AAETC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAFT,KAAX;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAG,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,MAAAA,MAAM,EAAE,MAD6B;AAErCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF4B;AAGrCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAH+B,KAAlC,CAAL,CAKGS,IALH,CAKQ,UAASC,QAAT,EAAmB;AACvB,UAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,aAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,KAVH,EAWGJ,IAXH,CAWQ,UAAST,IAAT,EAAe;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAIA,IAAI,KAAK,SAAb,EAAwB;AACtB,aAAKc,QAAL,CAAc;AAAEnB,UAAAA,GAAG,EAAE;AAAP,SAAd;AACD;AACF,KAhBH,EAiBGoB,KAjBH,CAiBS,UAASC,GAAT,EAAc;AACnBf,MAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACD,KAnBH;AAoBD;;AAEDC,EAAAA,SAAS,CAACC,CAAD,EAAI;AACX,SAAKJ,QAAL,CAAc;AAAE,OAACI,CAAC,CAACC,MAAF,CAAS1B,KAAV,GAAkByB,CAAC,CAACC,MAAF,CAASC;AAA7B,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,OAA/B;AAAuC,MAAA,GAAG,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AApDiD","sourcesContent":["import React, { Component } from \"react\";\n//import Validation from 'react-validation';\n//import \"../validation.js\";\n\nexport default class Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      email: \"\",\n      msg: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var data = {\n      title: this.state.title,\n      email: this.state.email\n    };\n    console.log(data);\n    fetch(\"http://localhost:5000/putData\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data)\n    })\n      .then(function(response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n        return response.json();\n      })\n      .then(function(data) {\n        console.log(data);\n        if (data === \"success\") {\n          this.setState({ msg: \"Thanks for registering\" });\n        }\n      })\n      .catch(function(err) {\n        console.log(err);\n      });\n  }\n\n  logChange(e) {\n    this.setState({ [e.target.title]: e.target.value });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input type=\"text\" placeholder=\"Title\" ref=\"Title\" />\n\n        <input type=\"submit\" />\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}