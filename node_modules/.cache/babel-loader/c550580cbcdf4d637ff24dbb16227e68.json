{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos/MTSaaSRepo/mtsaas/src/templatesTable.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Button from \"@material-ui/core/Button\";\nimport NewEventDialog from \"./newEventDialog\";\nlet counter = 0;\n\nfunction createData(template, viewableByTherapist, dateCreated) {\n  counter += 1;\n  return {\n    id: counter,\n    template,\n    viewableByTherapist,\n    dateCreated\n  };\n}\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [{\n  id: \"template\",\n  //numeric: false,\n  //disablePadding: false,\n  label: \"Template\"\n}, {\n  id: \"viewableByTherapist\",\n  //numeric: false,\n  //disablePadding: false,\n  label: \"Viewable by Therapist\"\n}, {\n  id: \"dateCreated\",\n  //numeric: false,\n  // disablePadding: false,\n  label: \"Date Created\"\n}];\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: lightBlue[400],\n    color: theme.palette.common.white,\n    fontSize: 15\n  },\n  body: {\n    fontSize: 12\n  }\n}))(TableCell);\n\nclass EnhancedTableHead extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createSortHandler = property => event => {\n      this.props.onRequestSort(event, property);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          onSelectAllClick = _this$props.onSelectAllClick,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy,\n          numSelected = _this$props.numSelected,\n          rowCount = _this$props.rowCount;\n    return React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(CustomTableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      indeterminate: numSelected > 0 && numSelected < rowCount,\n      checked: numSelected === rowCount,\n      onChange: onSelectAllClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), rows.map(row => React.createElement(CustomTableCell, {\n      key: row.id //align={row.numeric ? \"right\" : \"left\"}\n      ,\n      align: \"center\" //padding={row.disablePadding ? \"none\" : \"default\"}\n      ,\n      sortDirection: orderBy === row.id ? order : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(TableSortLabel, {\n      active: orderBy === row.id,\n      direction: order,\n      onClick: this.createSortHandler(row.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, row.label)), this)));\n  }\n\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    overflowX: \"auto\"\n  },\n  table: {//minWidth: 500\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  },\n  state: {\n    open: false,\n    openV: false\n  }\n});\n\nclass EnhancedTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      order: \"\",\n      orderBy: \"\",\n      selected: [],\n      data: [createData(\"Main Packet\", \"Yes\", \"1/2/17\"), createData(\"Financial Policy\", \"Yes\", \"1/2/17\"), createData(\"AV Policy\", \"Yes\", \"1/2/17\")],\n      page: 0,\n      rowsPerPage: 5\n    };\n\n    this.handleRequestSort = (event, property) => {\n      const orderBy = property;\n      let order = \"desc\";\n\n      if (this.state.orderBy === property && this.state.order === \"desc\") {\n        order = \"asc\";\n      }\n\n      this.setState({\n        order,\n        orderBy\n      });\n    };\n\n    this.handleSelectAllClick = event => {\n      if (event.target.checked) {\n        this.setState(state => ({\n          selected: state.data.map(n => n.id)\n        }));\n        return;\n      }\n\n      this.setState({\n        selected: []\n      });\n    };\n\n    this.handleClick = (event, id) => {\n      const selected = this.state.selected;\n      const selectedIndex = selected.indexOf(id);\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      this.setState({\n        selected: newSelected\n      });\n    };\n\n    this.handleChangePage = (event, page) => {\n      this.setState({\n        page\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    this.isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          data = _this$state.data,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy,\n          selected = _this$state.selected,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n    return React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.tableWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      \"aria-labelledby\": \"tableTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(EnhancedTableHead, {\n      numSelected: selected.length,\n      order: order,\n      orderBy: orderBy,\n      onSelectAllClick: this.handleSelectAllClick,\n      onRequestSort: this.handleRequestSort,\n      rowCount: data.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, stableSort(data, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(n => {\n      const isSelected = this.isSelected(n.id);\n      return React.createElement(TableRow, {\n        hover: true,\n        className: classes.row,\n        role: \"checkbox\",\n        \"aria-checked\": isSelected,\n        tabIndex: -1,\n        key: n.id,\n        selected: isSelected,\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        onClick: event => this.handleClick(event, n.id),\n        checked: isSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      })), React.createElement(TableCell, {\n        align: \"center\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, n.template), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, n.viewableByTherapist), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, n.dateCreated));\n    }), emptyRows > 0 && React.createElement(TableRow, {\n      style: {\n        height: 49 * emptyRows\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      colSpan: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }))))), React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: data.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        \"aria-label\": \"Previous Page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"Next Page\"\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(NewEventDialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(EnhancedTable);","map":{"version":3,"sources":["/Users/kenneth/repos/MTSaaSRepo/mtsaas/src/templatesTable.js"],"names":["React","classNames","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","FilterListIcon","lighten","lightBlue","Dialog","DialogActions","DialogContent","Button","NewEventDialog","counter","createData","template","viewableByTherapist","dateCreated","id","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","rows","label","CustomTableCell","theme","head","backgroundColor","color","palette","common","white","fontSize","body","EnhancedTableHead","Component","createSortHandler","property","event","props","onRequestSort","render","onSelectAllClick","numSelected","rowCount","row","propTypes","number","isRequired","func","string","styles","root","width","marginTop","spacing","unit","marginLeft","overflowX","table","background","default","state","open","openV","EnhancedTable","selected","data","page","rowsPerPage","handleRequestSort","setState","handleSelectAllClick","target","checked","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","handleChangeRowsPerPage","value","isSelected","handleClickOpen","handleClose","classes","emptyRows","Math","min","tableWrapper","height","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Button from \"@material-ui/core/Button\";\nimport NewEventDialog from \"./newEventDialog\";\n\nlet counter = 0;\nfunction createData(template, viewableByTherapist, dateCreated) {\n  counter += 1;\n  return {\n    id: counter,\n\n    template,\n    viewableByTherapist,\n    dateCreated\n  };\n}\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [\n  {\n    id: \"template\",\n    //numeric: false,\n    //disablePadding: false,\n    label: \"Template\"\n  },\n\n  {\n    id: \"viewableByTherapist\",\n    //numeric: false,\n    //disablePadding: false,\n    label: \"Viewable by Therapist\"\n  },\n  {\n    id: \"dateCreated\",\n    //numeric: false,\n    // disablePadding: false,\n    label: \"Date Created\"\n  }\n];\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: lightBlue[400],\n    color: theme.palette.common.white,\n    fontSize: 15\n  },\n  body: {\n    fontSize: 12\n  }\n}))(TableCell);\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const {\n      onSelectAllClick,\n      order,\n      orderBy,\n      numSelected,\n      rowCount\n    } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <CustomTableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={numSelected === rowCount}\n              onChange={onSelectAllClick}\n            />\n          </CustomTableCell>\n          {rows.map(\n            row => (\n              <CustomTableCell\n                key={row.id}\n                //align={row.numeric ? \"right\" : \"left\"}\n                align=\"center\"\n                //padding={row.disablePadding ? \"none\" : \"default\"}\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <TableSortLabel\n                  active={orderBy === row.id}\n                  direction={order}\n                  onClick={this.createSortHandler(row.id)}\n                >\n                  {row.label}\n                </TableSortLabel>\n              </CustomTableCell>\n            ),\n            this\n          )}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    overflowX: \"auto\"\n  },\n  table: {\n    //minWidth: 500\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  },\n\n  state: {\n    open: false,\n    openV: false\n  }\n});\n\nclass EnhancedTable extends React.Component {\n  state = {\n    order: \"\",\n    orderBy: \"\",\n    selected: [],\n    data: [\n      createData(\"Main Packet\", \"Yes\", \"1/2/17\"),\n      createData(\"Financial Policy\", \"Yes\", \"1/2/17\"),\n      createData(\"AV Policy\", \"Yes\", \"1/2/17\")\n    ],\n    page: 0,\n    rowsPerPage: 5\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = \"desc\";\n\n    if (this.state.orderBy === property && this.state.order === \"desc\") {\n      order = \"asc\";\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleSelectAllClick = event => {\n    if (event.target.checked) {\n      this.setState(state => ({ selected: state.data.map(n => n.id) }));\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    this.setState({ selected: newSelected });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  /* show new event dialog box */\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  /* close new event dialog box */\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { data, order, orderBy, selected, rowsPerPage, page } = this.state;\n    const emptyRows =\n      rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={this.handleSelectAllClick}\n              onRequestSort={this.handleRequestSort}\n              rowCount={data.length}\n            />\n            <TableBody>\n              {stableSort(data, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(n => {\n                  const isSelected = this.isSelected(n.id);\n                  return (\n                    <TableRow\n                      hover\n                      className={classes.row}\n                      role=\"checkbox\"\n                      aria-checked={isSelected}\n                      tabIndex={-1}\n                      key={n.id}\n                      selected={isSelected}\n                      align=\"center\"\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          onClick={event => this.handleClick(event, n.id)}\n                          checked={isSelected}\n                        />\n                      </TableCell>\n                      <TableCell align=\"center\" onClick={this.handleClickOpen}>\n                        {n.template}\n                      </TableCell>\n\n                      <TableCell align=\"center\">\n                        {n.viewableByTherapist}\n                      </TableCell>\n                      <TableCell align=\"center\">{n.dateCreated}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            \"aria-label\": \"Previous Page\"\n          }}\n          nextIconButtonProps={{\n            \"aria-label\": \"Next Page\"\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n\n        <Dialog open={this.state.open} onClose={this.handleClose}>\n          <DialogContent>\n            <NewEventDialog />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Paper>\n    );\n  }\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EnhancedTable);\n"]},"metadata":{},"sourceType":"module"}