{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/teamMemberActions.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport FilterIcon from \"@material-ui/icons/FilterList\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    marginTop: theme.spacing(5),\n    marginLeft: theme.spacing(65),\n    align: \"center\",\n    width: \"19.5%\"\n  },\n  button: {\n    margin: theme.spacing.unit\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300\n  }\n});\n\nconst titles = [{\n  value: \"\",\n  label: \"\"\n}, {\n  value: \"Dr.\",\n  label: \"Dr.\"\n}, {\n  value: \"Miss\",\n  label: \"Miss\"\n}, {\n  value: \"Mr.\",\n  label: \"Mr.\"\n}, {\n  value: \"Mrs.\",\n  label: \"Mrs.\"\n}, {\n  value: \"Ms.\",\n  label: \"Ms.\"\n}, {\n  value: \"Mx.\",\n  label: \"Mx.\"\n}];\n\nclass teamMemberActions extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      openV: false,\n      newFirstName: \"\",\n      newLastName: \"\",\n      newEmail: \"\",\n      newTitle: \"\",\n      newPass: \"\",\n      newConfirmPass: \"\",\n      newPhone: \"\",\n      newAddress: \"\",\n      newLocation: \"\",\n      newNPI: \"\",\n      newCity: \"\",\n      newZip: \"\"\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClickOpen2 = () => {\n      this.setState({\n        openV: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/members\").then(response => {\n      console.log(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted!\");\n    }\n  }\n\n  onSubmit(e) {\n    //e.preventDefault();\n    const obj = {\n      //title: this.state.title,\n      newFirstName: this.state.newFirstName,\n      newLastName: this.state.newLastName,\n      newEmail: this.state.newEmail,\n      newTitle: this.state.newTitle,\n      newPass: this.state.newPass,\n      newConfirmPass: this.state.newConfirmPass,\n      newPhone: this.state.newPhone,\n      newAddress: this.state.newAddress,\n      newLocation: this.state.newLocation,\n      newNPI: this.state.newNPI,\n      newCity: this.state.newCity,\n      newZip: this.state.newZip\n    };\n    axios.post(\"http://localhost:5000/putData2\", obj).then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      newFirstName: \"\",\n      newLastName: \"\",\n      newEmail: \"\",\n      newTitle: \"\",\n      newPass: \"\",\n      newConfirmPass: \"\",\n      newPhone: \"\",\n      newAddress: \"\",\n      newLocation: \"\",\n      newNPI: \"\",\n      newCity: \"\",\n      newZip: \"\"\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          phone = _this$state.phone,\n          npi = _this$state.npi,\n          role = _this$state.role;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      className: classes.button,\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      className: classNames(classes.leftIcon, classes.iconSmall),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), \"Add New\"), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-title\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.newTitle,\n      onChange: this.handleChange(\"newTitle\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.newPhone,\n      onChange: this.handleChange(\"newPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-firstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.newFirstName,\n      onChange: this.handleChange(\"newFirstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.newEmail,\n      onChange: this.handleChange(\"newEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.newLastName,\n      onChange: this.handleChange(\"newLastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-address\",\n      variant: \"outlined\",\n      label: \"Address\",\n      className: classes.textField,\n      value: this.state.newAddress,\n      onChange: this.handleChange(\"newAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-password-input\",\n      variant: \"outlined\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.newPass,\n      onChange: this.handleChange(\"newPass\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-city-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.newCity,\n      onChange: this.handleChange(\"newCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-confirmPassword-input\",\n      variant: \"outlined\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.newConfirmPass,\n      onChange: this.handleChange(\"newConfirmPass\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-zipCode\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.newZip,\n      onChange: this.handleChange(\"newZip\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-npi\",\n      variant: \"outlined\",\n      label: \"NPI Number\",\n      className: classes.textField,\n      value: this.state.newNPI,\n      onChange: this.handleChange(\"newNPI\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-primary-location\",\n      variant: \"outlined\",\n      label: \"Primary Location\",\n      className: classes.textField,\n      value: this.state.newLocation,\n      onChange: this.handleChange(\"newLocation\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: () => {\n        this.onSubmit( //this.state.title,\n        this.state.newBillType, this.state.newClientType, this.state.newClient, this.state.thereapist, this.state.newLocation, this.state.newCategory, this.state.selectedDate, this.state.endSelectedDate); //this.reloadPage();\n      },\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"Save\")))), React.createElement(Dialog, {\n      open: this.state.openV,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \"Show\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      component: \"fieldset\",\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: name,\n        onChange: this.handleChange(\"name\"),\n        value: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }),\n      label: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: email,\n        onChange: this.handleChange(\"email\"),\n        value: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }),\n      label: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: phone,\n        onChange: this.handleChange(\"phone\"),\n        value: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }),\n      label: \"Phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: npi,\n        onChange: this.handleChange(\"npi\"),\n        value: \"npi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }),\n      label: \"NPI\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: role,\n        onChange: this.handleChange(\"role\"),\n        value: \"role\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }),\n      label: \"Role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nteamMemberActions.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(teamMemberActions);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/teamMemberActions.js"],"names":["React","PropTypes","withStyles","Paper","Typography","classNames","Button","AddIcon","EmailIcon","FilterIcon","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","FormGroup","FormControlLabel","Checkbox","VisibilityIcon","TextField","MenuItem","axios","styles","theme","root","paddingTop","spacing","paddingBottom","marginTop","marginLeft","align","width","button","margin","unit","leftIcon","marginRight","rightIcon","iconSmall","fontSize","container","display","flexWrap","textField","titles","value","label","teamMemberActions","Component","state","open","openV","newFirstName","newLastName","newEmail","newTitle","newPass","newConfirmPass","newPhone","newAddress","newLocation","newNPI","newCity","newZip","handleChange","name","event","setState","target","handleClickOpen","handleClickOpen2","handleClose","componentDidMount","get","then","response","console","log","data","catch","error","componentWillUnmount","intervalIsSet","clearInterval","onSubmit","e","obj","post","res","render","classes","props","email","phone","npi","role","MenuProps","className","menu","map","option","newBillType","newClientType","newClient","thereapist","newCategory","selectedDate","endSelectedDate","formControl","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport FilterIcon from \"@material-ui/icons/FilterList\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    marginTop: theme.spacing(5),\n    marginLeft: theme.spacing(65),\n    align: \"center\",\n    width: \"19.5%\"\n  },\n  button: {\n    margin: theme.spacing.unit\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300\n  }\n});\n\nconst titles = [\n  {\n    value: \"\",\n    label: \"\"\n  },\n\n  {\n    value: \"Dr.\",\n    label: \"Dr.\"\n  },\n\n  {\n    value: \"Miss\",\n    label: \"Miss\"\n  },\n\n  {\n    value: \"Mr.\",\n    label: \"Mr.\"\n  },\n  {\n    value: \"Mrs.\",\n    label: \"Mrs.\"\n  },\n  {\n    value: \"Ms.\",\n    label: \"Ms.\"\n  },\n  {\n    value: \"Mx.\",\n    label: \"Mx.\"\n  }\n];\n\nclass teamMemberActions extends React.Component {\n  state = {\n    open: false,\n    openV: false,\n    newFirstName: \"\",\n    newLastName: \"\",\n    newEmail: \"\",\n    newTitle: \"\",\n    newPass: \"\",\n    newConfirmPass: \"\",\n    newPhone: \"\",\n    newAddress: \"\",\n    newLocation: \"\",\n    newNPI: \"\",\n    newCity: \"\",\n    newZip: \"\"\n  };\n\n  /* change of team member dropdown */\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  /* show assign client diaglog box */\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  /* show assign client diaglog box */\n  handleClickOpen2 = () => {\n    this.setState({ openV: true });\n  };\n\n  /* close assign client diaglog box */\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/members\")\n      .then(response => {\n        console.log(response.data);\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted!\");\n    }\n  }\n\n  onSubmit(e) {\n    //e.preventDefault();\n    const obj = {\n      //title: this.state.title,\n      newFirstName: this.state.newFirstName,\n      newLastName: this.state.newLastName,\n      newEmail: this.state.newEmail,\n      newTitle: this.state.newTitle,\n      newPass: this.state.newPass,\n      newConfirmPass: this.state.newConfirmPass,\n      newPhone: this.state.newPhone,\n      newAddress: this.state.newAddress,\n      newLocation: this.state.newLocation,\n      newNPI: this.state.newNPI,\n      newCity: this.state.newCity,\n      newZip: this.state.newZip\n    };\n    axios\n      .post(\"http://localhost:5000/putData2\", obj)\n      .then(res => console.log(res.data));\n\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      newFirstName: \"\",\n      newLastName: \"\",\n      newEmail: \"\",\n      newTitle: \"\",\n      newPass: \"\",\n      newConfirmPass: \"\",\n      newPhone: \"\",\n      newAddress: \"\",\n      newLocation: \"\",\n      newNPI: \"\",\n      newCity: \"\",\n      newZip: \"\"\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { name, email, phone, npi, role } = this.state;\n\n    return (\n      <div>\n        <Paper className={classes.root} elevation={7}>\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            onClick={this.handleClickOpen}\n          >\n            <AddIcon\n              className={classNames(classes.leftIcon, classes.iconSmall)}\n            />\n            Add New\n          </Button>\n          {/*\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            onClick={this.handleClickOpen}\n          >\n           \n            <VisibilityIcon\n              className={classNames(classes.leftIcon, classes.iconSmall)}\n            />\n            Show\n          </Button>\n            */}\n\n          <Dialog open={this.state.open} onClose={this.handleClose}>\n            <form className={classes.container} noValidate autoComplete=\"off\">\n              <DialogContent>\n                <TextField\n                  id=\"standard-select-title\"\n                  select\n                  label=\"Title\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.newTitle}\n                  onChange={this.handleChange(\"newTitle\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {titles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                <TextField\n                  id=\"standard-phone\"\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  className={classes.textField}\n                  value={this.state.newPhone}\n                  onChange={this.handleChange(\"newPhone\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-firstName\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.newFirstName}\n                  onChange={this.handleChange(\"newFirstName\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-email\"\n                  variant=\"outlined\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  value={this.state.newEmail}\n                  onChange={this.handleChange(\"newEmail\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-lastNamename\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.newLastName}\n                  onChange={this.handleChange(\"newLastName\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-address\"\n                  variant=\"outlined\"\n                  label=\"Address\"\n                  className={classes.textField}\n                  value={this.state.newAddress}\n                  onChange={this.handleChange(\"newAddress\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-password-input\"\n                  variant=\"outlined\"\n                  label=\"Password\"\n                  className={classes.textField}\n                  type=\"password\"\n                  value={this.state.newPass}\n                  onChange={this.handleChange(\"newPass\")}\n                  //autoComplete=\"current-password\"\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-city-\"\n                  variant=\"outlined\"\n                  label=\"City\"\n                  className={classes.textField}\n                  value={this.state.newCity}\n                  onChange={this.handleChange(\"newCity\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-confirmPassword-input\"\n                  variant=\"outlined\"\n                  label=\"Confirm Password\"\n                  className={classes.textField}\n                  type=\"password\"\n                  value={this.state.newConfirmPass}\n                  onChange={this.handleChange(\"newConfirmPass\")}\n                  //autoComplete=\"current-password\"\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-zipCode\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.newZip}\n                  onChange={this.handleChange(\"newZip\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-npi\"\n                  variant=\"outlined\"\n                  label=\"NPI Number\"\n                  className={classes.textField}\n                  value={this.state.newNPI}\n                  onChange={this.handleChange(\"newNPI\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-primary-location\"\n                  variant=\"outlined\"\n                  label=\"Primary Location\"\n                  className={classes.textField}\n                  value={this.state.newLocation}\n                  onChange={this.handleChange(\"newLocation\")}\n                  margin=\"normal\"\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleClose} color=\"primary\">\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => {\n                    this.onSubmit(\n                      //this.state.title,\n                      this.state.newBillType,\n                      this.state.newClientType,\n                      this.state.newClient,\n                      this.state.thereapist,\n                      this.state.newLocation,\n                      this.state.newCategory,\n                      this.state.selectedDate,\n                      this.state.endSelectedDate\n                    );\n                    //this.reloadPage();\n                  }}\n                  color=\"primary\"\n                >\n                  Save\n                </Button>\n                {/*\n                <Button onClick={this.reloadPage} color=\"primary\">\n                  Close\n                </Button>\n*/}\n              </DialogActions>\n            </form>\n          </Dialog>\n\n          {/* 'Show more' dialog box */}\n          <Dialog open={this.state.openV} onClose={this.handleClose}>\n            <DialogTitle id=\"form-dialog-title\">Show</DialogTitle>\n            <DialogContent>\n              <FormControl component=\"fieldset\" className={classes.formControl}>\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={name}\n                        onChange={this.handleChange(\"name\")}\n                        value=\"name\"\n                      />\n                    }\n                    label=\"Name\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={email}\n                        onChange={this.handleChange(\"email\")}\n                        value=\"email\"\n                      />\n                    }\n                    label=\"Email\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={phone}\n                        onChange={this.handleChange(\"phone\")}\n                        value=\"phone\"\n                      />\n                    }\n                    label=\"Phone\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={npi}\n                        onChange={this.handleChange(\"npi\")}\n                        value=\"npi\"\n                      />\n                    }\n                    label=\"NPI\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={role}\n                        onChange={this.handleChange(\"role\")}\n                        value=\"role\"\n                      />\n                    }\n                    label=\"Role\"\n                  />\n                </FormGroup>\n              </FormControl>\n            </DialogContent>\n          </Dialog>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nteamMemberActions.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(teamMemberActions);\n"]},"metadata":{},"sourceType":"module"}