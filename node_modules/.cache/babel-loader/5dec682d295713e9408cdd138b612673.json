{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/newClientConsolidate.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    // marginBottom: theme.spacing(10),\n    width: 850\n  },\n  title: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  title2: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  },\n  menu2: {\n    width: 200\n  },\n  root2: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  saveButton: {\n    marginRight: theme.spacing(2)\n  }\n});\n\nconst titles = [{\n  value: \"\",\n  label: \"\"\n}, {\n  value: \"Dr.\",\n  label: \"Dr.\"\n}, {\n  value: \"Miss\",\n  label: \"Miss\"\n}, {\n  value: \"Mr.\",\n  label: \"Mr.\"\n}, {\n  value: \"Mrs.\",\n  label: \"Mrs.\"\n}, {\n  value: \"Ms.\",\n  label: \"Ms.\"\n}, {\n  value: \"Mx.\",\n  label: \"Mx.\"\n}];\nconst paymentTypes = [{\n  value: \"Card\",\n  label: \"Card\"\n}, {\n  value: \"Cash\",\n  label: \"Cash\"\n}, {\n  value: \"Check\",\n  label: \"Check\"\n}];\nconst cardTypes = [{\n  value: \"American Express\",\n  label: \"American Express\"\n}, {\n  value: \"Discover\",\n  label: \"Discover\"\n}, {\n  value: \"MasterCard\",\n  label: \"MasterCard\"\n}, {\n  value: \"Visa\",\n  label: \"Visa\"\n}];\n\nclass TopPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //client info state\n      clientFirstName: \"\",\n      clientLastName: \"\",\n      clientEmail: \"\",\n      clientTitle: \"\",\n      clientCurrentPassword: \"\",\n      clientConfirmPassword: \"\",\n      clientPhone: \"\",\n      clientAddress: \"\",\n      //primaryLocation: \"\",\n      clientBday: \"\",\n      clientCity: \"\",\n      clientZipCode: \"\",\n      clientStreetAddress: \"\",\n      contactNotes: \"\",\n      multiline: \"Controlled\",\n      //contact info state\n      contactFirstName: \"John\",\n      contactLastName: \"Smith\",\n      contactEmail: \"jsmith@mail.com\",\n      contactTitle: \"Mr.\",\n      contactPhone: \"123-456-1111\",\n      contactAddress: \"123 Maple Street\",\n      contactCity: \"Plano\",\n      contactState: \"TX\",\n      contactZip: \"75023\",\n      //payor info state\n      nameOnCard: \"Jeff A. Smith\",\n      cardNum: \"111122223333\",\n      payorEmail: \"jeffsmith@mail.com\",\n      payorTitle: \"Mr.\",\n      paymentType: \"Card\",\n      billingPhone: \"123-456-1111\",\n      billingAddress: \"123 Maple Street\",\n      billingCity: \"Plano\",\n      billingZip: \"75023\",\n      billingState: \"TX\",\n      cvv: \"000\",\n      expDate: \"03/17\",\n      cardType: \"Visa\",\n      sameAsContact: false\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange2 = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/allclients\").then(response => {\n      console.log(\"Got client data!\");\n      console.log(response.data);\n      this.setState({\n        memberData: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Client data interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n    const obj = {\n      clientFirstName: this.state.clientFirstName,\n      clientLastName: this.state.clientLastName,\n      clientEmail: this.state.clientEmail,\n      clientTitle: this.state.clientTitle,\n      clientCurrentPassword: this.state.clientCurrentPassword,\n      clientConfirmPassword: this.state.clientConfirmPassword,\n      clientPhone: this.state.clientPhone,\n      clientAddress: this.state.clientAddress,\n      //primaryLocation: this.state.primaryLocation,\n      clientBday: this.state.clientBday,\n      clientCity: this.state.clientCity,\n      clientZipCode: this.state.clientZipCode,\n      clientStreetAddress: this.state.clientStreetAddress,\n      contactNotes: this.state.contactNotes\n    };\n    axios.post(\"http://localhost:5000/clients/registerclient\", obj).then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      clientFirstName: this.state.clientFirstName,\n      clientLastName: this.state.clientLastName,\n      clientEmail: this.state.clientEmail,\n      clientTitle: this.state.clientTitle,\n      clientCurrentPassword: this.state.clientCurrentPassword,\n      clientConfirmPassword: this.state.clientConfirmPassword,\n      clientPhone: this.state.clientPhone,\n      clientAddress: this.state.clientAddress,\n      //primaryLocation: this.state.primaryLocation,\n      clientBday: this.state.clientBday,\n      clientCity: this.state.clientCity,\n      clientZipCode: this.state.clientZipCode,\n      clientStreetAddress: this.state.clientStreetAddress,\n      contactNotes: this.state.contactNotes\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(Container, {\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Client Information\"), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-title\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.title,\n      onChange: this.handleChange(\"title\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      required: true,\n      id: \"standard-firstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.firstName,\n      onChange: this.handleChange(\"firstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.lastName,\n      onChange: this.handleChange(\"lastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.email,\n      onChange: this.handleChange(\"email\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-password-input\",\n      variant: \"outlined\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.currentPassword,\n      onChange: this.handleChange(\"currentPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-confirmPassword-input\",\n      variant: \"outlined\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange(\"confirmPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-address\",\n      variant: \"outlined\",\n      label: \"Address\",\n      className: classes.textField,\n      value: this.state.address,\n      onChange: this.handleChange(\"address\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-city-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.city,\n      onChange: this.handleChange(\"city\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.streetAddress,\n      onChange: this.handleChange(\"streetAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-zipCode\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.zipCode,\n      onChange: this.handleChange(\"zipCode\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.phone,\n      onChange: this.handleChange(\"phone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-bday\",\n      variant: \"outlined\",\n      label: \"Birthday\",\n      className: classes.textField,\n      value: this.state.bday,\n      onChange: this.handleChange(\"bday\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      column: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\",\n      label: \"Additional Notes\",\n      style: {\n        margin: 8\n      },\n      className: classes.textField2,\n      value: this.state.notes,\n      onChange: this.handleChange(\"notes\"),\n      placeholder: \"Add any additional notes here\",\n      fullWidth: true,\n      multiline: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \"Contact Information\")), React.createElement(TextField, {\n      id: \"standard-select-contactTitle\",\n      select: true,\n      label: \"contactTitle\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactTitle,\n      onChange: this.handleChange(\"contactTitle\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactFirstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactFirstName,\n      onChange: this.handleChange(\"contactFirstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactLastName,\n      onChange: this.handleChange(\"contactLastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactAddress\",\n      variant: \"outlined\",\n      label: \"contactAddress\",\n      className: classes.textField,\n      value: this.state.contactAddress,\n      onChange: this.handleChange(\"contactAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactCity-\",\n      variant: \"outlined\",\n      label: \"contactCity\",\n      className: classes.textField,\n      value: this.state.contactCity,\n      onChange: this.handleChange(\"contactCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.contactState,\n      onChange: this.handleChange(\"contactState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactZip\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.contactZip,\n      onChange: this.handleChange(\"contactZip\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactEmail\",\n      variant: \"outlined\",\n      label: \"contactEmail\",\n      className: classes.textField,\n      value: this.state.contactEmail,\n      onChange: this.handleChange(\"contactEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactPhone\",\n      variant: \"outlined\",\n      label: \"contactPhone Number\",\n      className: classes.textField,\n      value: this.state.contactPhone,\n      onChange: this.handleChange(\"contactPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title2,\n      align: \"center\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, \"Payor Information\")), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-paymentType\",\n      select: true,\n      label: \"Payment Type\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.paymentType,\n      onChange: this.handleChange(\"paymentType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, paymentTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-select-payorTitle\",\n      select: true,\n      label: \"payorTitle\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.payorTitle,\n      onChange: this.handleChange(\"payorTitle\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-select-cardType\",\n      select: true,\n      label: \"Card Type\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cardType,\n      onChange: this.handleChange(\"cardType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, cardTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-billingAddress\",\n      variant: \"outlined\",\n      label: \"Billing billingAddress\",\n      className: classes.textField,\n      value: this.state.billingAddress,\n      onChange: this.handleChange(\"billingAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-nameOnCard\",\n      label: \"Name on Card\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.nameOnCard,\n      onChange: this.handleChange(\"nameOnCard\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-cardNum\",\n      label: \"Card Number\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cardNum,\n      onChange: this.handleChange(\"cardNum\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-billingCity-\",\n      variant: \"outlined\",\n      label: \"billingCity\",\n      className: classes.textField,\n      value: this.state.billingCity,\n      onChange: this.handleChange(\"billingCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-payorEmail\",\n      variant: \"outlined\",\n      label: \"payorEmail\",\n      className: classes.textField,\n      value: this.state.payorEmail,\n      onChange: this.handleChange(\"payorEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-expDate\",\n      variant: \"outlined\",\n      label: \"Expiration Date\",\n      className: classes.textField,\n      value: this.state.expDate,\n      onChange: this.handleChange(\"expDate\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.billingState,\n      onChange: this.handleChange(\"billingState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Billing Phone Number\",\n      className: classes.textField,\n      value: this.state.billingPhone,\n      onChange: this.handleChange(\"billingPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-cvv\",\n      label: \"CVV\",\n      type: \"password\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cvv,\n      onChange: this.handleChange(\"cvv\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-billingZip\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.billingZip,\n      onChange: this.handleChange(\"billingZip\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721\n      },\n      __self: this\n    }), React.createElement(Button, {\n      size: \"medium\",\n      variant: \"contained\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731\n      },\n      __self: this\n    }, \"+\"), React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      onClick: () => {\n        this.onSubmit(this.state.firstName, this.state.lastName, this.state.email, this.state.title, this.state.currentPassword, this.state.confirmPassword, this.state.phone, this.state.address, //this.state.primaryLocation,\n        this.state.bday, this.state.city, this.state.zipCode, this.state.streetAddress, this.state.notes); //this.reloadPage();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738\n      },\n      __self: this\n    }, \"Save\"))))));\n  }\n\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TopPanel);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/newClientConsolidate.js"],"names":["React","PropTypes","withStyles","Paper","Grid","MenuItem","TextField","Button","FormGroup","FormControlLabel","Checkbox","Container","Typography","axios","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","width","menu","root","paddingTop","paddingBottom","container2","textField2","title","align","marginTop","marginBottom","title2","menu2","root2","saveButton","titles","value","label","paymentTypes","cardTypes","TopPanel","Component","state","clientFirstName","clientLastName","clientEmail","clientTitle","clientCurrentPassword","clientConfirmPassword","clientPhone","clientAddress","clientBday","clientCity","clientZipCode","clientStreetAddress","contactNotes","multiline","contactFirstName","contactLastName","contactEmail","contactTitle","contactPhone","contactAddress","contactCity","contactState","contactZip","nameOnCard","cardNum","payorEmail","payorTitle","paymentType","billingPhone","billingAddress","billingCity","billingZip","billingState","cvv","expDate","cardType","sameAsContact","handleChange","name","event","setState","target","handleChange2","componentDidMount","get","then","response","console","log","data","memberData","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","onSubmit","obj","post","res","render","classes","props","MenuProps","className","map","option","firstName","lastName","email","currentPassword","confirmPassword","address","city","streetAddress","zipCode","phone","bday","margin","notes","shrink","button","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2\n  },\n\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    // marginBottom: theme.spacing(10),\n    width: 850\n  },\n  title: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  title2: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  },\n\n  menu2: {\n    width: 200\n  },\n  root2: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n\n  saveButton: {\n    marginRight: theme.spacing(2)\n  }\n});\n\nconst titles = [\n  {\n    value: \"\",\n    label: \"\"\n  },\n\n  {\n    value: \"Dr.\",\n    label: \"Dr.\"\n  },\n\n  {\n    value: \"Miss\",\n    label: \"Miss\"\n  },\n\n  {\n    value: \"Mr.\",\n    label: \"Mr.\"\n  },\n  {\n    value: \"Mrs.\",\n    label: \"Mrs.\"\n  },\n  {\n    value: \"Ms.\",\n    label: \"Ms.\"\n  },\n  {\n    value: \"Mx.\",\n    label: \"Mx.\"\n  }\n];\n\nconst paymentTypes = [\n  {\n    value: \"Card\",\n    label: \"Card\"\n  },\n\n  {\n    value: \"Cash\",\n    label: \"Cash\"\n  },\n\n  {\n    value: \"Check\",\n    label: \"Check\"\n  }\n];\n\nconst cardTypes = [\n  {\n    value: \"American Express\",\n    label: \"American Express\"\n  },\n\n  {\n    value: \"Discover\",\n    label: \"Discover\"\n  },\n\n  {\n    value: \"MasterCard\",\n    label: \"MasterCard\"\n  },\n  {\n    value: \"Visa\",\n    label: \"Visa\"\n  }\n];\n\nclass TopPanel extends React.Component {\n  state = {\n    //client info state\n    clientFirstName: \"\",\n    clientLastName: \"\",\n    clientEmail: \"\",\n    clientTitle: \"\",\n    clientCurrentPassword: \"\",\n    clientConfirmPassword: \"\",\n    clientPhone: \"\",\n    clientAddress: \"\",\n    //primaryLocation: \"\",\n    clientBday: \"\",\n    clientCity: \"\",\n    clientZipCode: \"\",\n    clientStreetAddress: \"\",\n    contactNotes: \"\",\n    multiline: \"Controlled\",\n    //contact info state\n    contactFirstName: \"John\",\n    contactLastName: \"Smith\",\n    contactEmail: \"jsmith@mail.com\",\n    contactTitle: \"Mr.\",\n    contactPhone: \"123-456-1111\",\n    contactAddress: \"123 Maple Street\",\n    contactCity: \"Plano\",\n    contactState: \"TX\",\n    contactZip: \"75023\",\n    //payor info state\n    nameOnCard: \"Jeff A. Smith\",\n    cardNum: \"111122223333\",\n    payorEmail: \"jeffsmith@mail.com\",\n    payorTitle: \"Mr.\",\n    paymentType: \"Card\",\n    billingPhone: \"123-456-1111\",\n    billingAddress: \"123 Maple Street\",\n    billingCity: \"Plano\",\n    billingZip: \"75023\",\n    billingState: \"TX\",\n    cvv: \"000\",\n    expDate: \"03/17\",\n    cardType: \"Visa\",\n    sameAsContact: false\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/allclients\")\n      .then(response => {\n        console.log(\"Got client data!\");\n        console.log(response.data);\n        this.setState({\n          memberData: response.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Client data interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n\n    const obj = {\n      clientFirstName: this.state.clientFirstName,\n      clientLastName: this.state.clientLastName,\n      clientEmail: this.state.clientEmail,\n      clientTitle: this.state.clientTitle,\n      clientCurrentPassword: this.state.clientCurrentPassword,\n      clientConfirmPassword: this.state.clientConfirmPassword,\n      clientPhone: this.state.clientPhone,\n      clientAddress: this.state.clientAddress,\n      //primaryLocation: this.state.primaryLocation,\n      clientBday: this.state.clientBday,\n      clientCity: this.state.clientCity,\n      clientZipCode: this.state.clientZipCode,\n      clientStreetAddress: this.state.clientStreetAddress,\n      contactNotes: this.state.contactNotes\n    };\n    axios\n      .post(\"http://localhost:5000/clients/registerclient\", obj)\n      .then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      clientFirstName: this.state.clientFirstName,\n      clientLastName: this.state.clientLastName,\n      clientEmail: this.state.clientEmail,\n      clientTitle: this.state.clientTitle,\n      clientCurrentPassword: this.state.clientCurrentPassword,\n      clientConfirmPassword: this.state.clientConfirmPassword,\n      clientPhone: this.state.clientPhone,\n      clientAddress: this.state.clientAddress,\n      //primaryLocation: this.state.primaryLocation,\n      clientBday: this.state.clientBday,\n      clientCity: this.state.clientCity,\n      clientZipCode: this.state.clientZipCode,\n      clientStreetAddress: this.state.clientStreetAddress,\n      contactNotes: this.state.contactNotes\n    });\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChange2 = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Container maxWidth=\"lg\">\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          <Paper className={classes.root} elevation={1}>\n            <Typography className={classes.title} align=\"center\" variant=\"h6\">\n              Client Information\n            </Typography>\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <TextField\n                id=\"standard-select-title\"\n                select\n                label=\"Title\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.title}\n                onChange={this.handleChange(\"title\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {titles.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                required\n                id=\"standard-firstName\"\n                label=\"First Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.firstName}\n                onChange={this.handleChange(\"firstName\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-lastNamename\"\n                label=\"Last Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.lastName}\n                onChange={this.handleChange(\"lastName\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-email\"\n                variant=\"outlined\"\n                label=\"Email\"\n                className={classes.textField}\n                value={this.state.email}\n                onChange={this.handleChange(\"email\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-password-input\"\n                variant=\"outlined\"\n                label=\"Password\"\n                className={classes.textField}\n                type=\"password\"\n                value={this.state.currentPassword}\n                onChange={this.handleChange(\"currentPassword\")}\n                //autoComplete=\"current-password\"\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-confirmPassword-input\"\n                variant=\"outlined\"\n                label=\"Confirm Password\"\n                className={classes.textField}\n                type=\"password\"\n                value={this.state.confirmPassword}\n                onChange={this.handleChange(\"confirmPassword\")}\n                //autoComplete=\"current-password\"\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-address\"\n                variant=\"outlined\"\n                label=\"Address\"\n                className={classes.textField}\n                value={this.state.address}\n                onChange={this.handleChange(\"address\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-city-\"\n                variant=\"outlined\"\n                label=\"City\"\n                className={classes.textField}\n                value={this.state.city}\n                onChange={this.handleChange(\"city\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-state\"\n                variant=\"outlined\"\n                label=\"State\"\n                className={classes.textField}\n                value={this.state.streetAddress}\n                onChange={this.handleChange(\"streetAddress\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-zipCode\"\n                variant=\"outlined\"\n                label=\"Zip Code\"\n                className={classes.textField}\n                value={this.state.zipCode}\n                onChange={this.handleChange(\"zipCode\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-phone\"\n                variant=\"outlined\"\n                label=\"Phone Number\"\n                className={classes.textField}\n                value={this.state.phone}\n                onChange={this.handleChange(\"phone\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-bday\"\n                variant=\"outlined\"\n                label=\"Birthday\"\n                className={classes.textField}\n                value={this.state.bday}\n                onChange={this.handleChange(\"bday\")}\n                margin=\"normal\"\n              />\n              <Grid column>\n                <TextField\n                  id=\"standard-full-width\"\n                  label=\"Additional Notes\"\n                  style={{ margin: 8 }}\n                  className={classes.textField2}\n                  value={this.state.notes}\n                  onChange={this.handleChange(\"notes\")}\n                  placeholder=\"Add any additional notes here\"\n                  fullWidth\n                  multiline\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                />\n                <Typography\n                  className={classes.title}\n                  align=\"center\"\n                  variant=\"h6\"\n                >\n                  Contact Information\n                </Typography>\n              </Grid>\n              {/* Contact Info*/}\n              <TextField\n                id=\"standard-select-contactTitle\"\n                select\n                label=\"contactTitle\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.contactTitle}\n                onChange={this.handleChange(\"contactTitle\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {titles.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                required\n                id=\"standard-contactFirstName\"\n                label=\"First Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.contactFirstName}\n                onChange={this.handleChange(\"contactFirstName\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-lastNamename\"\n                label=\"Last Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.contactLastName}\n                onChange={this.handleChange(\"contactLastName\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-contactAddress\"\n                variant=\"outlined\"\n                label=\"contactAddress\"\n                className={classes.textField}\n                value={this.state.contactAddress}\n                onChange={this.handleChange(\"contactAddress\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-contactCity-\"\n                variant=\"outlined\"\n                label=\"contactCity\"\n                className={classes.textField}\n                value={this.state.contactCity}\n                onChange={this.handleChange(\"contactCity\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-state\"\n                variant=\"outlined\"\n                label=\"State\"\n                className={classes.textField}\n                value={this.state.contactState}\n                onChange={this.handleChange(\"contactState\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-contactZip\"\n                variant=\"outlined\"\n                label=\"Zip Code\"\n                className={classes.textField}\n                value={this.state.contactZip}\n                onChange={this.handleChange(\"contactZip\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-contactEmail\"\n                variant=\"outlined\"\n                label=\"contactEmail\"\n                className={classes.textField}\n                value={this.state.contactEmail}\n                onChange={this.handleChange(\"contactEmail\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-contactPhone\"\n                variant=\"outlined\"\n                label=\"contactPhone Number\"\n                className={classes.textField}\n                value={this.state.contactPhone}\n                onChange={this.handleChange(\"contactPhone\")}\n                margin=\"normal\"\n              />\n              {/*\n            <Button\n              size=\"medium\"\n              variant=\"contained\"\n              className={classes.button}\n            >\n              Add Additional\n            </Button>\n            */}\n\n              {/* Payor Info  */}\n              {/*\n              <FormGroup className={classes.marg} row>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state.sameAsContact}\n                      onChange={this.handleChange(\"sameAsContact\")}\n                      value=\"sameAsContact\"\n                      color=\"default\"\n                    />\n                  }\n                  label=\"Same as contact\" \n                />\n              </FormGroup>\n                */}\n              <Container>\n                <Typography\n                  className={classes.title2}\n                  align=\"center\"\n                  variant=\"h6\"\n                >\n                  Payor Information\n                </Typography>\n              </Container>\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <TextField\n                  id=\"standard-select-paymentType\"\n                  select\n                  label=\"Payment Type\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.paymentType}\n                  onChange={this.handleChange(\"paymentType\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {paymentTypes.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                <TextField\n                  id=\"standard-select-payorTitle\"\n                  select\n                  label=\"payorTitle\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.payorTitle}\n                  onChange={this.handleChange(\"payorTitle\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {titles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                <TextField\n                  id=\"standard-select-cardType\"\n                  select\n                  label=\"Card Type\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.cardType}\n                  onChange={this.handleChange(\"cardType\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {cardTypes.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                <TextField\n                  id=\"standard-billingAddress\"\n                  variant=\"outlined\"\n                  label=\"Billing billingAddress\"\n                  className={classes.textField}\n                  value={this.state.billingAddress}\n                  onChange={this.handleChange(\"billingAddress\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-nameOnCard\"\n                  label=\"Name on Card\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.nameOnCard}\n                  onChange={this.handleChange(\"nameOnCard\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-cardNum\"\n                  label=\"Card Number\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.cardNum}\n                  onChange={this.handleChange(\"cardNum\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-billingCity-\"\n                  variant=\"outlined\"\n                  label=\"billingCity\"\n                  className={classes.textField}\n                  value={this.state.billingCity}\n                  onChange={this.handleChange(\"billingCity\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-payorEmail\"\n                  variant=\"outlined\"\n                  label=\"payorEmail\"\n                  className={classes.textField}\n                  value={this.state.payorEmail}\n                  onChange={this.handleChange(\"payorEmail\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-expDate\"\n                  variant=\"outlined\"\n                  label=\"Expiration Date\"\n                  className={classes.textField}\n                  value={this.state.expDate}\n                  onChange={this.handleChange(\"expDate\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-state\"\n                  variant=\"outlined\"\n                  label=\"State\"\n                  className={classes.textField}\n                  value={this.state.billingState}\n                  onChange={this.handleChange(\"billingState\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-phone\"\n                  variant=\"outlined\"\n                  label=\"Billing Phone Number\"\n                  className={classes.textField}\n                  value={this.state.billingPhone}\n                  onChange={this.handleChange(\"billingPhone\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-cvv\"\n                  label=\"CVV\"\n                  type=\"password\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.cvv}\n                  onChange={this.handleChange(\"cvv\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-billingZip\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.billingZip}\n                  onChange={this.handleChange(\"billingZip\")}\n                  margin=\"normal\"\n                />\n\n                <Button\n                  size=\"medium\"\n                  variant=\"contained\"\n                  className={classes.button}\n                >\n                  +\n                </Button>\n                <Button\n                  className={classes.saveButton}\n                  size=\"large\"\n                  variant=\"contained\"\n                  onClick={() => {\n                    this.onSubmit(\n                      this.state.firstName,\n                      this.state.lastName,\n                      this.state.email,\n                      this.state.title,\n                      this.state.currentPassword,\n                      this.state.confirmPassword,\n                      this.state.phone,\n                      this.state.address,\n                      //this.state.primaryLocation,\n                      this.state.bday,\n                      this.state.city,\n                      this.state.zipCode,\n                      this.state.streetAddress,\n                      this.state.notes\n                    );\n                    //this.reloadPage();\n                  }}\n                >\n                  Save\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </form>\n      </Container>\n    );\n  }\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TopPanel);\n"]},"metadata":{},"sourceType":"module"}