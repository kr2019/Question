{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/assignClientActions.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PermIdentity from \"@material-ui/icons/PermIdentity\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  root: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 5,\n    marginLeft: theme.spacing.unit * 33.5,\n    align: \"center\",\n    width: \"175\"\n  },\n  button: {\n    margin: theme.spacing.unit,\n    width: 160\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  dialogTitle: {\n    marginBottom: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n  menu: {\n    width: 200\n  }\n});\n\nconst clients = [{\n  value: \"John Smith\",\n  label: \"John Smith\"\n}, {\n  value: \"Jill Smith\",\n  label: \"Jill Smith\"\n}, {\n  value: \"Ashley Flowers\",\n  label: \"Ashley Flowers\"\n}];\nconst sessionType = [{\n  value: \"Lessons\",\n  label: \"Lessons\"\n}, {\n  value: \"Therapy\",\n  label: \"Therapy\"\n}];\n\nclass AssignedClientActions extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      member: \"Harry Potter\",\n      clientData: [],\n      open: false,\n      client: \"\",\n      sessionCost: \"\",\n      sessionLength: \"\",\n      sessionType: \"\"\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/clientlist\").then(response => {\n      console.log(\"Got client data!\");\n      console.log(response.data);\n      this.setState({\n        clientData: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Client interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n    const obj = {\n      //title: this.state.title,\n      checkedActive: this.state.checkedActive,\n      checkedAdmin: this.state.checkedAdmin,\n      checkedThera: this.state.checkedThera,\n      checkedIntern: this.state.checkedIntern,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode\n    };\n    axios.post(\"http://localhost:5000/assignClients/assignclient1\", obj).then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      checkedActive: this.state.checkedActive,\n      checkedAdmin: this.state.checkedAdmin,\n      checkedThera: this.state.checkedThera,\n      checkedIntern: this.state.checkedIntern,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const clientData = this.state.clientData;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.handleClickOpen,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      className: classNames(classes.leftIcon, classes.iconSmall),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), \"Assign Client\"), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Assign Client\"), React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-client\",\n      select: true,\n      label: \"Clients\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.state.client,\n      onChange: this.handleChange(\"client\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, clientData.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.first_name\n      /* & option.last_name */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, option.first_name, \" \", option.last_name))), React.createElement(TextField, {\n      id: \"standard-select-sessionType\",\n      select: true,\n      label: \"Session Type\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.state.sessionType,\n      onChange: this.handleChange(\"sessionType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, sessionType.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-cost\",\n      label: \"Session Cost (dollars)\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.sessionCost,\n      onChange: this.handleChange(\"sessionCost\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-length\",\n      label: \"Session Length (minutes)\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.sessionLength,\n      onChange: this.handleChange(\"sessionLength\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nAssignedClientActions.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(AssignedClientActions);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/assignClientActions.js"],"names":["React","PropTypes","withStyles","Paper","Typography","classNames","Button","AddIcon","PermIdentity","MenuItem","TextField","Dialog","DialogActions","DialogContent","DialogTitle","axios","styles","theme","root","paddingTop","spacing","unit","paddingBottom","marginTop","marginLeft","align","width","button","margin","leftIcon","marginRight","rightIcon","dialogTitle","marginBottom","iconSmall","fontSize","textField","menu","clients","value","label","sessionType","AssignedClientActions","Component","state","member","clientData","open","client","sessionCost","sessionLength","handleChange","name","event","setState","target","handleClickOpen","handleClose","componentDidMount","get","then","response","console","log","data","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","onSubmit","obj","checkedActive","checkedAdmin","checkedThera","checkedIntern","firstName","lastName","email","title","currentPassword","confirmPassword","phone","address","primaryLocation","npi","city","zipCode","post","res","render","classes","props","container","MenuProps","className","map","option","first_name","last_name","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PermIdentity from \"@material-ui/icons/PermIdentity\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  root: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 5,\n    marginLeft: theme.spacing.unit * 33.5,\n    align: \"center\",\n    width: \"175\"\n  },\n  button: {\n    margin: theme.spacing.unit,\n    width: 160\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  dialogTitle: {\n    marginBottom: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n  menu: {\n    width: 200\n  }\n});\n\nconst clients = [\n  {\n    value: \"John Smith\",\n    label: \"John Smith\"\n  },\n\n  {\n    value: \"Jill Smith\",\n    label: \"Jill Smith\"\n  },\n  {\n    value: \"Ashley Flowers\",\n    label: \"Ashley Flowers\"\n  }\n];\n\nconst sessionType = [\n  {\n    value: \"Lessons\",\n    label: \"Lessons\"\n  },\n\n  {\n    value: \"Therapy\",\n    label: \"Therapy\"\n  }\n];\n\nclass AssignedClientActions extends React.Component {\n  state = {\n    member: \"Harry Potter\",\n    clientData: [],\n    open: false,\n    client: \"\",\n    sessionCost: \"\",\n    sessionLength: \"\",\n    sessionType: \"\"\n  };\n\n  /* change of team member dropdown */\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  /* show assign client diaglog box */\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  /* close assign client diaglog box */\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/clientlist\")\n      .then(response => {\n        console.log(\"Got client data!\");\n        console.log(response.data);\n        this.setState({\n          clientData: response.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Client interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n\n    const obj = {\n      //title: this.state.title,\n      checkedActive: this.state.checkedActive,\n      checkedAdmin: this.state.checkedAdmin,\n      checkedThera: this.state.checkedThera,\n      checkedIntern: this.state.checkedIntern,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode\n    };\n    axios\n      .post(\"http://localhost:5000/assignClients/assignclient1\", obj)\n      .then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      checkedActive: this.state.checkedActive,\n      checkedAdmin: this.state.checkedAdmin,\n      checkedThera: this.state.checkedThera,\n      checkedIntern: this.state.checkedIntern,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { clientData } = this.state;\n\n    return (\n      <div>\n        <Paper className={classes.root} elevation={7}>\n          {/* Assign client button */}\n          <Button\n            variant=\"contained\"\n            onClick={this.handleClickOpen}\n            className={classes.button}\n          >\n            <AddIcon\n              className={classNames(classes.leftIcon, classes.iconSmall)}\n            />\n            Assign Client\n          </Button>\n          <Dialog open={this.state.open} onClose={this.handleClose}>\n            <DialogTitle id=\"form-dialog-title\">Assign Client</DialogTitle>\n            <form className={classes.container} noValidate autoComplete=\"off\">\n              <DialogContent>\n                <TextField\n                  id=\"standard-select-client\"\n                  select\n                  label=\"Clients\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  className={classes.textField}\n                  value={this.state.client}\n                  onChange={this.handleChange(\"client\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {clientData.map(option => (\n                    <MenuItem\n                      key={option.value}\n                      value={option.first_name /* & option.last_name */}\n                    >\n                      {option.first_name} {option.last_name}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  id=\"standard-select-sessionType\"\n                  select\n                  label=\"Session Type\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  className={classes.textField}\n                  value={this.state.sessionType}\n                  onChange={this.handleChange(\"sessionType\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {sessionType.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  id=\"standard-cost\"\n                  label=\"Session Cost (dollars)\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.sessionCost}\n                  onChange={this.handleChange(\"sessionCost\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-length\"\n                  label=\"Session Length (minutes)\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.sessionLength}\n                  onChange={this.handleChange(\"sessionLength\")}\n                  margin=\"normal\"\n                />\n              </DialogContent>\n            </form>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Save\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nAssignedClientActions.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AssignedClientActions);\n"]},"metadata":{},"sourceType":"module"}