{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/newTeamMemberConsolidate.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport red from \"@material-ui/core/colors/red\";\nimport green from \"@material-ui/core/colors/green\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  marg: {\n    marginLeft: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  },\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    paddingTop: theme.spacing.unit,\n    marginTop: theme.spacing(2),\n    paddingBottom: theme.spacing.unit * 2\n  },\n  saveButton: {\n    marginRight: theme.spacing(2)\n  },\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 850\n  },\n  menu2: {\n    width: 200\n  },\n  button: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  title: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: 20\n  }\n});\n\nconst titles = [{\n  value: \"\",\n  label: \"\"\n}, {\n  value: \"Dr.\",\n  label: \"Dr.\"\n}, {\n  value: \"Miss\",\n  label: \"Miss\"\n}, {\n  value: \"Mr.\",\n  label: \"Mr.\"\n}, {\n  value: \"Mrs.\",\n  label: \"Mrs.\"\n}, {\n  value: \"Ms.\",\n  label: \"Ms.\"\n}, {\n  value: \"Mx.\",\n  label: \"Mx.\"\n}];\nconst roles = [{\n  value: \"Therapist\",\n  label: \"Therapist\"\n}, {\n  value: \"Admin Assistant\",\n  label: \"Admin Assistant\"\n}];\n\nclass TopPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkedActive: false,\n      firstName: \"\",\n      lastName: \"\",\n      role: \"\",\n      email: \"\",\n      title: \"\",\n      currentPassword: \"\",\n      confirmPassword: \"\",\n      phone: \"\",\n      address: \"\",\n      primaryLocation: \"\",\n      npi: \"\",\n      city: \"\",\n      zipCode: \"\",\n      notes: \"\",\n      multiline: \"Controlled\",\n      // privliges\n      checkedAdmin: false,\n      checkedThera: true,\n      checkedIntern: false,\n      invoice: false,\n      allCalendar: false,\n      payment: true,\n      editOtherSched: false,\n      viewOtherSched: false,\n      editOtherInfo: false,\n      viewOtherInfo: false,\n      addClient: true,\n      recordAttendance: true,\n      viewNote: true,\n      viewClient: false,\n      kpis: true,\n      viewReport: false,\n      viewCalendar: true,\n      viewOwnClient: true\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange2 = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange3 = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n  }\n\n  /*\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/members\")\n      .then(response => {\n        console.log(\"Got member data!\");\n        console.log(response.data);\n        this.setState({\n          memberData: response.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Client interval set!\");\n    }\n  }\n  */\n  // multiple get method\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/members\").then(response => {\n      console.log(\"Got member data!\");\n      console.log(response.data);\n      this.setState({\n        memberData: response.data\n      });\n    })\n    /* multiple get\n    .then(response2 => {\n    return axios\n     .get(\"http://localhost:5000/allclients\") // using response.data\n     .then(response2 => {\n       console.log(\"Got client data!\");\n       console.log(response2.data);\n       this.setState({\n         clientData: response2.data\n       });\n     });\n    }) */\n    .catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Data interval set!\");\n    }\n  }\n  /* async request style\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/members\")\n      .then(response => {\n        console.log(\"Got member data!\");\n        console.log(response.data);\n        this.setState({\n          memberData: response.data\n        });\n      })\n      .then(async () => {\n        const response2 = await axios\n          .get(\"http://localhost:5000/allclients\") // using response.data\n          ;\n        console.log(\"Got client data!\");\n        console.log(response2.data);\n        this.setState({\n          clientData: response2.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n     if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Data interval set!\");\n    }\n  }\n   componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from team data!\");\n    }\n  }\n    */\n\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n    const memberObj = {\n      //title: this.state.title,\n      checkedActive: this.state.checkedActive,\n      checkedAdmin: this.state.checkedAdmin,\n      checkedThera: this.state.checkedThera,\n      checkedIntern: this.state.checkedIntern,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      role: this.state.role,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode,\n      notes: this.state.notes\n    };\n    /* \n    const clientObj = {\n      client: this.state.client,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLength,\n      sessionType: this.state.sessionType\n    };\n    */\n\n    axios.post(\"http://localhost:5000/members/registermember\", memberObj) // .then(res => console.log(res.data));\n\n    /* this will clear everything after saving+closing */\n    .then(response => {\n      this.setState({\n        memberObj\n      });\n    });\n    /* multiple post \n      .then(post2 => {\n        return axios\n          .post(\"http://localhost:5000/assignClients/assignclient1\", clientObj) // using response.data\n          .then(post2 => {\n            this.setState({\n              clientObj\n            });\n          });\n      });\n      */\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(Container, {\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"New Team Member Information\"), React.createElement(Grid, {\n      container: true,\n      row: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.checkedActive,\n        onChange: this.handleChange3(\"checkedActive\"),\n        value: \"checkedActive\",\n        marginLeft: \"theme.spacing.unit * 20\",\n        className: classes.marg,\n        classes: {\n          switchBase: classes.colorSwitchBase,\n          checked: classes.colorChecked,\n          bar: classes.colorBar\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }),\n      label: \"Active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    })), React.createElement(TextField, {\n      id: \"standard-select-role\",\n      select: true,\n      label: \"Role\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.role,\n      onChange: this.handleChange(\"role\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, roles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, option.label)))), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-title\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.title,\n      onChange: this.handleChange(\"title\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, option.label))), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.phone,\n      onChange: this.handleChange(\"phone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-firstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.firstName,\n      onChange: this.handleChange(\"firstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.email,\n      onChange: this.handleChange(\"email\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.lastName,\n      onChange: this.handleChange(\"lastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-address\",\n      variant: \"outlined\",\n      label: \"Address\",\n      className: classes.textField,\n      value: this.state.address,\n      onChange: this.handleChange(\"address\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-password-input\",\n      variant: \"outlined\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.currentPassword,\n      onChange: this.handleChange(\"currentPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-city-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.city,\n      onChange: this.handleChange(\"city\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-confirmPassword-input\",\n      variant: \"outlined\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange(\"confirmPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-zipCode\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.zipCode,\n      onChange: this.handleChange(\"zipCode\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-npi\",\n      variant: \"outlined\",\n      label: \"NPI Number\",\n      className: classes.textField,\n      value: this.state.npi,\n      onChange: this.handleChange(\"npi\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-primary-location\",\n      variant: \"outlined\",\n      label: \"Primary Location\",\n      className: classes.textField,\n      value: this.state.primaryLocation,\n      onChange: this.handleChange(\"primaryLocation\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    })), React.createElement(TextField, {\n      id: \"standard-full-width\",\n      label: \"Additional Notes\",\n      value: this.state.notes,\n      style: {\n        margin: 8\n      },\n      className: classes.textField2,\n      onChange: this.handleChange(\"notes\"),\n      placeholder: \"Add any additional notes here\",\n      fullWidth: true,\n      multiline: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603\n      },\n      __self: this\n    })), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, \"Files?\"), \"*placeholder for files*\"), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }, \"Privliges\"), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedAdmin,\n        onChange: this.handleChange3(\"checkedAdmin\"),\n        value: \"checkedAdmin\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638\n        },\n        __self: this\n      }),\n      label: \"Administrator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedThera,\n        onChange: this.handleChange3(\"checkedThera\"),\n        value: \"checkedThera\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649\n        },\n        __self: this\n      }),\n      label: \"Therapist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedIntern,\n        onChange: this.handleChange3(\"checkedIntern\"),\n        value: \"checkedIntern\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660\n        },\n        __self: this\n      }),\n      label: \"Intern\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.invoice,\n        onChange: this.handleChange3(\"invoice\"),\n        value: \"invoice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        },\n        __self: this\n      }),\n      label: \"Invoices/Billing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.allCalendar,\n        onChange: this.handleChange3(\"allCalendar\"),\n        value: \"allCalendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685\n        },\n        __self: this\n      }),\n      label: \"Calendar of everyone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        disabled: true,\n        checked: this.state.payment,\n        onChange: this.handleChange3(\"payment\"),\n        value: \"payment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695\n        },\n        __self: this\n      }),\n      label: \"Take payment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.editOtherSched,\n        onChange: this.handleChange3(\"editOtherSched\"),\n        value: \"editOtherSched\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706\n        },\n        __self: this\n      }),\n      label: \"Edit other therapist schedule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.viewOtherSched,\n        onChange: this.handleChange3(\"viewOtherSched\"),\n        value: \"viewOtherSched\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        },\n        __self: this\n      }),\n      label: \"View other therapist schedule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.editOtherInfo,\n        onChange: this.handleChange3(\"editOtherInfo\"),\n        value: \"editOtherInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726\n        },\n        __self: this\n      }),\n      label: \"Edit other therapist/client info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.viewOtherInfo,\n        onChange: this.handleChange3(\"viewOtherInfo\"),\n        value: \"viewOtherInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        },\n        __self: this\n      }),\n      label: \"View other therapist/client info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        disabled: true,\n        checked: this.state.addClient,\n        onChange: this.handleChange3(\"addClient\"),\n        value: \"addClient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746\n        },\n        __self: this\n      }),\n      label: \"Add client\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        disabled: true,\n        checked: this.state.recordAttendance,\n        onChange: this.handleChange3(\"recordAttendance\"),\n        value: \"recordAttendance\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757\n        },\n        __self: this\n      }),\n      label: \"Record Attendance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        disabled: true,\n        checked: this.state.viewNote,\n        onChange: this.handleChange3(\"viewNote\"),\n        value: \"viewNote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 768\n        },\n        __self: this\n      }),\n      label: \"View note history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.viewClient,\n        onChange: this.handleChange3(\"viewClient\"),\n        value: \"viewClient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779\n        },\n        __self: this\n      }),\n      label: \"View other clients vs. own clients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        disabled: true,\n        checked: this.state.kpis,\n        onChange: this.handleChange3(\"kpis\"),\n        value: \"kpis\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789\n        },\n        __self: this\n      }),\n      label: \"KPIs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.viewReport,\n        onChange: this.handleChange3(\"viewReport\"),\n        value: \"jason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800\n        },\n        __self: this\n      }),\n      label: \"View/create reports\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        disabled: true,\n        checked: this.state.viewCalendar,\n        onChange: this.handleChange3(\"viewCalendar\"),\n        value: \"viewCalendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810\n        },\n        __self: this\n      }),\n      label: \"View own calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        disabled: true,\n        checked: this.state.viewOwnClient,\n        onChange: this.handleChange3(\"viewOwnClient\"),\n        value: \"viewOwnClient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821\n        },\n        __self: this\n      }),\n      label: \"View own clients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      onClick: () => {\n        this.onSubmit(this.state.checkedActive, this.state.checkedAdmin, this.state.checkedThera, this.state.checkedIntern, this.state.firstName, this.state.lastName, this.state.role, this.state.email, this.state.title, this.state.currentPassword, this.state.confirmPassword, this.state.phone, this.state.address, this.state.primaryLocation, this.state.npi, this.state.city, this.state.zipCode, this.state.notes // client\n\n        /*\n        this.state.client,\n        this.state.sessionCost,\n        this.state.sessionLength,\n        this.state.sessionType\n        */\n        ); //this.reloadPage();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TopPanel);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/newTeamMemberConsolidate.js"],"names":["React","PropTypes","withStyles","Paper","Grid","MenuItem","TextField","Button","Container","FormGroup","FormControlLabel","Switch","Checkbox","red","green","Typography","AddIcon","axios","styles","theme","container","display","flexWrap","marg","marginLeft","spacing","unit","marginBottom","colorSwitchBase","color","backgroundColor","colorBar","colorChecked","textField","marginRight","width","menu","root","paddingTop","marginTop","paddingBottom","saveButton","container2","textField2","menu2","button","title","align","icon","fontSize","titles","value","label","roles","TopPanel","Component","state","checkedActive","firstName","lastName","role","email","currentPassword","confirmPassword","phone","address","primaryLocation","npi","city","zipCode","notes","multiline","checkedAdmin","checkedThera","checkedIntern","invoice","allCalendar","payment","editOtherSched","viewOtherSched","editOtherInfo","viewOtherInfo","addClient","recordAttendance","viewNote","viewClient","kpis","viewReport","viewCalendar","viewOwnClient","handleChange","name","event","setState","target","handleChange2","handleChange3","checked","componentDidMount","get","then","response","console","log","data","memberData","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","onSubmit","memberObj","post","render","classes","props","switchBase","bar","MenuProps","className","map","option","margin","shrink","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport red from \"@material-ui/core/colors/red\";\nimport green from \"@material-ui/core/colors/green\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n\n  marg: {\n    marginLeft: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  },\n\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    paddingTop: theme.spacing.unit,\n    marginTop: theme.spacing(2),\n    paddingBottom: theme.spacing.unit * 2\n  },\n\n  saveButton: {\n    marginRight: theme.spacing(2)\n  },\n\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 850\n  },\n\n  menu2: {\n    width: 200\n  },\n  button: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  title: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: 20\n  }\n});\n\nconst titles = [\n  {\n    value: \"\",\n    label: \"\"\n  },\n\n  {\n    value: \"Dr.\",\n    label: \"Dr.\"\n  },\n\n  {\n    value: \"Miss\",\n    label: \"Miss\"\n  },\n\n  {\n    value: \"Mr.\",\n    label: \"Mr.\"\n  },\n  {\n    value: \"Mrs.\",\n    label: \"Mrs.\"\n  },\n  {\n    value: \"Ms.\",\n    label: \"Ms.\"\n  },\n  {\n    value: \"Mx.\",\n    label: \"Mx.\"\n  }\n];\n\nconst roles = [\n  {\n    value: \"Therapist\",\n    label: \"Therapist\"\n  },\n\n  {\n    value: \"Admin Assistant\",\n    label: \"Admin Assistant\"\n  }\n];\n\nclass TopPanel extends React.Component {\n  state = {\n    checkedActive: false,\n    firstName: \"\",\n    lastName: \"\",\n    role: \"\",\n    email: \"\",\n    title: \"\",\n    currentPassword: \"\",\n    confirmPassword: \"\",\n    phone: \"\",\n    address: \"\",\n    primaryLocation: \"\",\n    npi: \"\",\n    city: \"\",\n    zipCode: \"\",\n    notes: \"\",\n    multiline: \"Controlled\",\n    // privliges\n    checkedAdmin: false,\n    checkedThera: true,\n    checkedIntern: false,\n    invoice: false,\n    allCalendar: false,\n    payment: true,\n    editOtherSched: false,\n    viewOtherSched: false,\n    editOtherInfo: false,\n    viewOtherInfo: false,\n    addClient: true,\n    recordAttendance: true,\n    viewNote: true,\n    viewClient: false,\n    kpis: true,\n    viewReport: false,\n    viewCalendar: true,\n    viewOwnClient: true\n  };\n  /*\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/members\")\n      .then(response => {\n        console.log(\"Got member data!\");\n        console.log(response.data);\n        this.setState({\n          memberData: response.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Client interval set!\");\n    }\n  }\n*/\n  // multiple get method\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/members\")\n      .then(response => {\n        console.log(\"Got member data!\");\n        console.log(response.data);\n        this.setState({\n          memberData: response.data\n        });\n      }) /* multiple get\n      .then(response2 => {\n        return axios\n          .get(\"http://localhost:5000/allclients\") // using response.data\n          .then(response2 => {\n            console.log(\"Got client data!\");\n            console.log(response2.data);\n            this.setState({\n              clientData: response2.data\n            });\n          });\n      }) */\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  /* async request style\n\n componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/members\")\n      .then(response => {\n        console.log(\"Got member data!\");\n        console.log(response.data);\n        this.setState({\n          memberData: response.data\n        });\n      })\n      .then(async () => {\n        const response2 = await axios\n          .get(\"http://localhost:5000/allclients\") // using response.data\n          ;\n        console.log(\"Got client data!\");\n        console.log(response2.data);\n        this.setState({\n          clientData: response2.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from team data!\");\n    }\n  }\n\t\n  */\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n\n    const memberObj = {\n      //title: this.state.title,\n      checkedActive: this.state.checkedActive,\n      checkedAdmin: this.state.checkedAdmin,\n      checkedThera: this.state.checkedThera,\n      checkedIntern: this.state.checkedIntern,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      role: this.state.role,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode,\n      notes: this.state.notes\n    };\n    /* \n    const clientObj = {\n      client: this.state.client,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLength,\n      sessionType: this.state.sessionType\n    };\n    */\n    axios\n      .post(\"http://localhost:5000/members/registermember\", memberObj)\n      // .then(res => console.log(res.data));\n      /* this will clear everything after saving+closing */\n      .then(response => {\n        this.setState({\n          memberObj\n        });\n      });\n    /* multiple post \n      .then(post2 => {\n        return axios\n          .post(\"http://localhost:5000/assignClients/assignclient1\", clientObj) // using response.data\n          .then(post2 => {\n            this.setState({\n              clientObj\n            });\n          });\n      });\n      */\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChange2 = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChange3 = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Container maxWidth=\"lg\">\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          <Paper className={classes.root} elevation={1}>\n            <Typography className={classes.title} align=\"center\" variant=\"h6\">\n              New Team Member Information\n            </Typography>\n            <Grid container row justify=\"space-between\">\n              <FormGroup row>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.checkedActive}\n                      onChange={this.handleChange3(\"checkedActive\")}\n                      value=\"checkedActive\"\n                      marginLeft=\"theme.spacing.unit * 20\"\n                      className={classes.marg}\n                      classes={{\n                        switchBase: classes.colorSwitchBase,\n                        checked: classes.colorChecked,\n                        bar: classes.colorBar\n                      }}\n                    />\n                  }\n                  label=\"Active\"\n                />\n              </FormGroup>\n\n              {/*\n            <FormGroup row>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.checkedAdmin}\n                    onChange={this.handleChange3(\"checkedAdmin\")}\n                    value=\"checkedAdmin\"\n                    color=\"default\"\n                  />\n                }\n                label=\"Administrator\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.checkedThera}\n                    onChange={this.handleChange3(\"checkedThera\")}\n                    value=\"checkedThera\"\n                    color=\"default\"\n                  />\n                }\n                label=\"Therapist\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.checkedIntern}\n                    onChange={this.handleChange3(\"checkedIntern\")}\n                    value=\"checkedIntern\"\n                    color=\"default\"\n                  />\n                }\n                label=\"Intern\"\n              />\n            </FormGroup>\n            */}\n              <TextField\n                id=\"standard-select-role\"\n                select\n                label=\"Role\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.role}\n                onChange={this.handleChange(\"role\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {roles.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <TextField\n                id=\"standard-select-title\"\n                select\n                label=\"Title\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.title}\n                onChange={this.handleChange(\"title\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {titles.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n\n              <Grid direction=\"column\">\n                <TextField\n                  id=\"standard-phone\"\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  className={classes.textField}\n                  value={this.state.phone}\n                  onChange={this.handleChange(\"phone\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  required\n                  id=\"standard-firstName\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.firstName}\n                  onChange={this.handleChange(\"firstName\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  required\n                  id=\"standard-email\"\n                  variant=\"outlined\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  value={this.state.email}\n                  onChange={this.handleChange(\"email\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  required\n                  id=\"standard-lastNamename\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.lastName}\n                  onChange={this.handleChange(\"lastName\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  id=\"standard-address\"\n                  variant=\"outlined\"\n                  label=\"Address\"\n                  className={classes.textField}\n                  value={this.state.address}\n                  onChange={this.handleChange(\"address\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  required\n                  id=\"standard-password-input\"\n                  variant=\"outlined\"\n                  label=\"Password\"\n                  className={classes.textField}\n                  type=\"password\"\n                  value={this.state.currentPassword}\n                  onChange={this.handleChange(\"currentPassword\")}\n                  //autoComplete=\"current-password\"\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  id=\"standard-city-\"\n                  variant=\"outlined\"\n                  label=\"City\"\n                  className={classes.textField}\n                  value={this.state.city}\n                  onChange={this.handleChange(\"city\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  required\n                  id=\"standard-confirmPassword-input\"\n                  variant=\"outlined\"\n                  label=\"Confirm Password\"\n                  className={classes.textField}\n                  type=\"password\"\n                  value={this.state.confirmPassword}\n                  onChange={this.handleChange(\"confirmPassword\")}\n                  //autoComplete=\"current-password\"\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  id=\"standard-zipCode\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.zipCode}\n                  onChange={this.handleChange(\"zipCode\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  id=\"standard-npi\"\n                  variant=\"outlined\"\n                  label=\"NPI Number\"\n                  className={classes.textField}\n                  value={this.state.npi}\n                  onChange={this.handleChange(\"npi\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid direction=\"column\">\n                <TextField\n                  id=\"standard-primary-location\"\n                  variant=\"outlined\"\n                  label=\"Primary Location\"\n                  className={classes.textField}\n                  value={this.state.primaryLocation}\n                  onChange={this.handleChange(\"primaryLocation\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <TextField\n                id=\"standard-full-width\"\n                label=\"Additional Notes\"\n                value={this.state.notes}\n                style={{ margin: 8 }}\n                className={classes.textField2}\n                onChange={this.handleChange(\"notes\")}\n                placeholder=\"Add any additional notes here\"\n                fullWidth\n                multiline\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n            </Grid>\n            <Container>\n              <Typography className={classes.title} align=\"center\" variant=\"h6\">\n                Files?\n              </Typography>\n              *placeholder for files*\n            </Container>\n            <Container>\n              <Typography className={classes.title} align=\"center\" variant=\"h6\">\n                Privliges\n              </Typography>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"center\"\n              >\n                <FormGroup row>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.checkedAdmin}\n                        onChange={this.handleChange3(\"checkedAdmin\")}\n                        value=\"checkedAdmin\"\n                        color=\"default\"\n                      />\n                    }\n                    label=\"Administrator\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.checkedThera}\n                        onChange={this.handleChange3(\"checkedThera\")}\n                        value=\"checkedThera\"\n                        color=\"default\"\n                      />\n                    }\n                    label=\"Therapist\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.checkedIntern}\n                        onChange={this.handleChange3(\"checkedIntern\")}\n                        value=\"checkedIntern\"\n                        color=\"default\"\n                      />\n                    }\n                    label=\"Intern\"\n                  />\n                </FormGroup>\n              </Grid>\n\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.invoice}\n                      onChange={this.handleChange3(\"invoice\")}\n                      value=\"invoice\"\n                    />\n                  }\n                  label=\"Invoices/Billing\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.allCalendar}\n                      onChange={this.handleChange3(\"allCalendar\")}\n                      value=\"allCalendar\"\n                    />\n                  }\n                  label=\"Calendar of everyone\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      disabled\n                      checked={this.state.payment}\n                      onChange={this.handleChange3(\"payment\")}\n                      value=\"payment\"\n                    />\n                  }\n                  label=\"Take payment\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.editOtherSched}\n                      onChange={this.handleChange3(\"editOtherSched\")}\n                      value=\"editOtherSched\"\n                    />\n                  }\n                  label=\"Edit other therapist schedule\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.viewOtherSched}\n                      onChange={this.handleChange3(\"viewOtherSched\")}\n                      value=\"viewOtherSched\"\n                    />\n                  }\n                  label=\"View other therapist schedule\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.editOtherInfo}\n                      onChange={this.handleChange3(\"editOtherInfo\")}\n                      value=\"editOtherInfo\"\n                    />\n                  }\n                  label=\"Edit other therapist/client info\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.viewOtherInfo}\n                      onChange={this.handleChange3(\"viewOtherInfo\")}\n                      value=\"viewOtherInfo\"\n                    />\n                  }\n                  label=\"View other therapist/client info\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      disabled\n                      checked={this.state.addClient}\n                      onChange={this.handleChange3(\"addClient\")}\n                      value=\"addClient\"\n                    />\n                  }\n                  label=\"Add client\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      disabled\n                      checked={this.state.recordAttendance}\n                      onChange={this.handleChange3(\"recordAttendance\")}\n                      value=\"recordAttendance\"\n                    />\n                  }\n                  label=\"Record Attendance\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      disabled\n                      checked={this.state.viewNote}\n                      onChange={this.handleChange3(\"viewNote\")}\n                      value=\"viewNote\"\n                    />\n                  }\n                  label=\"View note history\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.viewClient}\n                      onChange={this.handleChange3(\"viewClient\")}\n                      value=\"viewClient\"\n                    />\n                  }\n                  label=\"View other clients vs. own clients\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      disabled\n                      checked={this.state.kpis}\n                      onChange={this.handleChange3(\"kpis\")}\n                      value=\"kpis\"\n                    />\n                  }\n                  label=\"KPIs\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.viewReport}\n                      onChange={this.handleChange3(\"viewReport\")}\n                      value=\"jason\"\n                    />\n                  }\n                  label=\"View/create reports\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      disabled\n                      checked={this.state.viewCalendar}\n                      onChange={this.handleChange3(\"viewCalendar\")}\n                      value=\"viewCalendar\"\n                    />\n                  }\n                  label=\"View own calendar\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      disabled\n                      checked={this.state.viewOwnClient}\n                      onChange={this.handleChange3(\"viewOwnClient\")}\n                      value=\"viewOwnClient\"\n                    />\n                  }\n                  label=\"View own clients\"\n                />\n              </FormGroup>\n            </Container>\n\n            <Grid container direction=\"row\" justify=\"flex-end\">\n              <Button\n                className={classes.saveButton}\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.onSubmit(\n                    this.state.checkedActive,\n                    this.state.checkedAdmin,\n                    this.state.checkedThera,\n                    this.state.checkedIntern,\n                    this.state.firstName,\n                    this.state.lastName,\n                    this.state.role,\n                    this.state.email,\n                    this.state.title,\n                    this.state.currentPassword,\n                    this.state.confirmPassword,\n                    this.state.phone,\n                    this.state.address,\n                    this.state.primaryLocation,\n                    this.state.npi,\n                    this.state.city,\n                    this.state.zipCode,\n                    this.state.notes\n                    // client\n                    /*\n                    this.state.client,\n                    this.state.sessionCost,\n                    this.state.sessionLength,\n                    this.state.sessionType\n                    */\n                  );\n                  //this.reloadPage();\n                }}\n              >\n                Save\n              </Button>\n            </Grid>\n            {/* Assign client button */}\n            {/*\n            <Grid container direction=\"row\" justify=\"center\">\n              <Button\n                className={classes.saveButton}\n                size=\"large\"\n                variant=\"contained\"\n              >\n                <AddIcon className={classes.icon} />\n                Assign Client\n              </Button>\n            </Grid>\n            */}\n          </Paper>\n        </form>\n      </Container>\n    );\n  }\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TopPanel);\n"]},"metadata":{},"sourceType":"module"}