{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/newClientConsolidate.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { BrowserRouter, Switch, Link, Route, withRouter, Redirect } from \"react-router-dom\"; //test\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    // marginBottom: theme.spacing(10),\n    width: 850\n  },\n  title: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  title2: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  },\n  menu2: {\n    width: 200\n  },\n  root2: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  saveButton: {\n    marginRight: theme.spacing(2),\n    align: \"center\"\n  }\n});\n\nconst titles = [{\n  value: \"\",\n  label: \"\"\n}, {\n  value: \"Dr.\",\n  label: \"Dr.\"\n}, {\n  value: \"Miss\",\n  label: \"Miss\"\n}, {\n  value: \"Mr.\",\n  label: \"Mr.\"\n}, {\n  value: \"Mrs.\",\n  label: \"Mrs.\"\n}, {\n  value: \"Ms.\",\n  label: \"Ms.\"\n}, {\n  value: \"Mx.\",\n  label: \"Mx.\"\n}];\nconst sessionTypes = [{\n  value: \"Lessons\",\n  label: \"Lessons\"\n}, {\n  value: \"Therapy\",\n  label: \"Therapy\"\n}];\nconst paymentTypes = [{\n  value: \"Card\",\n  label: \"Card\"\n}, {\n  value: \"Cash\",\n  label: \"Cash\"\n}, {\n  value: \"Check\",\n  label: \"Check\"\n}];\nconst cardTypes = [{\n  value: \"American Express\",\n  label: \"American Express\"\n}, {\n  value: \"Discover\",\n  label: \"Discover\"\n}, {\n  value: \"MasterCard\",\n  label: \"MasterCard\"\n}, {\n  value: \"Visa\",\n  label: \"Visa\"\n}];\nconst navStyle = {\n  color: \"black\",\n  textDecoration: \"none\"\n};\n\nclass TopPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //client info state\n      clientFirstName: \"\",\n      clientLastName: \"\",\n      clientEmail: \"\",\n      clientTitle: \"\",\n      clientCurrentPassword: \"\",\n      clientConfirmPassword: \"\",\n      sessionType: \"\",\n      sessionCost: \"\",\n      sessionLegnth: \"\",\n      clientPhone: \"\",\n      clientAddress: \"\",\n      clientBday: \"\",\n      clientState: \"\",\n      clientCity: \"\",\n      clientZipCode: \"\",\n      clientStreetAddress: \"\",\n      clientNotes: \"\",\n      multiline: \"Controlled\",\n      //contact info state\n      contactFirstName: \"\",\n      contactLastName: \"\",\n      contactEmail: \"\",\n      contactTitle: \"\",\n      contactPhone: \"\",\n      contactAddress: \"\",\n      contactCity: \"\",\n      contactState: \"\",\n      contactZip: \"\",\n      //payor info state\n      nameOnCard: \"\",\n      cardNum: \"\",\n      payorEmail: \"\",\n      payorTitle: \"\",\n      paymentType: \"\",\n      billingPhone: \"\",\n      billingAddress: \"\",\n      billingCity: \"\",\n      billingZip: \"\",\n      billingState: \"\",\n      cvv: \"\",\n      expDate: \"\",\n      cardType: \"\",\n      sameAsContact: false,\n      //\n      //toDashboard: false,\n      navigate: false,\n      intervalIsSet: \"\"\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange2 = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n\n  reloadPage() {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/allclients\").then(response => {\n      console.log(\"Got client data!\");\n      console.log(response.data);\n      this.setState({\n        memberData: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Client data interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n    const obj = {\n      // client info\n      clientFirstName: this.state.clientFirstName,\n      clientLastName: this.state.clientLastName,\n      clientEmail: this.state.clientEmail,\n      clientTitle: this.state.clientTitle,\n      clientCurrentPassword: this.state.clientCurrentPassword,\n      clientConfirmPassword: this.state.clientConfirmPassword,\n      clientPhone: this.state.clientPhone,\n      clientAddress: this.state.clientAddress,\n      sessionType: this.state.sessionType,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLegnth,\n      //primaryLocation: this.state.primaryLocation,\n      clientBday: this.state.clientBday,\n      clientState: this.state.clientState,\n      clientCity: this.state.clientCity,\n      clientZipCode: this.state.clientZipCode,\n      clientStreetAddress: this.state.clientStreetAddress,\n      clientNotes: this.state.clientNotes,\n      // contact info\n      contactFirstName: this.state.contactFirstName,\n      contactLastName: this.state.contactLastName,\n      contactEmail: this.state.contactEmail,\n      contactTitle: this.state.contactTitle,\n      contactPhone: this.state.contactPhone,\n      contactAddress: this.state.contactAddress,\n      contactCity: this.state.contactCity,\n      contactState: this.state.contactState,\n      contactZip: this.state.contactZip,\n      // payor info\n      nameOnCard: this.state.nameOnCard,\n      cardNum: this.state.cardNum,\n      payorEmail: this.state.payorEmail,\n      payorTitle: this.state.payorTitle,\n      paymentType: this.state.paymentType,\n      billingPhone: this.state.billingPhone,\n      billingAddress: this.state.billingAddress,\n      billingCity: this.state.billingCity,\n      billingZip: this.state.billingZip,\n      billingState: this.state.billingState,\n      cvv: this.state.cvv,\n      expDate: this.state.expDate,\n      cardType: this.state.cardType\n    };\n    axios.post(\"http://localhost:5000/clients/registerclient\", obj).then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      //client info\n      clientFirstName: this.state.clientFirstName,\n      clientLastName: this.state.clientLastName,\n      clientEmail: this.state.clientEmail,\n      clientTitle: this.state.clientTitle,\n      clientCurrentPassword: this.state.clientCurrentPassword,\n      clientConfirmPassword: this.state.clientConfirmPassword,\n      sessionType: this.state.sessionType,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLegnth,\n      clientPhone: this.state.clientPhone,\n      clientAddress: this.state.clientAddress,\n      clientBday: this.state.clientBday,\n      clientCity: this.state.clientCity,\n      clientState: this.state.clientState,\n      clientZipCode: this.state.clientZipCode,\n      clientStreetAddress: this.state.clientStreetAddress,\n      clientNotes: this.state.clientNotes,\n      // contact info\n      contactFirstName: this.state.contactFirstName,\n      contactLastName: this.state.contactLastName,\n      contactEmail: this.state.contactEmail,\n      contactTitle: this.state.contactTitle,\n      contactPhone: this.state.contactPhone,\n      contactAddress: this.state.contactAddress,\n      contactCity: this.state.contactCity,\n      contactState: this.state.contactState,\n      contactZip: this.state.contactZip,\n      // payor info\n      nameOnCard: this.state.nameOnCard,\n      cardNum: this.state.cardNum,\n      payorEmail: this.state.payorEmail,\n      payorTitle: this.state.payorTitle,\n      paymentType: this.state.paymentType,\n      billingPhone: this.state.billingPhone,\n      billingAddress: this.state.billingAddress,\n      billingCity: this.state.billingCity,\n      billingZip: this.state.billingZip,\n      billingState: this.state.billingState,\n      cvv: this.state.cvv,\n      expDate: this.state.expDate,\n      cardType: this.state.cardType\n    });\n  }\n\n  /*\n  handleSubmit = (user) => {\n    saveUser(user)\n      .then(() => this.setState(() => ({\n        toDashboard: true\n      })))\n  }\n  */\n  setLocation() {\n    this.props.history.push(\"/clients\");\n  }\n\n  render() {\n    const classes = this.props.classes;\n    /*\n    if (this.state.toDashboard === true) {\n        return <Redirect to='/dashboard' />\n      }\n    */\n\n    const navigate = this.state.navigate; // here is the important part\n\n    if (navigate) {\n      return React.createElement(Redirect, {\n        to: \"/clients\",\n        push: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"Client Information\"), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-title\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.clientTitle,\n      onChange: this.handleChange(\"clientTitle\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      required: true,\n      id: \"standard-firstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.clientFirstName,\n      onChange: this.handleChange(\"clientFirstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.clientLastName,\n      onChange: this.handleChange(\"clientLastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.clientEmail,\n      onChange: this.handleChange(\"clientEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-password-input\",\n      variant: \"outlined\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.clientCurrentPassword,\n      onChange: this.handleChange(\"clientCurrentPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-confirmPassword-input\",\n      variant: \"outlined\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange(\"confirmPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-select-sessionType\",\n      select: true,\n      label: \"Session Type\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.state.sessionType,\n      onChange: this.handleChange(\"sessionType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, sessionTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-cost\",\n      label: \"Session Cost (dollars)\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.sessionCost,\n      onChange: this.handleChange(\"sessionCost\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-length\",\n      label: \"Session Length (minutes)\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.sessionLength,\n      onChange: this.handleChange(\"sessionLength\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-address\",\n      variant: \"outlined\",\n      label: \"Address\",\n      className: classes.textField,\n      value: this.state.clientAddress,\n      onChange: this.handleChange(\"clientAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-city-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.clientCity,\n      onChange: this.handleChange(\"clientCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.clientState,\n      onChange: this.handleChange(\"clientState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-zipCode\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.clientZipCode,\n      onChange: this.handleChange(\"clientZipCode\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.clientPhone,\n      onChange: this.handleChange(\"clientPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-bday\",\n      variant: \"outlined\",\n      label: \"Birthday\",\n      className: classes.textField,\n      value: this.state.clientBday,\n      onChange: this.handleChange(\"clientBday\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-full-width\",\n      label: \"Additional Notes\",\n      style: {\n        margin: 8\n      },\n      className: classes.textField2,\n      value: this.state.clientNotes,\n      onChange: this.handleChange(\"clientNotes\"),\n      placeholder: \"Add any additional notes here\",\n      fullWidth: true,\n      multiline: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }, \"Contact Information\")), React.createElement(TextField, {\n      id: \"standard-select-contactTitle\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactTitle,\n      onChange: this.handleChange(\"contactTitle\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactFirstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactFirstName,\n      onChange: this.handleChange(\"contactFirstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactLastName,\n      onChange: this.handleChange(\"contactLastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactAddress\",\n      variant: \"outlined\",\n      label: \"Street Address\",\n      className: classes.textField,\n      value: this.state.contactAddress,\n      onChange: this.handleChange(\"contactAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactCity-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.contactCity,\n      onChange: this.handleChange(\"contactCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.contactState,\n      onChange: this.handleChange(\"contactState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactZip\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.contactZip,\n      onChange: this.handleChange(\"contactZip\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactEmail\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.contactEmail,\n      onChange: this.handleChange(\"contactEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactPhone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.contactPhone,\n      onChange: this.handleChange(\"contactPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title2,\n      align: \"center\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717\n      },\n      __self: this\n    }, \"Payor Information\")), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-paymentType\",\n      select: true,\n      label: \"Payment Type\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.paymentType,\n      onChange: this.handleChange(\"paymentType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726\n      },\n      __self: this\n    }, paymentTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-select-cardType\",\n      select: true,\n      label: \"Card Type\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cardType,\n      onChange: this.handleChange(\"cardType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747\n      },\n      __self: this\n    }, cardTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      required: true,\n      id: \"standard-nameOnCard\",\n      label: \"Name on Card\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.nameOnCard,\n      onChange: this.handleChange(\"nameOnCard\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-billingAddress\",\n      variant: \"outlined\",\n      label: \"Billing Street Address\",\n      className: classes.textField,\n      value: this.state.billingAddress,\n      onChange: this.handleChange(\"billingAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-cardNum\",\n      label: \"Card Number\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cardNum,\n      onChange: this.handleChange(\"cardNum\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-billingCity-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.billingCity,\n      onChange: this.handleChange(\"billingCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-payorEmail\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.payorEmail,\n      onChange: this.handleChange(\"payorEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-expDate\",\n      variant: \"outlined\",\n      label: \"Expiration Date\",\n      className: classes.textField,\n      value: this.state.expDate,\n      onChange: this.handleChange(\"expDate\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.billingState,\n      onChange: this.handleChange(\"billingState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.billingPhone,\n      onChange: this.handleChange(\"billingPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-cvv\",\n      label: \"CVV\",\n      type: \"password\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cvv,\n      onChange: this.handleChange(\"cvv\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-billingZip\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.billingZip,\n      onChange: this.handleChange(\"billingZip\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      onClick: () => {\n        this.onSubmit( // client info\n        this.state.clientFirstName, this.state.clientLastName, this.state.clientEmail, this.state.clientTitle, this.state.clientCurrentPassword, this.state.clientConfirmPassword, this.state.sessionType, this.state.sessionCost, this.state.sessionLegnth, this.state.clientPhone, this.state.clientAddress, this.state.clientBday, this.state.clientCity, this.state.clientState, this.state.clientZipCode, this.state.clientStreetAddress, this.state.contactNotes, // contact info\n        this.state.contactFirstName, this.state.contactLastName, this.state.contactEmail, this.state.contactTitle, this.state.contactPhone, this.state.contactAddress, this.state.contactCity, this.state.contactState, this.state.contactZip, // payor info\n        this.state.nameOnCard, this.state.cardNum, this.state.payorEmail, this.state.payorTitle, this.state.paymentType, this.state.billingPhone, this.state.billingAddress, this.state.billingCity, this.state.billingZip, this.state.billingState, this.state.cvv, this.state.expDate, this.state.cardType);\n        this.setLocation(); //this.setState({ navigate: true });\n        //this.reloadPage();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906\n      },\n      __self: this\n    }, \"Save\"))))))));\n  }\n\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TopPanel);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/newClientConsolidate.js"],"names":["React","PropTypes","withStyles","Paper","Grid","MenuItem","TextField","Button","FormGroup","FormControlLabel","Checkbox","Container","Typography","BrowserRouter","Switch","Link","Route","withRouter","Redirect","axios","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","width","menu","root","paddingTop","paddingBottom","container2","textField2","title","align","marginTop","marginBottom","title2","menu2","root2","saveButton","titles","value","label","sessionTypes","paymentTypes","cardTypes","navStyle","color","textDecoration","TopPanel","Component","state","clientFirstName","clientLastName","clientEmail","clientTitle","clientCurrentPassword","clientConfirmPassword","sessionType","sessionCost","sessionLegnth","clientPhone","clientAddress","clientBday","clientState","clientCity","clientZipCode","clientStreetAddress","clientNotes","multiline","contactFirstName","contactLastName","contactEmail","contactTitle","contactPhone","contactAddress","contactCity","contactState","contactZip","nameOnCard","cardNum","payorEmail","payorTitle","paymentType","billingPhone","billingAddress","billingCity","billingZip","billingState","cvv","expDate","cardType","sameAsContact","navigate","intervalIsSet","handleChange","name","event","setState","target","handleChange2","reloadPage","window","location","reload","console","log","componentDidMount","get","then","response","data","memberData","catch","error","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","onSubmit","obj","sessionLength","post","res","setLocation","props","history","push","render","classes","MenuProps","className","map","option","confirmPassword","margin","shrink","contactNotes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  BrowserRouter,\n  Switch,\n  Link,\n  Route,\n  withRouter,\n  Redirect\n} from \"react-router-dom\";\n//test\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2\n  },\n\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    // marginBottom: theme.spacing(10),\n    width: 850\n  },\n  title: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  title2: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  },\n\n  menu2: {\n    width: 200\n  },\n  root2: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n\n  saveButton: {\n    marginRight: theme.spacing(2),\n    align: \"center\"\n  }\n});\n\nconst titles = [\n  {\n    value: \"\",\n    label: \"\"\n  },\n\n  {\n    value: \"Dr.\",\n    label: \"Dr.\"\n  },\n\n  {\n    value: \"Miss\",\n    label: \"Miss\"\n  },\n\n  {\n    value: \"Mr.\",\n    label: \"Mr.\"\n  },\n  {\n    value: \"Mrs.\",\n    label: \"Mrs.\"\n  },\n  {\n    value: \"Ms.\",\n    label: \"Ms.\"\n  },\n  {\n    value: \"Mx.\",\n    label: \"Mx.\"\n  }\n];\n\nconst sessionTypes = [\n  {\n    value: \"Lessons\",\n    label: \"Lessons\"\n  },\n\n  {\n    value: \"Therapy\",\n    label: \"Therapy\"\n  }\n];\n\nconst paymentTypes = [\n  {\n    value: \"Card\",\n    label: \"Card\"\n  },\n\n  {\n    value: \"Cash\",\n    label: \"Cash\"\n  },\n\n  {\n    value: \"Check\",\n    label: \"Check\"\n  }\n];\n\nconst cardTypes = [\n  {\n    value: \"American Express\",\n    label: \"American Express\"\n  },\n\n  {\n    value: \"Discover\",\n    label: \"Discover\"\n  },\n\n  {\n    value: \"MasterCard\",\n    label: \"MasterCard\"\n  },\n  {\n    value: \"Visa\",\n    label: \"Visa\"\n  }\n];\n\nconst navStyle = {\n  color: \"black\",\n  textDecoration: \"none\"\n};\n\nclass TopPanel extends React.Component {\n  state = {\n    //client info state\n    clientFirstName: \"\",\n    clientLastName: \"\",\n    clientEmail: \"\",\n    clientTitle: \"\",\n    clientCurrentPassword: \"\",\n    clientConfirmPassword: \"\",\n    sessionType: \"\",\n    sessionCost: \"\",\n    sessionLegnth: \"\",\n    clientPhone: \"\",\n    clientAddress: \"\",\n    clientBday: \"\",\n    clientState: \"\",\n    clientCity: \"\",\n    clientZipCode: \"\",\n    clientStreetAddress: \"\",\n    clientNotes: \"\",\n    multiline: \"Controlled\",\n    //contact info state\n    contactFirstName: \"\",\n    contactLastName: \"\",\n    contactEmail: \"\",\n    contactTitle: \"\",\n    contactPhone: \"\",\n    contactAddress: \"\",\n    contactCity: \"\",\n    contactState: \"\",\n    contactZip: \"\",\n    //payor info state\n    nameOnCard: \"\",\n    cardNum: \"\",\n    payorEmail: \"\",\n    payorTitle: \"\",\n    paymentType: \"\",\n    billingPhone: \"\",\n    billingAddress: \"\",\n    billingCity: \"\",\n    billingZip: \"\",\n    billingState: \"\",\n    cvv: \"\",\n    expDate: \"\",\n    cardType: \"\",\n    sameAsContact: false,\n    //\n    //toDashboard: false,\n    navigate: false,\n    intervalIsSet: \"\"\n  };\n\n  reloadPage() {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/allclients\")\n      .then(response => {\n        console.log(\"Got client data!\");\n        console.log(response.data);\n        this.setState({\n          memberData: response.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Client data interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n\n    const obj = {\n      // client info\n      clientFirstName: this.state.clientFirstName,\n      clientLastName: this.state.clientLastName,\n      clientEmail: this.state.clientEmail,\n      clientTitle: this.state.clientTitle,\n      clientCurrentPassword: this.state.clientCurrentPassword,\n      clientConfirmPassword: this.state.clientConfirmPassword,\n      clientPhone: this.state.clientPhone,\n      clientAddress: this.state.clientAddress,\n      sessionType: this.state.sessionType,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLegnth,\n      //primaryLocation: this.state.primaryLocation,\n      clientBday: this.state.clientBday,\n      clientState: this.state.clientState,\n      clientCity: this.state.clientCity,\n      clientZipCode: this.state.clientZipCode,\n      clientStreetAddress: this.state.clientStreetAddress,\n      clientNotes: this.state.clientNotes,\n      // contact info\n      contactFirstName: this.state.contactFirstName,\n      contactLastName: this.state.contactLastName,\n      contactEmail: this.state.contactEmail,\n      contactTitle: this.state.contactTitle,\n      contactPhone: this.state.contactPhone,\n      contactAddress: this.state.contactAddress,\n      contactCity: this.state.contactCity,\n      contactState: this.state.contactState,\n      contactZip: this.state.contactZip,\n      // payor info\n      nameOnCard: this.state.nameOnCard,\n      cardNum: this.state.cardNum,\n      payorEmail: this.state.payorEmail,\n      payorTitle: this.state.payorTitle,\n      paymentType: this.state.paymentType,\n      billingPhone: this.state.billingPhone,\n      billingAddress: this.state.billingAddress,\n      billingCity: this.state.billingCity,\n      billingZip: this.state.billingZip,\n      billingState: this.state.billingState,\n      cvv: this.state.cvv,\n      expDate: this.state.expDate,\n      cardType: this.state.cardType\n    };\n    axios\n      .post(\"http://localhost:5000/clients/registerclient\", obj)\n      .then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      //client info\n      clientFirstName: this.state.clientFirstName,\n      clientLastName: this.state.clientLastName,\n      clientEmail: this.state.clientEmail,\n      clientTitle: this.state.clientTitle,\n      clientCurrentPassword: this.state.clientCurrentPassword,\n      clientConfirmPassword: this.state.clientConfirmPassword,\n      sessionType: this.state.sessionType,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLegnth,\n      clientPhone: this.state.clientPhone,\n      clientAddress: this.state.clientAddress,\n      clientBday: this.state.clientBday,\n      clientCity: this.state.clientCity,\n      clientState: this.state.clientState,\n      clientZipCode: this.state.clientZipCode,\n      clientStreetAddress: this.state.clientStreetAddress,\n      clientNotes: this.state.clientNotes,\n      // contact info\n      contactFirstName: this.state.contactFirstName,\n      contactLastName: this.state.contactLastName,\n      contactEmail: this.state.contactEmail,\n      contactTitle: this.state.contactTitle,\n      contactPhone: this.state.contactPhone,\n      contactAddress: this.state.contactAddress,\n      contactCity: this.state.contactCity,\n      contactState: this.state.contactState,\n      contactZip: this.state.contactZip,\n      // payor info\n      nameOnCard: this.state.nameOnCard,\n      cardNum: this.state.cardNum,\n      payorEmail: this.state.payorEmail,\n      payorTitle: this.state.payorTitle,\n      paymentType: this.state.paymentType,\n      billingPhone: this.state.billingPhone,\n      billingAddress: this.state.billingAddress,\n      billingCity: this.state.billingCity,\n      billingZip: this.state.billingZip,\n      billingState: this.state.billingState,\n      cvv: this.state.cvv,\n      expDate: this.state.expDate,\n      cardType: this.state.cardType\n    });\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChange2 = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n  /*\n  handleSubmit = (user) => {\n    saveUser(user)\n      .then(() => this.setState(() => ({\n        toDashboard: true\n      })))\n  }\n  */\n\n  setLocation() {\n    this.props.history.push(\"/clients\");\n  }\n\n  render() {\n    const { classes } = this.props;\n    /*\n    if (this.state.toDashboard === true) {\n        return <Redirect to='/dashboard' />\n      }\n  */\n\n    const { navigate } = this.state;\n\n    // here is the important part\n    if (navigate) {\n      return <Redirect to=\"/clients\" push={true} />;\n    }\n\n    return (\n      <BrowserRouter>\n        <Container maxWidth=\"lg\">\n          <form className={classes.container} noValidate autoComplete=\"off\">\n            <Paper className={classes.root} elevation={1}>\n              <Typography className={classes.title} align=\"center\" variant=\"h6\">\n                Client Information\n              </Typography>\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <TextField\n                  id=\"standard-select-title\"\n                  select\n                  label=\"Title\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.clientTitle}\n                  onChange={this.handleChange(\"clientTitle\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {titles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  required\n                  id=\"standard-firstName\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.clientFirstName}\n                  onChange={this.handleChange(\"clientFirstName\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  id=\"standard-lastNamename\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.clientLastName}\n                  onChange={this.handleChange(\"clientLastName\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  id=\"standard-email\"\n                  variant=\"outlined\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  value={this.state.clientEmail}\n                  onChange={this.handleChange(\"clientEmail\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  id=\"standard-password-input\"\n                  variant=\"outlined\"\n                  label=\"Password\"\n                  className={classes.textField}\n                  type=\"password\"\n                  value={this.state.clientCurrentPassword}\n                  onChange={this.handleChange(\"clientCurrentPassword\")}\n                  //autoComplete=\"current-password\"\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  id=\"standard-confirmPassword-input\"\n                  variant=\"outlined\"\n                  label=\"Confirm Password\"\n                  className={classes.textField}\n                  type=\"password\"\n                  value={this.state.confirmPassword}\n                  onChange={this.handleChange(\"confirmPassword\")}\n                  //autoComplete=\"current-password\"\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-select-sessionType\"\n                  select\n                  label=\"Session Type\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  className={classes.textField}\n                  value={this.state.sessionType}\n                  onChange={this.handleChange(\"sessionType\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {sessionTypes.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  id=\"standard-cost\"\n                  label=\"Session Cost (dollars)\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.sessionCost}\n                  onChange={this.handleChange(\"sessionCost\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-length\"\n                  label=\"Session Length (minutes)\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.sessionLength}\n                  onChange={this.handleChange(\"sessionLength\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-address\"\n                  variant=\"outlined\"\n                  label=\"Address\"\n                  className={classes.textField}\n                  value={this.state.clientAddress}\n                  onChange={this.handleChange(\"clientAddress\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-city-\"\n                  variant=\"outlined\"\n                  label=\"City\"\n                  className={classes.textField}\n                  value={this.state.clientCity}\n                  onChange={this.handleChange(\"clientCity\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-state\"\n                  variant=\"outlined\"\n                  label=\"State\"\n                  className={classes.textField}\n                  value={this.state.clientState}\n                  onChange={this.handleChange(\"clientState\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-zipCode\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.clientZipCode}\n                  onChange={this.handleChange(\"clientZipCode\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-phone\"\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  className={classes.textField}\n                  value={this.state.clientPhone}\n                  onChange={this.handleChange(\"clientPhone\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-bday\"\n                  variant=\"outlined\"\n                  label=\"Birthday\"\n                  className={classes.textField}\n                  value={this.state.clientBday}\n                  onChange={this.handleChange(\"clientBday\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-full-width\"\n                  label=\"Additional Notes\"\n                  style={{ margin: 8 }}\n                  className={classes.textField2}\n                  value={this.state.clientNotes}\n                  onChange={this.handleChange(\"clientNotes\")}\n                  placeholder=\"Add any additional notes here\"\n                  fullWidth\n                  multiline\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                />\n                <Container>\n                  <Typography\n                    className={classes.title}\n                    align=\"center\"\n                    variant=\"h6\"\n                  >\n                    Contact Information\n                  </Typography>\n                </Container>\n                {/* Contact Info*/}\n                <TextField\n                  id=\"standard-select-contactTitle\"\n                  select\n                  label=\"Title\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactTitle}\n                  onChange={this.handleChange(\"contactTitle\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {titles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  required\n                  id=\"standard-contactFirstName\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactFirstName}\n                  onChange={this.handleChange(\"contactFirstName\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  id=\"standard-lastNamename\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactLastName}\n                  onChange={this.handleChange(\"contactLastName\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-contactAddress\"\n                  variant=\"outlined\"\n                  label=\"Street Address\"\n                  className={classes.textField}\n                  value={this.state.contactAddress}\n                  onChange={this.handleChange(\"contactAddress\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-contactCity-\"\n                  variant=\"outlined\"\n                  label=\"City\"\n                  className={classes.textField}\n                  value={this.state.contactCity}\n                  onChange={this.handleChange(\"contactCity\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-state\"\n                  variant=\"outlined\"\n                  label=\"State\"\n                  className={classes.textField}\n                  value={this.state.contactState}\n                  onChange={this.handleChange(\"contactState\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-contactZip\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.contactZip}\n                  onChange={this.handleChange(\"contactZip\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  id=\"standard-contactEmail\"\n                  variant=\"outlined\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  value={this.state.contactEmail}\n                  onChange={this.handleChange(\"contactEmail\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-contactPhone\"\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  className={classes.textField}\n                  value={this.state.contactPhone}\n                  onChange={this.handleChange(\"contactPhone\")}\n                  margin=\"normal\"\n                />\n                {/*\n            <Button\n              size=\"medium\"\n              variant=\"contained\"\n              className={classes.button}\n            >\n              Add Additional\n            </Button>\n            */}\n\n                {/* Payor Info  */}\n                {/*\n              <FormGroup className={classes.marg} row>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state.sameAsContact}\n                      onChange={this.handleChange(\"sameAsContact\")}\n                      value=\"sameAsContact\"\n                      color=\"default\"\n                    />\n                  }\n                  label=\"Same as contact\" \n                />\n              </FormGroup>\n                */}\n                <Container>\n                  <Typography\n                    className={classes.title2}\n                    align=\"center\"\n                    variant=\"h6\"\n                  >\n                    Payor Information\n                  </Typography>\n                </Container>\n                <Grid container justify=\"center\" alignItems=\"center\">\n                  <TextField\n                    id=\"standard-select-paymentType\"\n                    select\n                    label=\"Payment Type\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.paymentType}\n                    onChange={this.handleChange(\"paymentType\")}\n                    SelectProps={{\n                      MenuProps: {\n                        className: classes.menu\n                      }\n                    }}\n                  >\n                    {paymentTypes.map(option => (\n                      <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n\n                  <TextField\n                    id=\"standard-select-cardType\"\n                    select\n                    label=\"Card Type\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.cardType}\n                    onChange={this.handleChange(\"cardType\")}\n                    SelectProps={{\n                      MenuProps: {\n                        className: classes.menu\n                      }\n                    }}\n                  >\n                    {cardTypes.map(option => (\n                      <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n\n                  {/*\n\n                <TextField\n                  id=\"standard-select-payorTitle\"\n                  select\n                  label=\"payorTitle\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.payorTitle}\n                  onChange={this.handleChange(\"payorTitle\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {titles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                  */}\n\n                  <TextField\n                    required\n                    id=\"standard-nameOnCard\"\n                    label=\"Name on Card\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.nameOnCard}\n                    onChange={this.handleChange(\"nameOnCard\")}\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    id=\"standard-billingAddress\"\n                    variant=\"outlined\"\n                    label=\"Billing Street Address\"\n                    className={classes.textField}\n                    value={this.state.billingAddress}\n                    onChange={this.handleChange(\"billingAddress\")}\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    required\n                    id=\"standard-cardNum\"\n                    label=\"Card Number\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.cardNum}\n                    onChange={this.handleChange(\"cardNum\")}\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    id=\"standard-billingCity-\"\n                    variant=\"outlined\"\n                    label=\"City\"\n                    className={classes.textField}\n                    value={this.state.billingCity}\n                    onChange={this.handleChange(\"billingCity\")}\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    required\n                    id=\"standard-payorEmail\"\n                    variant=\"outlined\"\n                    label=\"Email\"\n                    className={classes.textField}\n                    value={this.state.payorEmail}\n                    onChange={this.handleChange(\"payorEmail\")}\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    id=\"standard-expDate\"\n                    variant=\"outlined\"\n                    label=\"Expiration Date\"\n                    className={classes.textField}\n                    value={this.state.expDate}\n                    onChange={this.handleChange(\"expDate\")}\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    id=\"standard-state\"\n                    variant=\"outlined\"\n                    label=\"State\"\n                    className={classes.textField}\n                    value={this.state.billingState}\n                    onChange={this.handleChange(\"billingState\")}\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    id=\"standard-phone\"\n                    variant=\"outlined\"\n                    label=\"Phone Number\"\n                    className={classes.textField}\n                    value={this.state.billingPhone}\n                    onChange={this.handleChange(\"billingPhone\")}\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    required\n                    id=\"standard-cvv\"\n                    label=\"CVV\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.cvv}\n                    onChange={this.handleChange(\"cvv\")}\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    id=\"standard-billingZip\"\n                    variant=\"outlined\"\n                    label=\"Zip Code\"\n                    className={classes.textField}\n                    value={this.state.billingZip}\n                    onChange={this.handleChange(\"billingZip\")}\n                    margin=\"normal\"\n                  />\n                  {/*\n                <Button\n                  size=\"medium\"\n                  variant=\"contained\"\n                  className={classes.button}\n                >\n                  +\n                </Button>\n*/}\n                  <Container>\n                    <Button\n                      className={classes.saveButton}\n                      size=\"large\"\n                      variant=\"contained\"\n                      onClick={() => {\n                        this.onSubmit(\n                          // client info\n                          this.state.clientFirstName,\n                          this.state.clientLastName,\n                          this.state.clientEmail,\n                          this.state.clientTitle,\n                          this.state.clientCurrentPassword,\n                          this.state.clientConfirmPassword,\n                          this.state.sessionType,\n                          this.state.sessionCost,\n                          this.state.sessionLegnth,\n                          this.state.clientPhone,\n                          this.state.clientAddress,\n                          this.state.clientBday,\n                          this.state.clientCity,\n                          this.state.clientState,\n                          this.state.clientZipCode,\n                          this.state.clientStreetAddress,\n                          this.state.contactNotes,\n                          // contact info\n                          this.state.contactFirstName,\n                          this.state.contactLastName,\n                          this.state.contactEmail,\n                          this.state.contactTitle,\n                          this.state.contactPhone,\n                          this.state.contactAddress,\n                          this.state.contactCity,\n                          this.state.contactState,\n                          this.state.contactZip,\n                          // payor info\n                          this.state.nameOnCard,\n                          this.state.cardNum,\n                          this.state.payorEmail,\n                          this.state.payorTitle,\n                          this.state.paymentType,\n                          this.state.billingPhone,\n                          this.state.billingAddress,\n                          this.state.billingCity,\n                          this.state.billingZip,\n                          this.state.billingState,\n                          this.state.cvv,\n                          this.state.expDate,\n                          this.state.cardType\n                        );\n                        this.setLocation();\n                        //this.setState({ navigate: true });\n                        //this.reloadPage();\n                      }}\n                    >\n                      Save\n                    </Button>\n                  </Container>\n                </Grid>\n              </Grid>\n            </Paper>\n          </form>\n        </Container>\n      </BrowserRouter>\n    );\n  }\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TopPanel);\n"]},"metadata":{},"sourceType":"module"}