{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/frontEndTest3.js\";\nimport React, { Component } from \"react\";\n\nclass Example extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {}\n    };\n    this.onSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getDataFromDb();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  } // never let a process live forever\n  // always kill a process everytime we are done using it\n\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    var self = this; // On submit of the form, send a POST request with the data to the server.\n\n    fetch(\"/users\", {\n      method: \"POST\",\n      data: {\n        name: self.refs.name,\n        job: self.refs.job\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (body) {\n      console.log(body);\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      ref: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Job\",\n      ref: \"job\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Example;","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/frontEndTest3.js"],"names":["React","Component","Example","constructor","state","user","onSubmit","handleSubmit","bind","componentDidMount","getDataFromDb","intervalIsSet","interval","setInterval","setState","componentWillUnmount","clearInterval","e","preventDefault","self","fetch","method","data","name","refs","job","then","response","json","body","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACC,SAA5B,CAAsC;AACpCE,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AACA,SAAKC,QAAL,GAAgB,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAhB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,aAAL;;AACA,QAAI,CAAC,KAAKN,KAAL,CAAWO,aAAhB,EAA+B;AAC7B,UAAIC,QAAQ,GAAGC,WAAW,CAAC,KAAKH,aAAN,EAAqB,IAArB,CAA1B;AACA,WAAKI,QAAL,CAAc;AAAEH,QAAAA,aAAa,EAAEC;AAAjB,OAAd;AACD;AACF,GAbmC,CAepC;AACA;;;AACAG,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKX,KAAL,CAAWO,aAAf,EAA8B;AAC5BK,MAAAA,aAAa,CAAC,KAAKZ,KAAL,CAAWO,aAAZ,CAAb;AACA,WAAKG,QAAL,CAAc;AAAEH,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACD;AACF;;AAEDJ,EAAAA,YAAY,CAACU,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,IAAI,GAAG,IAAX,CAFc,CAGd;;AACAC,IAAAA,KAAK,CAAC,QAAD,EAAW;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEJ,IAAI,CAACK,IAAL,CAAUD,IADZ;AAEJE,QAAAA,GAAG,EAAEN,IAAI,CAACK,IAAL,CAAUC;AAFX;AAFQ,KAAX,CAAL,CAOGC,IAPH,CAOQ,UAASC,QAAT,EAAmB;AACvB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KATH,EAUGF,IAVH,CAUQ,UAASG,IAAT,EAAe;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAZH;AAaD;;AACDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAK1B,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,MAA/B;AAAsC,MAAA,GAAG,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,KAA/B;AAAqC,MAAA,GAAG,EAAC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAlDmC;;AAqDtC,eAAeJ,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Example extends React.Component {\n  constructor() {\n    super();\n    this.state = { user: {} };\n    this.onSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getDataFromDb();\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n    }\n  }\n\n  // never let a process live forever\n  // always kill a process everytime we are done using it\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    var self = this;\n    // On submit of the form, send a POST request with the data to the server.\n    fetch(\"/users\", {\n      method: \"POST\",\n      data: {\n        name: self.refs.name,\n        job: self.refs.job\n      }\n    })\n      .then(function(response) {\n        return response.json();\n      })\n      .then(function(body) {\n        console.log(body);\n      });\n  }\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input type=\"text\" placeholder=\"Name\" ref=\"name\" />\n        <input type=\"text\" placeholder=\"Job\" ref=\"job\" />\n        <input type=\"submit\" />\n      </form>\n    );\n  }\n}\n\nexport default Example;\n"]},"metadata":{},"sourceType":"module"}