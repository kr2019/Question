{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/calTest.js\";\nimport React, { Component } from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport axios from \"axios\";\nimport logo from \"./logo.svg\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./App.css\";\nmoment.locale(\"en-GB\");\nBigCalendar.momentLocalizer(moment);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.convertDate = date => {\n      return moment.utc(date).toDate();\n    };\n\n    this.state = {\n      cal_events: [//State is updated via componentDidMount\n      ]\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/events\").then(response => {\n      console.log(response.data);\n      let appointments = response.data;\n\n      for (let i = 0; i < appointments.length; i++) {\n        appointments[i].start = this.convertDate(appointments[i].start);\n        appointments[i].end = this.convertDate(appointments[i].end);\n      }\n\n      this.setState({\n        cal_events: appointments\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const cal_events = this.state.cal_events;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"App-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"React Calendar\")), React.createElement(\"div\", {\n      style: {\n        height: 700\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(BigCalendar, {\n      events: cal_events,\n      step: 30,\n      defaultView: \"week\",\n      views: [\"month\", \"week\", \"day\"],\n      defaultDate: new Date(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/calTest.js"],"names":["React","Component","BigCalendar","moment","axios","locale","momentLocalizer","App","constructor","props","convertDate","date","utc","toDate","state","cal_events","componentDidMount","get","then","response","console","log","data","appointments","i","length","start","end","setState","catch","error","render","logo","height","Date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,OAAO,mDAAP;AACA,OAAO,WAAP;AAEAD,MAAM,CAACE,MAAP,CAAc,OAAd;AACAH,WAAW,CAACI,eAAZ,CAA4BH,MAA5B;;AAEA,MAAMI,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,WAVmB,GAULC,IAAI,IAAI;AACpB,aAAOR,MAAM,CAACS,GAAP,CAAWD,IAAX,EAAiBE,MAAjB,EAAP;AACD,KAZkB;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,CACV;AADU;AADD,KAAb;AAKD;;AAMDC,EAAAA,iBAAiB,GAAG;AAClBZ,IAAAA,KAAK,CACFa,GADH,CACO,8BADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,UAAIC,YAAY,GAAGJ,QAAQ,CAACG,IAA5B;;AAEA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAAY,CAACE,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CD,QAAAA,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,GAAwB,KAAKhB,WAAL,CAAiBa,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAjC,CAAxB;AACAH,QAAAA,YAAY,CAACC,CAAD,CAAZ,CAAgBG,GAAhB,GAAsB,KAAKjB,WAAL,CAAiBa,YAAY,CAACC,CAAD,CAAZ,CAAgBG,GAAjC,CAAtB;AACD;;AAED,WAAKC,QAAL,CAAc;AACZb,QAAAA,UAAU,EAAEQ;AADA,OAAd;AAGD,KAdH,EAeGM,KAfH,CAeS,UAASC,KAAT,EAAgB;AACrBV,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,KAjBH;AAkBD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACChB,UADD,GACgB,KAAKD,KADrB,CACCC,UADD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEiB,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADF,EAKE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AACE,MAAA,MAAM,EAAElB,UADV;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,WAAW,EAAC,MAHd;AAIE,MAAA,KAAK,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,KAAlB,CAJT;AAKE,MAAA,WAAW,EAAE,IAAImB,IAAJ,EALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CADF;AAiBD;;AAxDyB;;AA2D5B,eAAe3B,GAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nimport axios from \"axios\";\n\nimport logo from \"./logo.svg\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./App.css\";\n\nmoment.locale(\"en-GB\");\nBigCalendar.momentLocalizer(moment);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cal_events: [\n        //State is updated via componentDidMount\n      ]\n    };\n  }\n\n  convertDate = date => {\n    return moment.utc(date).toDate();\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/events\")\n      .then(response => {\n        console.log(response.data);\n        let appointments = response.data;\n\n        for (let i = 0; i < appointments.length; i++) {\n          appointments[i].start = this.convertDate(appointments[i].start);\n          appointments[i].end = this.convertDate(appointments[i].end);\n        }\n\n        this.setState({\n          cal_events: appointments\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const { cal_events } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">React Calendar</h1>\n        </header>\n        <div style={{ height: 700 }}>\n          <BigCalendar\n            events={cal_events}\n            step={30}\n            defaultView=\"week\"\n            views={[\"month\", \"week\", \"day\"]}\n            defaultDate={new Date()}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}