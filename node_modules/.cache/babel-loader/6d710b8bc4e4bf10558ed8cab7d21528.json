{"ast":null,"code":"import _objectWithoutProperties from \"/Users/kenneth/repos2/mtsaas/mtrepo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/newClientConsolidate.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport red from \"@material-ui/core/colors/red\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport Switch from \"@material-ui/core/Switch\";\nimport classNames from \"classnames\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport green from \"@material-ui/core/colors/green\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\"; // putting commmnent to change push comment\n//\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    ///marginTop: theme.spacing(1),\n    width: 300\n  },\n  textFieldTest: {\n    marginRight: theme.spacing(79),\n    width: 300\n  },\n  checkboxAlign: {\n    marginRight: theme.spacing(86)\n  },\n  textFieldSession: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginTop: theme.spacing(10),\n    width: 300\n  },\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    // paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2 //backgroundColor: red[200]\n\n  },\n  rootTitle: {\n    width: \"100%\",\n    marginTop: theme.spacing(-1),\n    marginBottom: theme.spacing(2),\n    backgroundColor: Cyan[800],\n    color: theme.palette.getContrastText(\"#00838f\") //paddingTop: theme.spacing.unit,\n    //paddingBottom: theme.spacing.unit * 2\n\n  },\n  rootTitle2: {\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n    backgroundColor: \"#1de9b6\" //paddingTop: theme.spacing.unit,\n    //paddingBottom: theme.spacing.unit * 2\n\n  },\n  marg: {\n    marginRight: theme.spacing(44) // marginBottom: theme.spacing(5)\n\n  },\n  textFieldAlign: {\n    marginRight: theme.spacing(49),\n    width: 300 // marginBottom: theme.spacing(5)\n\n  },\n  textFieldAlign2: {\n    marginRight: theme.spacing(79),\n    width: 300 // marginBottom: theme.spacing(5)\n\n  },\n  textFieldAlign3: {\n    marginRight: theme.spacing(79),\n    paddingBottom: theme.spacing(2),\n    width: 300 // marginBottom: theme.spacing(5)\n\n  },\n  alignCheck: {// marginRight: theme.spacing(40)\n    // marginBottom: theme.spacing(5)\n  },\n  checkedRoot: {\n    // color: \"#00838f\",\n    \"&$checked\": {\n      color: \"#80cbc4\"\n    }\n  },\n  checked: {},\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textFieldNotes: {\n    //marginLeft: theme.spacing.unit,\n    //marginRight: theme.spacing.unit,\n    //marginBottom: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    width: 938\n  },\n  textField3: {\n    marginLeft: theme.spacing(24),\n    //marginBottom: theme.spacing(5),\n    // marginRight: theme.spacing(20),\n    width: 300\n  },\n  title: {\n    align: \"center\" //marginTop: theme.spacing(1)\n    //marginBottom: theme.spacing(3)\n\n  },\n  title2: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  },\n  checkBoxPadding: {\n    paddingBottom: theme.spacing(2)\n  },\n  menu2: {\n    width: 200\n  },\n  root2: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  root3: {\n    width: \"5%\"\n  },\n  divider: {\n    backgroundColor: \"#1de9b6\",\n    marginBottom: theme.spacing(2)\n  },\n  saveButton: {\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n    /* this is text color */\n    color: theme.palette.getContrastText(\"#b2dfdb\"),\n    backgroundColor: \"#b2dfdb\",\n    \"&:hover\": {\n      backgroundColor: \"#80cbc4\"\n    },\n    success: {\n      backgroundColor: green[600]\n    },\n    iconSnack: {\n      fontSize: 5\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(10)\n    },\n    message: {\n      display: \"flex\",\n      alignItems: \"center\"\n    }\n  }\n});\n\nconst variantIcon = {\n  success: CheckCircleIcon\n};\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#b2dfdb\"\n    }\n  }\n});\nconst theme2 = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#80cbc4\"\n    }\n  }\n});\nconst titles = [{\n  value: null,\n  label: null\n}, {\n  value: \"Dr.\",\n  label: \"Dr.\"\n}, {\n  value: \"Miss\",\n  label: \"Miss\"\n}, {\n  value: \"Mr.\",\n  label: \"Mr.\"\n}, {\n  value: \"Mrs.\",\n  label: \"Mrs.\"\n}, {\n  value: \"Ms.\",\n  label: \"Ms.\"\n}, {\n  value: \"Mx.\",\n  label: \"Mx.\"\n}];\nconst clientTypes = [{\n  value: \"Individual\",\n  label: \"Individual\"\n}, {\n  value: \"Facility\",\n  label: \"Facility\"\n}];\nconst sessionTypes = [{\n  value: \"Lessons\",\n  label: \"Lessons\"\n}, {\n  value: \"Therapy\",\n  label: \"Therapy\"\n}];\nconst paymentTypes = [{\n  value: \"Card\",\n  label: \"Card\"\n}, {\n  value: \"Cash\",\n  label: \"Cash\"\n}, {\n  value: \"Check\",\n  label: \"Check\"\n}];\nconst cardTypes = [{\n  value: \"American Express\",\n  label: \"American Express\"\n}, {\n  value: \"Discover\",\n  label: \"Discover\"\n}, {\n  value: \"MasterCard\",\n  label: \"MasterCard\"\n}, {\n  value: \"Visa\",\n  label: \"Visa\"\n}];\nconst navStyle = {\n  color: \"black\",\n  textDecoration: \"none\"\n};\n\nfunction MySnackbarContent(props) {\n  const classes = props.classes,\n        className = props.className,\n        message = props.message,\n        onClose = props.onClose,\n        variant = props.variant,\n        other = _objectWithoutProperties(props, [\"classes\", \"className\", \"message\", \"onClose\", \"variant\"]);\n\n  const Icon = variantIcon[variant];\n  return React.createElement(SnackbarContent, Object.assign({\n    className: classNames(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: classNames(classes.iconSnack, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }), message),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      className: classes.close,\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      className: classes.iconSnack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }))]\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }));\n}\n\nconst MySnackbarContentWrapper = withStyles(styles)(MySnackbarContent);\n\nclass TopPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      //client info state\n      clientType: null,\n      clientFirstName: null,\n      clientLastName: null,\n      clientEmail: null,\n      clientTitle: null,\n      clientCurrentPassword: null,\n      clientConfirmPassword: null,\n      sessionType: null,\n      sessionCost: null,\n      sessionLegnth: null,\n      clientPhone: null,\n      clientAddress: null,\n      clientBday: null,\n      clientState: null,\n      clientCity: null,\n      clientZipCode: null,\n      clientStreetAddress: null,\n      clientFacility: null,\n      clientNotes: null,\n      multiline: \"Controlled\",\n      //contact info state\n      checkedSameCont: null,\n      contactFirstName: null,\n      contactLastName: null,\n      contactEmail: null,\n      contactCheckedRecEmails: null,\n      contactTitle: null,\n      contactPhone: null,\n      contact2ndPhone: null,\n      // still need to add this to the database\n      contactAddress: null,\n      contactCity: null,\n      contactState: null,\n      contactZip: null,\n      // contact 2 info state\n      contactFirstName2: null,\n      contactLastName2: null,\n      contactEmail2: null,\n      contactTitle2: null,\n      contactPhone2: null,\n      contact2ndPhone2: null,\n      // still need to add this to the database\n      contactAddress2: null,\n      contactCity2: null,\n      contactState2: null,\n      contactZip2: null,\n      // contact 3 info state\n      contactFirstName3: null,\n      contactLastName3: null,\n      contactEmail3: null,\n      contactTitle3: null,\n      contactPhone3: null,\n      contact2ndPhone3: null,\n      // still need to add this to the database\n      contactAddress3: null,\n      contactCity3: null,\n      contactState3: null,\n      contactZip3: null,\n      //payor info state\n      billingFirstName: null,\n      billingLastName: null,\n      nameOnCard: null,\n      cardNum: null,\n      payorEmail: null,\n      payorTitle: null,\n      paymentType: null,\n      billingPhone: null,\n      billingAddress: null,\n      billingCity: null,\n      billingZip: null,\n      billingState: null,\n      cvv: null,\n      expDate: null,\n      cardType: null,\n      sameAsContact: false,\n      //toDashboard: false,\n      navigate: false,\n      //intervalIsSet: null\n      therapistData: [],\n      therapist: null,\n      // condition\n      checkedContact2: false,\n      checkedContact3: false\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeCheckSameCont = name => event => {\n      this.setState({\n        [name]: event.target.checked,\n        contactFirstName: this.state.clientFirstName,\n        contactLastName: this.state.clientLastName,\n        contactEmail: this.state.clientEmail,\n        contactTitle: this.state.clientTitle,\n        contactPhone: this.state.clientPhone,\n        contactAddress: this.state.clientAddress,\n        contactCity: this.state.clientCity,\n        contactState: this.state.clientState,\n        contactZip: this.state.clientZipCode\n      });\n    };\n\n    this.handleChangeCheck2 = name => event => {\n      this.setState({\n        [name]: event.target.checked,\n        //this will set the values to blank once the window is closed\n        contactFirstName2: null,\n        contactLastName2: null,\n        contactEmail2: null,\n        contactTitle2: null,\n        contactPhone2: null,\n        contact2ndPhone2: null,\n        contactAddress2: null,\n        contactCity2: null,\n        contactState2: null,\n        contactZip2: null,\n        // contact 3,\n        checkedContact3: false,\n        contactFirstName3: null,\n        contactLastName3: null,\n        contactEmail3: null,\n        contactTitle3: null,\n        contactPhone3: null,\n        contact2ndPhone3: null,\n        contactAddress3: null,\n        contactCity3: null,\n        contactState3: null,\n        contactZip3: null\n      });\n    };\n\n    this.handleChangeCheck3 = name => event => {\n      this.setState({\n        [name]: event.target.checked,\n        //this will set the values to blank once the window is closed\n        contactFirstName3: null,\n        contactLastName3: null,\n        contactEmail3: null,\n        contactTitle3: null,\n        contactPhone3: null,\n        contact2ndPhone3: null,\n        contactAddress3: null,\n        contactCity3: null,\n        contactState3: null,\n        contactZip3: null\n      });\n    };\n\n    this.handleChangeCard = name => event => {\n      this.setState({\n        [name]: event.target.value,\n        nameOnCard: null,\n        cardNum: null,\n        cvv: null,\n        expDate: null,\n        cardType: null\n      });\n    };\n\n    this.handleChangeChecked = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n\n    this.toggleShow = () => {\n      this.setState(state => ({\n        isShow: !state.isShow\n      }));\n    };\n\n    this.handleClickSnackBar = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleCloseSnackBar = (event, reason) => {\n      if (reason === \"clickaway\") {\n        return;\n      }\n\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  /*\n  reloadPage() {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  }\n  */\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/allclients\").then(response => {\n      console.log(\"Got client data!\");\n      console.log(response.data);\n      this.setState({\n        clientData: response.data\n      });\n    }).then(response2 => {\n      return axios.get(\"http://localhost:5000/gettherapists\") // this is not using the sequelize method\n      .then(response2 => {\n        console.log(\"Got therapist data!\");\n        console.log(response2.data);\n        this.setState({\n          therapistData: response2.data\n        });\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n    const clientObj = {\n      // client info\n      checkedActive: false,\n      clientType: this.state.clientType,\n      clientFirstName: this.state.clientFirstName,\n      clientLastName: this.state.clientLastName,\n      clientEmail: this.state.clientEmail,\n      clientTitle: this.state.clientTitle,\n      clientCurrentPassword: this.state.clientCurrentPassword,\n      clientConfirmPassword: this.state.clientConfirmPassword,\n      clientPhone: this.state.clientPhone,\n      clientAddress: this.state.clientAddress,\n      sessionType: this.state.sessionType,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLegnth,\n      clientBday: this.state.clientBday,\n      clientState: this.state.clientState,\n      clientCity: this.state.clientCity,\n      clientZipCode: this.state.clientZipCode,\n      clientStreetAddress: this.state.clientStreetAddress,\n      clientNotes: this.state.clientNotes,\n      // contact info\n      contactFirstName: this.state.contactFirstName,\n      contactLastName: this.state.contactLastName,\n      contactEmail: this.state.contactEmail,\n      contactTitle: this.state.contactTitle,\n      contactPhone: this.state.contactPhone,\n      contactAddress: this.state.contactAddress,\n      contactCity: this.state.contactCity,\n      contactState: this.state.contactState,\n      contactZip: this.state.contactZip,\n      // contact 2 info\n      contactFirstName2: this.state.contactFirstName2,\n      contactLastName2: this.state.contactLastName2,\n      contactEmail2: this.state.contactEmail2,\n      contactTitle2: this.state.contactTitle2,\n      contactPhone2: this.state.contactPhone2,\n      contactAddress2: this.state.contactAddress2,\n      contactCity2: this.state.contactCity2,\n      contactState2: this.state.contactState2,\n      contactZip2: this.state.contactZip2,\n      // contact 3 info\n      contactFirstName3: this.state.contactFirstName3,\n      contactLastName3: this.state.contactLastName3,\n      contactEmail3: this.state.contactEmail3,\n      contactTitle3: this.state.contactTitle3,\n      contactPhone3: this.state.contactPhone3,\n      contactAddress3: this.state.contactAddress3,\n      contactCity3: this.state.contactCity3,\n      contactState3: this.state.contactState3,\n      contactZip3: this.state.contactZip3,\n      // payor info\n      billingFirstName: this.state.billingFirstName,\n      billingLastName: this.state.billingLastName,\n      nameOnCard: this.state.nameOnCard,\n      cardNum: this.state.cardNum,\n      payorEmail: this.state.payorEmail,\n      payorTitle: this.state.payorTitle,\n      paymentType: this.state.paymentType,\n      billingPhone: this.state.billingPhone,\n      billingAddress: this.state.billingAddress,\n      billingCity: this.state.billingCity,\n      billingZip: this.state.billingZip,\n      billingState: this.state.billingState,\n      cvv: this.state.cvv,\n      expDate: this.state.expDate,\n      cardType: this.state.cardType\n    };\n    axios.post(\"http://localhost:5000/clients/registerclient\", clientObj).then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      //client info\n      clientObj\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const therapistData = this.state.therapistData;\n    /*\n    if (this.state.toDashboard === true) {\n        return <Redirect to='/dashboard' />\n      }\n    */\n\n    /*\n     const { navigate } = this.state;\n     // here is the important part\n    if (navigate) {\n      return <Redirect to=\"/clients\" push={true} />;\n    }\n    */\n\n    return React.createElement(Container, {\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.rootTitle,\n      elevation: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694\n      },\n      __self: this\n    }, \"Client Information\")), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      row: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }, React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      className: classes.marg,\n      control: React.createElement(Switch, {\n        checked: this.state.checkedActive,\n        onChange: this.handleChangeChecked(\"checkedActive\"),\n        value: \"checkedActive\" // marginLeft=\"theme.spacing(2)\"\n\n        /*\n        classes={{\n        switchBase: \"#1de9b6\",\n        checked: \"#1de9b6\",\n        bar: \"#1de9b6\"\n        }}*/\n        ,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706\n        },\n        __self: this\n      }),\n      label: \"Active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703\n      },\n      __self: this\n    }))), React.createElement(TextField, {\n      id: \"standard-select-clientType\",\n      select: true,\n      required: true,\n      label: \"Client Type\",\n      variant: \"outlined\",\n      className: classes.textField3,\n      value: this.state.clientType,\n      onChange: this.handleChange(\"clientType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726\n      },\n      __self: this\n    }, clientTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742\n      },\n      __self: this\n    }, option.label)))), React.createElement(TextField, {\n      id: \"standard-select-title\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.clientTitle,\n      margin: \"normal\",\n      onChange: this.handleChange(\"clientTitle\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765\n      },\n      __self: this\n    }, option.label))), React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-firstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.clientFirstName,\n      onChange: this.handleChange(\"clientFirstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771\n      },\n      __self: this\n    })), React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.clientLastName,\n      onChange: this.handleChange(\"clientLastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782\n      },\n      __self: this\n    }), this.state.clientType === \"Facility\" ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-facility-name\",\n      label: \"Facility Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.clientFacility,\n      onChange: this.handleChange(\"clientFacility\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796\n      },\n      __self: this\n    }) : null, React.createElement(TextField, {\n      required: true,\n      id: \"standard-email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.clientEmail,\n      onChange: this.handleChange(\"clientEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-password-input\",\n      variant: \"outlined\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.clientCurrentPassword,\n      onChange: this.handleChange(\"clientCurrentPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-confirmPassword-input\",\n      variant: \"outlined\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange(\"confirmPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-address\",\n      variant: \"outlined\",\n      label: \"Address\",\n      className: classes.textField,\n      value: this.state.clientAddress,\n      onChange: this.handleChange(\"clientAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-city-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.clientCity,\n      onChange: this.handleChange(\"clientCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.clientState,\n      onChange: this.handleChange(\"clientState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-zipCode\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.clientZipCode,\n      onChange: this.handleChange(\"clientZipCode\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.clientPhone,\n      onChange: this.handleChange(\"clientPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879\n      },\n      __self: this\n    }), this.state.clientType === \"Facility\" ? React.createElement(TextField, {\n      id: \"standard-bday\",\n      variant: \"outlined\",\n      label: \"Birthday\",\n      className: classes.textFieldTest,\n      value: this.state.clientBday,\n      onChange: this.handleChange(\"clientBday\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 890\n      },\n      __self: this\n    }) : React.createElement(TextField, {\n      id: \"standard-bday\",\n      variant: \"outlined\",\n      label: \"Birthday\",\n      className: classes.textField,\n      value: this.state.clientBday,\n      onChange: this.handleChange(\"clientBday\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 900\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      row: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-sessionType\",\n      select: true,\n      label: \"Session Type\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textFieldSession,\n      value: this.state.sessionType,\n      onChange: this.handleChange(\"sessionType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912\n      },\n      __self: this\n    }, sessionTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 928\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-cost\",\n      label: \"Session Cost (dollars)\",\n      variant: \"outlined\",\n      className: classes.textFieldSession,\n      value: this.state.sessionCost,\n      onChange: this.handleChange(\"sessionCost\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-length\",\n      label: \"Session Length (minutes)\",\n      variant: \"outlined\",\n      className: classes.textFieldSession,\n      value: this.state.sessionLength,\n      onChange: this.handleChange(\"sessionLength\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 942\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 951\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-therapist\",\n      select: true,\n      label: \"Therapist\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textFieldTest,\n      value: this.state.therapist,\n      onChange: this.handleChange(\"therapist\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 952\n      },\n      __self: this\n    }, therapistData.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.member_full_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968\n      },\n      __self: this\n    }, option.member_full_name))))), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979\n      },\n      __self: this\n    }, React.createElement(MuiThemeProvider, {\n      theme: theme2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\" //label=\"Additional Notes\"\n      ,\n      style: {\n        margin: 8\n      },\n      className: classes.textFieldNotes,\n      value: this.state.clientNotes,\n      onChange: this.handleChange(\"clientNotes\"),\n      placeholder: \"Add any additional notes here\" //fullWidth\n      ,\n      multiline: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981\n      },\n      __self: this\n    }))), React.createElement(Paper, {\n      className: classes.rootTitle,\n      elevation: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 999\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000\n      },\n      __self: this\n    }, \"Contact Information\")), React.createElement(Grid, {\n      className: classes.checkboxAlign,\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1009\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1015\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        color: \"primary\",\n        checked: this.state.checkedSameCont,\n        onChange: this.handleChangeCheckSameCont(\"checkedSameCont\"),\n        classes: {\n          root: classes.checkedRoot,\n          checked: classes.checked\n        },\n        value: \"checkedSameCont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1018\n        },\n        __self: this\n      }),\n      label: \"Same as client information\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1016\n      },\n      __self: this\n    }))), React.createElement(TextField, {\n      id: \"standard-select-contactTitle\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.state.contactTitle,\n      onChange: this.handleChange(\"contactTitle\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1053\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactFirstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactFirstName,\n      onChange: this.handleChange(\"contactFirstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1058\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactLastName,\n      onChange: this.handleChange(\"contactLastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactAddress\",\n      variant: \"outlined\",\n      label: \"Street Address\",\n      className: classes.textField,\n      value: this.state.contactAddress,\n      onChange: this.handleChange(\"contactAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1078\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactCity-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.contactCity,\n      onChange: this.handleChange(\"contactCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1087\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.contactState,\n      onChange: this.handleChange(\"contactState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1096\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactZip\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.contactZip,\n      onChange: this.handleChange(\"contactZip\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1105\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactPhone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.contactPhone,\n      onChange: this.handleChange(\"contactPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1115\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactPhone\",\n      variant: \"outlined\",\n      label: \"Secondary Phone Number\",\n      className: classes.textField,\n      value: this.state.contact2ndPhone,\n      onChange: this.handleChange(\"contact2ndPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1124\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactEmail\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textFieldAlign,\n      value: this.state.contactEmail,\n      onChange: this.handleChange(\"contactEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1134\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      className: classes.alignCheck,\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1144\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        color: \"primary\",\n        checked: this.state.contactCheckedRecEmails,\n        onChange: this.handleChangeChecked(\"contactCheckedRecEmails\"),\n        classes: {\n          root: classes.checkedRoot,\n          checked: classes.checked\n        },\n        value: \"contactCheckedRecEmails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1147\n        },\n        __self: this\n      }),\n      label: \"Receive email notifcations\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1145\n      },\n      __self: this\n    })), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1164\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: classes.checkBoxPadding,\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1165\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        color: \"primary\",\n        checked: this.state.checkedContact2,\n        onChange: this.handleChangeCheck2(\"checkedContact2\"),\n        classes: {\n          root: classes.checkedRoot,\n          checked: classes.checked\n        },\n        value: \"checkedContact2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168\n        },\n        __self: this\n      }),\n      label: \"Add second contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1166\n      },\n      __self: this\n    }))), this.state.checkedContact2 ? React.createElement(Paper, {\n      className: classes.rootTitle,\n      elevation: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1185\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1186\n      },\n      __self: this\n    }, \"Contact 2 Information\")) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-select-contactTitle2\",\n      select: true,\n      label: \"Title\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactTitle2,\n      onChange: this.handleChange(\"contactTitle2\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1197\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1213\n      },\n      __self: this\n    }, option.label))) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactFirstName2\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactFirstName2,\n      onChange: this.handleChange(\"contactFirstName2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1221\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename2\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactLastName2,\n      onChange: this.handleChange(\"contactLastName2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1233\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-contactAddress2\",\n      variant: \"outlined\",\n      label: \"Street Address\",\n      className: classes.textField,\n      value: this.state.contactAddress2,\n      onChange: this.handleChange(\"contactAddress2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1246\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-contactCity-2\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.contactCity2,\n      onChange: this.handleChange(\"contactCity2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1257\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-state2\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.contactState2,\n      onChange: this.handleChange(\"contactState2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1269\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-contactZip2\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.contactZip2,\n      onChange: this.handleChange(\"contactZip2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1280\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-contactPhone2\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.contactPhone2,\n      onChange: this.handleChange(\"contactPhone2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1292\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-contactPhone2\",\n      variant: \"outlined\",\n      label: \"Secondary Phone Number\",\n      className: classes.textField,\n      value: this.state.contact2ndPhone2,\n      onChange: this.handleChange(\"contact2ndPhone2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1304\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactEmail2\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textFieldAlign2,\n      value: this.state.contactEmail2,\n      onChange: this.handleChange(\"contactEmail2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1316\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1352\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: classes.checkBoxPadding,\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1353\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        color: \"primary\",\n        checked: this.state.checkedContact3,\n        onChange: this.handleChangeCheck3(\"checkedContact3\"),\n        classes: {\n          root: classes.checkedRoot,\n          checked: classes.checked\n        },\n        value: \"checkedContact3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1356\n        },\n        __self: this\n      }),\n      label: \"Add third contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1354\n      },\n      __self: this\n    }))) : null, this.state.checkedContact3 ? React.createElement(Paper, {\n      className: classes.rootTitle,\n      elevation: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1375\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1376\n      },\n      __self: this\n    }, \"Contact 3 Information\")) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-select-contactTitle3\",\n      select: true,\n      label: \"Title\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactTitle3,\n      onChange: this.handleChange(\"contactTitle3\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1387\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1403\n      },\n      __self: this\n    }, option.label))) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactFirstName3\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactFirstName3,\n      onChange: this.handleChange(\"contactFirstName3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1411\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename3\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactLastName3,\n      onChange: this.handleChange(\"contactLastName3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1423\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-contactAddress3\",\n      variant: \"outlined\",\n      label: \"Street Address\",\n      className: classes.textField,\n      value: this.state.contactAddress3,\n      onChange: this.handleChange(\"contactAddress3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1436\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-contactCity-3\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.contactCity3,\n      onChange: this.handleChange(\"contactCity3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1447\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-state3\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.contactState3,\n      onChange: this.handleChange(\"contactState3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1459\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-contactZip3\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.contactZip3,\n      onChange: this.handleChange(\"contactZip3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1470\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-contactPhone3\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.contactPhone3,\n      onChange: this.handleChange(\"contactPhone3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1482\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-contactPhone3\",\n      variant: \"outlined\",\n      label: \"Secondary Phone Number\",\n      className: classes.textField,\n      value: this.state.contact2ndPhone3,\n      onChange: this.handleChange(\"contact2ndPhone3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1494\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactEmail3\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textFieldAlign3,\n      value: this.state.contactEmail3,\n      onChange: this.handleChange(\"contactEmail3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1506\n      },\n      __self: this\n    }) : null, React.createElement(Paper, {\n      className: classes.rootTitle,\n      elevation: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1545\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1546\n      },\n      __self: this\n    }, \"Payor Information\")), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1554\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"billingFirstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.billingFirstName,\n      onChange: this.handleChange(\"billingFirstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1555\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"billingLastName\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.billingLastName,\n      onChange: this.handleChange(\"billingLastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1565\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-select-paymentType\",\n      select: true,\n      label: \"Payment Type\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.paymentType,\n      onChange: this.handleChange(\"paymentType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1575\n      },\n      __self: this\n    }, paymentTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1591\n      },\n      __self: this\n    }, option.label))), this.state.paymentType === \"Card\" ? React.createElement(TextField, {\n      id: \"standard-select-cardType\",\n      select: true,\n      label: \"Card Type\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cardType,\n      onChange: this.handleChangeCard(\"cardType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1598\n      },\n      __self: this\n    }, cardTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1614\n      },\n      __self: this\n    }, option.label))) : null, this.state.paymentType === \"Card\" ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-nameOnCard\",\n      label: \"Name on Card\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.nameOnCard,\n      onChange: this.handleChangeCard(\"nameOnCard\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1622\n      },\n      __self: this\n    }) : null, this.state.paymentType === \"Card\" ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-cardNum\",\n      label: \"Card Number\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cardNum,\n      onChange: this.handleChangeCard(\"cardNum\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1634\n      },\n      __self: this\n    }) : null, this.state.paymentType === \"Card\" ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-cvv\",\n      label: \"CVV\",\n      type: \"password\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cvv,\n      onChange: this.handleChangeCard(\"cvv\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1647\n      },\n      __self: this\n    }) : null, this.state.paymentType === \"Card\" ? React.createElement(TextField, {\n      id: \"standard-expDate\",\n      variant: \"outlined\",\n      label: \"Expiration Date\",\n      className: classes.textField,\n      value: this.state.expDate,\n      onChange: this.handleChangeCard(\"expDate\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1661\n      },\n      __self: this\n    }) : null, React.createElement(TextField, {\n      id: \"standard-billingAddress\",\n      variant: \"outlined\",\n      label: \"Billing Street Address\",\n      className: classes.textField,\n      value: this.state.billingAddress,\n      onChange: this.handleChange(\"billingAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1672\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-billingCity-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.billingCity,\n      onChange: this.handleChange(\"billingCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1682\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-payorEmail\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.payorEmail,\n      onChange: this.handleChange(\"payorEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1692\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.billingState,\n      onChange: this.handleChange(\"billingState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1703\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.billingPhone,\n      onChange: this.handleChange(\"billingPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1713\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-billingZip\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.billingZip,\n      onChange: this.handleChange(\"billingZip\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1723\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1745\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      onClick: () => {\n        this.onSubmit( // client info\n        this.state.clientType, this.state.clientFirstName, this.state.clientLastName, this.state.clientEmail, this.state.clientTitle, this.state.clientCurrentPassword, this.state.clientConfirmPassword, this.state.sessionType, this.state.sessionCost, this.state.sessionLegnth, this.state.clientPhone, this.state.clientAddress, this.state.clientBday, this.state.clientCity, this.state.clientState, this.state.clientZipCode, this.state.clientStreetAddress, this.state.contactNotes, // contact info\n        this.state.contactFirstName, this.state.contactLastName, this.state.contactEmail, this.state.contactTitle, this.state.contactPhone, this.state.contactAddress, this.state.contactCity, this.state.contactState, this.state.contactZip, // contact 2 info\n        this.state.contactFirstName2, this.state.contactLastName2, this.state.contactEmail2, this.state.contactTitle2, this.state.contactPhone2, this.state.contactAddress2, this.state.contactCity2, this.state.contactState2, this.state.contactZip2, // contact 3 info\n        this.state.contactFirstName3, this.state.contactLastName3, this.state.contactEmail3, this.state.contactTitle3, this.state.contactPhone3, this.state.contactAddress3, this.state.contactCity3, this.state.contactState3, this.state.contactZip3, // payor info\n        this.state.billingFirstName, this.state.billingLastName, this.state.nameOnCard, this.state.cardNum, this.state.payorEmail, this.state.payorTitle, this.state.paymentType, this.state.billingPhone, this.state.billingAddress, this.state.billingCity, this.state.billingZip, this.state.billingState, this.state.cvv, this.state.expDate, this.state.cardType);\n        this.handleClickSnackBar(); //this.setLocation();\n        //this.setState({ navigate: true });\n        // this.reloadPage();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1746\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: this.state.open,\n      autoHideDuration: 6000,\n      onClose: this.handleCloseSnackBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1828\n      },\n      __self: this\n    }, React.createElement(MySnackbarContentWrapper, {\n      onClose: this.handleCloseSnackBar,\n      variant: \"success\",\n      message: \"Your new client has been saved!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1837\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TopPanel);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/newClientConsolidate.js"],"names":["React","PropTypes","withStyles","createMuiTheme","MuiThemeProvider","Paper","Grid","MenuItem","TextField","Button","FormGroup","FormControlLabel","Checkbox","Container","Typography","red","Cyan","Switch","classNames","CheckCircleIcon","CloseIcon","green","IconButton","Snackbar","SnackbarContent","axios","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","width","textFieldTest","checkboxAlign","textFieldSession","marginTop","menu","root","paddingBottom","rootTitle","marginBottom","backgroundColor","color","palette","getContrastText","rootTitle2","marg","textFieldAlign","textFieldAlign2","textFieldAlign3","alignCheck","checkedRoot","checked","container2","textFieldNotes","textField3","title","align","title2","checkBoxPadding","menu2","root2","root3","divider","saveButton","success","iconSnack","fontSize","iconVariant","opacity","message","alignItems","variantIcon","primary","main","theme2","titles","value","label","clientTypes","sessionTypes","paymentTypes","cardTypes","navStyle","textDecoration","MySnackbarContent","props","classes","className","onClose","variant","other","Icon","close","MySnackbarContentWrapper","TopPanel","Component","state","open","clientType","clientFirstName","clientLastName","clientEmail","clientTitle","clientCurrentPassword","clientConfirmPassword","sessionType","sessionCost","sessionLegnth","clientPhone","clientAddress","clientBday","clientState","clientCity","clientZipCode","clientStreetAddress","clientFacility","clientNotes","multiline","checkedSameCont","contactFirstName","contactLastName","contactEmail","contactCheckedRecEmails","contactTitle","contactPhone","contact2ndPhone","contactAddress","contactCity","contactState","contactZip","contactFirstName2","contactLastName2","contactEmail2","contactTitle2","contactPhone2","contact2ndPhone2","contactAddress2","contactCity2","contactState2","contactZip2","contactFirstName3","contactLastName3","contactEmail3","contactTitle3","contactPhone3","contact2ndPhone3","contactAddress3","contactCity3","contactState3","contactZip3","billingFirstName","billingLastName","nameOnCard","cardNum","payorEmail","payorTitle","paymentType","billingPhone","billingAddress","billingCity","billingZip","billingState","cvv","expDate","cardType","sameAsContact","navigate","therapistData","therapist","checkedContact2","checkedContact3","handleChange","name","event","setState","target","handleChangeCheckSameCont","handleChangeCheck2","handleChangeCheck3","handleChangeCard","handleChangeChecked","toggleShow","isShow","handleClickSnackBar","handleCloseSnackBar","reason","componentDidMount","get","then","response","console","log","data","clientData","response2","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","onSubmit","clientObj","checkedActive","sessionLength","post","res","render","MenuProps","map","option","confirmPassword","member_full_name","margin","shrink","contactNotes","vertical","horizontal","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  withStyles,\n  createMuiTheme,\n  MuiThemeProvider\n} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport red from \"@material-ui/core/colors/red\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\n\nimport Switch from \"@material-ui/core/Switch\";\n\nimport classNames from \"classnames\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport green from \"@material-ui/core/colors/green\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\n\n// putting commmnent to change push comment\n\n//\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    ///marginTop: theme.spacing(1),\n    width: 300\n  },\n\n  textFieldTest: {\n    marginRight: theme.spacing(79),\n\n    width: 300\n  },\n\n  checkboxAlign: {\n    marginRight: theme.spacing(86)\n  },\n\n  textFieldSession: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginTop: theme.spacing(10),\n    width: 300\n  },\n\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    // paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2\n    //backgroundColor: red[200]\n  },\n  rootTitle: {\n    width: \"100%\",\n    marginTop: theme.spacing(-1),\n    marginBottom: theme.spacing(2),\n    backgroundColor: Cyan[800],\n    color: theme.palette.getContrastText(\"#00838f\")\n\n    //paddingTop: theme.spacing.unit,\n    //paddingBottom: theme.spacing.unit * 2\n  },\n\n  rootTitle2: {\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n    backgroundColor: \"#1de9b6\"\n\n    //paddingTop: theme.spacing.unit,\n    //paddingBottom: theme.spacing.unit * 2\n  },\n\n  marg: {\n    marginRight: theme.spacing(44)\n    // marginBottom: theme.spacing(5)\n  },\n  textFieldAlign: {\n    marginRight: theme.spacing(49),\n    width: 300\n    // marginBottom: theme.spacing(5)\n  },\n\n  textFieldAlign2: {\n    marginRight: theme.spacing(79),\n    width: 300\n    // marginBottom: theme.spacing(5)\n  },\n\n  textFieldAlign3: {\n    marginRight: theme.spacing(79),\n    paddingBottom: theme.spacing(2),\n    width: 300\n    // marginBottom: theme.spacing(5)\n  },\n\n  alignCheck: {\n    // marginRight: theme.spacing(40)\n    // marginBottom: theme.spacing(5)\n  },\n\n  checkedRoot: {\n    // color: \"#00838f\",\n    \"&$checked\": {\n      color: \"#80cbc4\"\n    }\n  },\n  checked: {},\n\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textFieldNotes: {\n    //marginLeft: theme.spacing.unit,\n    //marginRight: theme.spacing.unit,\n    //marginBottom: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    width: 938\n  },\n\n  textField3: {\n    marginLeft: theme.spacing(24),\n    //marginBottom: theme.spacing(5),\n    // marginRight: theme.spacing(20),\n    width: 300\n  },\n\n  title: {\n    align: \"center\"\n    //marginTop: theme.spacing(1)\n    //marginBottom: theme.spacing(3)\n  },\n  title2: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  },\n\n  checkBoxPadding: {\n    paddingBottom: theme.spacing(2)\n  },\n\n  menu2: {\n    width: 200\n  },\n  root2: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n\n  root3: {\n    width: \"5%\"\n  },\n\n  divider: {\n    backgroundColor: \"#1de9b6\",\n    marginBottom: theme.spacing(2)\n  },\n\n  saveButton: {\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    /* this is text color */ color: theme.palette.getContrastText(\"#b2dfdb\"),\n    backgroundColor: \"#b2dfdb\",\n    \"&:hover\": {\n      backgroundColor: \"#80cbc4\"\n    },\n\n    success: {\n      backgroundColor: green[600]\n    },\n\n    iconSnack: {\n      fontSize: 5\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(10)\n    },\n    message: {\n      display: \"flex\",\n      alignItems: \"center\"\n    }\n  }\n});\n\nconst variantIcon = {\n  success: CheckCircleIcon\n};\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#b2dfdb\" }\n  }\n});\n\nconst theme2 = createMuiTheme({\n  palette: {\n    primary: { main: \"#80cbc4\" }\n  }\n});\n\nconst titles = [\n  {\n    value: null,\n    label: null\n  },\n\n  {\n    value: \"Dr.\",\n    label: \"Dr.\"\n  },\n\n  {\n    value: \"Miss\",\n    label: \"Miss\"\n  },\n\n  {\n    value: \"Mr.\",\n    label: \"Mr.\"\n  },\n  {\n    value: \"Mrs.\",\n    label: \"Mrs.\"\n  },\n  {\n    value: \"Ms.\",\n    label: \"Ms.\"\n  },\n  {\n    value: \"Mx.\",\n    label: \"Mx.\"\n  }\n];\n\nconst clientTypes = [\n  {\n    value: \"Individual\",\n    label: \"Individual\"\n  },\n\n  {\n    value: \"Facility\",\n    label: \"Facility\"\n  }\n];\n\nconst sessionTypes = [\n  {\n    value: \"Lessons\",\n    label: \"Lessons\"\n  },\n\n  {\n    value: \"Therapy\",\n    label: \"Therapy\"\n  }\n];\n\nconst paymentTypes = [\n  {\n    value: \"Card\",\n    label: \"Card\"\n  },\n\n  {\n    value: \"Cash\",\n    label: \"Cash\"\n  },\n\n  {\n    value: \"Check\",\n    label: \"Check\"\n  }\n];\n\nconst cardTypes = [\n  {\n    value: \"American Express\",\n    label: \"American Express\"\n  },\n\n  {\n    value: \"Discover\",\n    label: \"Discover\"\n  },\n\n  {\n    value: \"MasterCard\",\n    label: \"MasterCard\"\n  },\n  {\n    value: \"Visa\",\n    label: \"Visa\"\n  }\n];\n\nconst navStyle = {\n  color: \"black\",\n  textDecoration: \"none\"\n};\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon\n            className={classNames(classes.iconSnack, classes.iconVariant)}\n          />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.iconSnack} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nconst MySnackbarContentWrapper = withStyles(styles)(MySnackbarContent);\n\nclass TopPanel extends React.Component {\n  state = {\n    open: false,\n    //client info state\n    clientType: null,\n    clientFirstName: null,\n    clientLastName: null,\n    clientEmail: null,\n    clientTitle: null,\n    clientCurrentPassword: null,\n    clientConfirmPassword: null,\n    sessionType: null,\n    sessionCost: null,\n    sessionLegnth: null,\n    clientPhone: null,\n    clientAddress: null,\n    clientBday: null,\n    clientState: null,\n    clientCity: null,\n    clientZipCode: null,\n    clientStreetAddress: null,\n    clientFacility: null,\n    clientNotes: null,\n    multiline: \"Controlled\",\n    //contact info state\n    checkedSameCont: null,\n    contactFirstName: null,\n    contactLastName: null,\n    contactEmail: null,\n    contactCheckedRecEmails: null,\n    contactTitle: null,\n    contactPhone: null,\n    contact2ndPhone: null, // still need to add this to the database\n    contactAddress: null,\n    contactCity: null,\n    contactState: null,\n    contactZip: null,\n    // contact 2 info state\n    contactFirstName2: null,\n    contactLastName2: null,\n    contactEmail2: null,\n    contactTitle2: null,\n    contactPhone2: null,\n    contact2ndPhone2: null, // still need to add this to the database\n    contactAddress2: null,\n    contactCity2: null,\n    contactState2: null,\n    contactZip2: null,\n    // contact 3 info state\n    contactFirstName3: null,\n    contactLastName3: null,\n    contactEmail3: null,\n    contactTitle3: null,\n    contactPhone3: null,\n    contact2ndPhone3: null, // still need to add this to the database\n    contactAddress3: null,\n    contactCity3: null,\n    contactState3: null,\n    contactZip3: null,\n    //payor info state\n    billingFirstName: null,\n    billingLastName: null,\n    nameOnCard: null,\n    cardNum: null,\n    payorEmail: null,\n    payorTitle: null,\n    paymentType: null,\n    billingPhone: null,\n    billingAddress: null,\n    billingCity: null,\n    billingZip: null,\n    billingState: null,\n    cvv: null,\n    expDate: null,\n    cardType: null,\n    sameAsContact: false,\n    //toDashboard: false,\n    navigate: false,\n    //intervalIsSet: null\n    therapistData: [],\n    therapist: null,\n    // condition\n    checkedContact2: false,\n    checkedContact3: false\n  };\n  /*\n  reloadPage() {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  }\n*/\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/allclients\")\n      .then(response => {\n        console.log(\"Got client data!\");\n        console.log(response.data);\n        this.setState({\n          clientData: response.data\n        });\n      })\n      .then(response2 => {\n        return axios\n          .get(\"http://localhost:5000/gettherapists\") // this is not using the sequelize method\n          .then(response2 => {\n            console.log(\"Got therapist data!\");\n            console.log(response2.data);\n            this.setState({\n              therapistData: response2.data\n            });\n          });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n\n    const clientObj = {\n      // client info\n      checkedActive: false,\n      clientType: this.state.clientType,\n      clientFirstName: this.state.clientFirstName,\n      clientLastName: this.state.clientLastName,\n      clientEmail: this.state.clientEmail,\n      clientTitle: this.state.clientTitle,\n      clientCurrentPassword: this.state.clientCurrentPassword,\n      clientConfirmPassword: this.state.clientConfirmPassword,\n      clientPhone: this.state.clientPhone,\n      clientAddress: this.state.clientAddress,\n      sessionType: this.state.sessionType,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLegnth,\n      clientBday: this.state.clientBday,\n      clientState: this.state.clientState,\n      clientCity: this.state.clientCity,\n      clientZipCode: this.state.clientZipCode,\n      clientStreetAddress: this.state.clientStreetAddress,\n      clientNotes: this.state.clientNotes,\n      // contact info\n      contactFirstName: this.state.contactFirstName,\n      contactLastName: this.state.contactLastName,\n      contactEmail: this.state.contactEmail,\n      contactTitle: this.state.contactTitle,\n      contactPhone: this.state.contactPhone,\n      contactAddress: this.state.contactAddress,\n      contactCity: this.state.contactCity,\n      contactState: this.state.contactState,\n      contactZip: this.state.contactZip,\n      // contact 2 info\n      contactFirstName2: this.state.contactFirstName2,\n      contactLastName2: this.state.contactLastName2,\n      contactEmail2: this.state.contactEmail2,\n      contactTitle2: this.state.contactTitle2,\n      contactPhone2: this.state.contactPhone2,\n      contactAddress2: this.state.contactAddress2,\n      contactCity2: this.state.contactCity2,\n      contactState2: this.state.contactState2,\n      contactZip2: this.state.contactZip2,\n      // contact 3 info\n      contactFirstName3: this.state.contactFirstName3,\n      contactLastName3: this.state.contactLastName3,\n      contactEmail3: this.state.contactEmail3,\n      contactTitle3: this.state.contactTitle3,\n      contactPhone3: this.state.contactPhone3,\n      contactAddress3: this.state.contactAddress3,\n      contactCity3: this.state.contactCity3,\n      contactState3: this.state.contactState3,\n      contactZip3: this.state.contactZip3,\n      // payor info\n      billingFirstName: this.state.billingFirstName,\n      billingLastName: this.state.billingLastName,\n      nameOnCard: this.state.nameOnCard,\n      cardNum: this.state.cardNum,\n      payorEmail: this.state.payorEmail,\n      payorTitle: this.state.payorTitle,\n      paymentType: this.state.paymentType,\n      billingPhone: this.state.billingPhone,\n      billingAddress: this.state.billingAddress,\n      billingCity: this.state.billingCity,\n      billingZip: this.state.billingZip,\n      billingState: this.state.billingState,\n      cvv: this.state.cvv,\n      expDate: this.state.expDate,\n      cardType: this.state.cardType\n    };\n    axios\n      .post(\"http://localhost:5000/clients/registerclient\", clientObj)\n      .then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      //client info\n      clientObj\n    });\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChangeCheckSameCont = name => event => {\n    this.setState({\n      [name]: event.target.checked,\n      contactFirstName: this.state.clientFirstName,\n      contactLastName: this.state.clientLastName,\n      contactEmail: this.state.clientEmail,\n      contactTitle: this.state.clientTitle,\n      contactPhone: this.state.clientPhone,\n      contactAddress: this.state.clientAddress,\n      contactCity: this.state.clientCity,\n      contactState: this.state.clientState,\n      contactZip: this.state.clientZipCode\n    });\n  };\n\n  handleChangeCheck2 = name => event => {\n    this.setState({\n      [name]: event.target.checked,\n      //this will set the values to blank once the window is closed\n      contactFirstName2: null,\n      contactLastName2: null,\n      contactEmail2: null,\n      contactTitle2: null,\n      contactPhone2: null,\n      contact2ndPhone2: null,\n      contactAddress2: null,\n      contactCity2: null,\n      contactState2: null,\n      contactZip2: null,\n      // contact 3,\n      checkedContact3: false,\n      contactFirstName3: null,\n      contactLastName3: null,\n      contactEmail3: null,\n      contactTitle3: null,\n      contactPhone3: null,\n      contact2ndPhone3: null,\n      contactAddress3: null,\n      contactCity3: null,\n      contactState3: null,\n      contactZip3: null\n    });\n  };\n\n  handleChangeCheck3 = name => event => {\n    this.setState({\n      [name]: event.target.checked,\n      //this will set the values to blank once the window is closed\n      contactFirstName3: null,\n      contactLastName3: null,\n      contactEmail3: null,\n      contactTitle3: null,\n      contactPhone3: null,\n      contact2ndPhone3: null,\n      contactAddress3: null,\n      contactCity3: null,\n      contactState3: null,\n      contactZip3: null\n    });\n  };\n\n  handleChangeCard = name => event => {\n    this.setState({\n      [name]: event.target.value,\n      nameOnCard: null,\n      cardNum: null,\n      cvv: null,\n      expDate: null,\n      cardType: null\n    });\n  };\n\n  handleChangeChecked = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n  toggleShow = () => {\n    this.setState(state => ({ isShow: !state.isShow }));\n  };\n\n  handleClickSnackBar = () => {\n    this.setState({ open: true });\n  };\n\n  handleCloseSnackBar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { therapistData } = this.state;\n    /*\n    if (this.state.toDashboard === true) {\n        return <Redirect to='/dashboard' />\n      }\n  */\n    /*\n\n    const { navigate } = this.state;\n\n    // here is the important part\n    if (navigate) {\n      return <Redirect to=\"/clients\" push={true} />;\n    }\n    */\n\n    return (\n      <Container maxWidth=\"lg\">\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          <Paper className={classes.root} elevation={1}>\n            <Paper className={classes.rootTitle} elevation={0}>\n              <Typography className={classes.title} align=\"center\" variant=\"h5\">\n                Client Information\n              </Typography>\n            </Paper>\n\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid container row justify=\"center\" alignItems=\"center\">\n                <MuiThemeProvider theme={theme}>\n                  <FormGroup row>\n                    <FormControlLabel\n                      className={classes.marg}\n                      control={\n                        <Switch\n                          checked={this.state.checkedActive}\n                          onChange={this.handleChangeChecked(\"checkedActive\")}\n                          value=\"checkedActive\"\n                          // marginLeft=\"theme.spacing(2)\"\n\n                          /*\n                        classes={{\n                          switchBase: \"#1de9b6\",\n                          checked: \"#1de9b6\",\n                          bar: \"#1de9b6\"\n                        }}*/\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Active\"\n                    />\n                  </FormGroup>\n                </MuiThemeProvider>\n\n                <TextField\n                  id=\"standard-select-clientType\"\n                  select\n                  required\n                  label=\"Client Type\"\n                  variant=\"outlined\"\n                  className={classes.textField3}\n                  value={this.state.clientType}\n                  onChange={this.handleChange(\"clientType\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {clientTypes.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n\n              <TextField\n                id=\"standard-select-title\"\n                select\n                label=\"Title\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.clientTitle}\n                margin=\"normal\"\n                onChange={this.handleChange(\"clientTitle\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {titles.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <MuiThemeProvider theme={theme}>\n                <TextField\n                  required\n                  id=\"standard-firstName\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.clientFirstName}\n                  onChange={this.handleChange(\"clientFirstName\")}\n                  margin=\"normal\"\n                />\n              </MuiThemeProvider>\n              <TextField\n                required\n                id=\"standard-lastNamename\"\n                label=\"Last Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.clientLastName}\n                onChange={this.handleChange(\"clientLastName\")}\n                margin=\"normal\"\n              />\n\n              {/* insert facility name here */}\n\n              {this.state.clientType === \"Facility\" ? (\n                <TextField\n                  required\n                  id=\"standard-facility-name\"\n                  label=\"Facility Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.clientFacility}\n                  onChange={this.handleChange(\"clientFacility\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              <TextField\n                required\n                id=\"standard-email\"\n                variant=\"outlined\"\n                label=\"Email\"\n                className={classes.textField}\n                value={this.state.clientEmail}\n                onChange={this.handleChange(\"clientEmail\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-password-input\"\n                variant=\"outlined\"\n                label=\"Password\"\n                className={classes.textField}\n                type=\"password\"\n                value={this.state.clientCurrentPassword}\n                onChange={this.handleChange(\"clientCurrentPassword\")}\n                //autoComplete=\"current-password\"\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-confirmPassword-input\"\n                variant=\"outlined\"\n                label=\"Confirm Password\"\n                className={classes.textField}\n                type=\"password\"\n                value={this.state.confirmPassword}\n                onChange={this.handleChange(\"confirmPassword\")}\n                //autoComplete=\"current-password\"\n                margin=\"normal\"\n              />\n\n              <TextField\n                id=\"standard-address\"\n                variant=\"outlined\"\n                label=\"Address\"\n                className={classes.textField}\n                value={this.state.clientAddress}\n                onChange={this.handleChange(\"clientAddress\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-city-\"\n                variant=\"outlined\"\n                label=\"City\"\n                className={classes.textField}\n                value={this.state.clientCity}\n                onChange={this.handleChange(\"clientCity\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-state\"\n                variant=\"outlined\"\n                label=\"State\"\n                className={classes.textField}\n                value={this.state.clientState}\n                onChange={this.handleChange(\"clientState\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-zipCode\"\n                variant=\"outlined\"\n                label=\"Zip Code\"\n                className={classes.textField}\n                value={this.state.clientZipCode}\n                onChange={this.handleChange(\"clientZipCode\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-phone\"\n                variant=\"outlined\"\n                label=\"Phone Number\"\n                className={classes.textField}\n                value={this.state.clientPhone}\n                onChange={this.handleChange(\"clientPhone\")}\n                margin=\"normal\"\n              />\n\n              {this.state.clientType === \"Facility\" ? (\n                <TextField\n                  id=\"standard-bday\"\n                  variant=\"outlined\"\n                  label=\"Birthday\"\n                  className={classes.textFieldTest}\n                  value={this.state.clientBday}\n                  onChange={this.handleChange(\"clientBday\")}\n                  margin=\"normal\"\n                />\n              ) : (\n                <TextField\n                  id=\"standard-bday\"\n                  variant=\"outlined\"\n                  label=\"Birthday\"\n                  className={classes.textField}\n                  value={this.state.clientBday}\n                  onChange={this.handleChange(\"clientBday\")}\n                  margin=\"normal\"\n                />\n              )}\n\n              <Grid container row justify=\"center\" alignItems=\"center\">\n                <TextField\n                  id=\"standard-select-sessionType\"\n                  select\n                  label=\"Session Type\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  className={classes.textFieldSession}\n                  value={this.state.sessionType}\n                  onChange={this.handleChange(\"sessionType\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {sessionTypes.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  id=\"standard-cost\"\n                  label=\"Session Cost (dollars)\"\n                  variant=\"outlined\"\n                  className={classes.textFieldSession}\n                  value={this.state.sessionCost}\n                  onChange={this.handleChange(\"sessionCost\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-length\"\n                  label=\"Session Length (minutes)\"\n                  variant=\"outlined\"\n                  className={classes.textFieldSession}\n                  value={this.state.sessionLength}\n                  onChange={this.handleChange(\"sessionLength\")}\n                  margin=\"normal\"\n                />\n                <Grid container justify=\"center\" alignItems=\"center\">\n                  <TextField\n                    id=\"standard-select-therapist\"\n                    select\n                    label=\"Therapist\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    className={classes.textFieldTest}\n                    value={this.state.therapist}\n                    onChange={this.handleChange(\"therapist\")}\n                    SelectProps={{\n                      MenuProps: {\n                        className: classes.menu\n                      }\n                    }}\n                  >\n                    {therapistData.map(option => (\n                      <MenuItem\n                        key={option.value}\n                        value={option.member_full_name}\n                      >\n                        {option.member_full_name}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </Grid>\n              </Grid>\n\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <MuiThemeProvider theme={theme2}>\n                  <TextField\n                    id=\"standard-full-width\"\n                    //label=\"Additional Notes\"\n                    style={{ margin: 8 }}\n                    className={classes.textFieldNotes}\n                    value={this.state.clientNotes}\n                    onChange={this.handleChange(\"clientNotes\")}\n                    placeholder=\"Add any additional notes here\"\n                    //fullWidth\n                    multiline\n                    margin=\"normal\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                  />\n                </MuiThemeProvider>\n              </Grid>\n\n              <Paper className={classes.rootTitle} elevation={0}>\n                <Typography\n                  className={classes.title}\n                  align=\"center\"\n                  variant=\"h5\"\n                >\n                  Contact Information\n                </Typography>\n              </Paper>\n\n              <Grid\n                className={classes.checkboxAlign}\n                container\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <FormGroup row>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        color=\"primary\"\n                        checked={this.state.checkedSameCont}\n                        onChange={this.handleChangeCheckSameCont(\n                          \"checkedSameCont\"\n                        )}\n                        classes={{\n                          root: classes.checkedRoot,\n                          checked: classes.checked\n                        }}\n                        value=\"checkedSameCont\"\n                      />\n                    }\n                    label=\"Same as client information\"\n                  />\n                </FormGroup>\n              </Grid>\n\n              {/* Contact Info*/}\n              <TextField\n                id=\"standard-select-contactTitle\"\n                select\n                label=\"Title\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                className={classes.textField}\n                value={this.state.contactTitle}\n                onChange={this.handleChange(\"contactTitle\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {titles.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                required\n                id=\"standard-contactFirstName\"\n                label=\"First Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.contactFirstName}\n                onChange={this.handleChange(\"contactFirstName\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-lastNamename\"\n                label=\"Last Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.contactLastName}\n                onChange={this.handleChange(\"contactLastName\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-contactAddress\"\n                variant=\"outlined\"\n                label=\"Street Address\"\n                className={classes.textField}\n                value={this.state.contactAddress}\n                onChange={this.handleChange(\"contactAddress\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-contactCity-\"\n                variant=\"outlined\"\n                label=\"City\"\n                className={classes.textField}\n                value={this.state.contactCity}\n                onChange={this.handleChange(\"contactCity\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-state\"\n                variant=\"outlined\"\n                label=\"State\"\n                className={classes.textField}\n                value={this.state.contactState}\n                onChange={this.handleChange(\"contactState\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-contactZip\"\n                variant=\"outlined\"\n                label=\"Zip Code\"\n                className={classes.textField}\n                value={this.state.contactZip}\n                onChange={this.handleChange(\"contactZip\")}\n                margin=\"normal\"\n              />\n\n              <TextField\n                id=\"standard-contactPhone\"\n                variant=\"outlined\"\n                label=\"Phone Number\"\n                className={classes.textField}\n                value={this.state.contactPhone}\n                onChange={this.handleChange(\"contactPhone\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-contactPhone\"\n                variant=\"outlined\"\n                label=\"Secondary Phone Number\"\n                className={classes.textField}\n                value={this.state.contact2ndPhone}\n                onChange={this.handleChange(\"contact2ndPhone\")}\n                margin=\"normal\"\n              />\n\n              <TextField\n                required\n                id=\"standard-contactEmail\"\n                variant=\"outlined\"\n                label=\"Email\"\n                className={classes.textFieldAlign}\n                value={this.state.contactEmail}\n                onChange={this.handleChange(\"contactEmail\")}\n                margin=\"normal\"\n              />\n              <FormGroup className={classes.alignCheck} row>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      color=\"primary\"\n                      checked={this.state.contactCheckedRecEmails}\n                      onChange={this.handleChangeChecked(\n                        \"contactCheckedRecEmails\"\n                      )}\n                      classes={{\n                        root: classes.checkedRoot,\n                        checked: classes.checked\n                      }}\n                      value=\"contactCheckedRecEmails\"\n                    />\n                  }\n                  label=\"Receive email notifcations\"\n                />\n              </FormGroup>\n\n              <Container>\n                <FormGroup className={classes.checkBoxPadding} row>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        color=\"primary\"\n                        checked={this.state.checkedContact2}\n                        onChange={this.handleChangeCheck2(\"checkedContact2\")}\n                        classes={{\n                          root: classes.checkedRoot,\n                          checked: classes.checked\n                        }}\n                        value=\"checkedContact2\"\n                      />\n                    }\n                    label=\"Add second contact\"\n                  />\n                </FormGroup>\n              </Container>\n\n              {this.state.checkedContact2 ? (\n                <Paper className={classes.rootTitle} elevation={0}>\n                  <Typography\n                    className={classes.title}\n                    align=\"center\"\n                    variant=\"h5\"\n                  >\n                    Contact 2 Information\n                  </Typography>\n                </Paper>\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-select-contactTitle2\"\n                  select\n                  label=\"Title\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactTitle2}\n                  onChange={this.handleChange(\"contactTitle2\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {titles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  required\n                  id=\"standard-contactFirstName2\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactFirstName2}\n                  onChange={this.handleChange(\"contactFirstName2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact2 ? (\n                <TextField\n                  required\n                  id=\"standard-lastNamename2\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactLastName2}\n                  onChange={this.handleChange(\"contactLastName2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-contactAddress2\"\n                  variant=\"outlined\"\n                  label=\"Street Address\"\n                  className={classes.textField}\n                  value={this.state.contactAddress2}\n                  onChange={this.handleChange(\"contactAddress2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-contactCity-2\"\n                  variant=\"outlined\"\n                  label=\"City\"\n                  className={classes.textField}\n                  value={this.state.contactCity2}\n                  onChange={this.handleChange(\"contactCity2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-state2\"\n                  variant=\"outlined\"\n                  label=\"State\"\n                  className={classes.textField}\n                  value={this.state.contactState2}\n                  onChange={this.handleChange(\"contactState2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-contactZip2\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.contactZip2}\n                  onChange={this.handleChange(\"contactZip2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-contactPhone2\"\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  className={classes.textField}\n                  value={this.state.contactPhone2}\n                  onChange={this.handleChange(\"contactPhone2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-contactPhone2\"\n                  variant=\"outlined\"\n                  label=\"Secondary Phone Number\"\n                  className={classes.textField}\n                  value={this.state.contact2ndPhone2}\n                  onChange={this.handleChange(\"contact2ndPhone2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  required\n                  id=\"standard-contactEmail2\"\n                  variant=\"outlined\"\n                  label=\"Email\"\n                  className={classes.textFieldAlign2}\n                  value={this.state.contactEmail2}\n                  onChange={this.handleChange(\"contactEmail2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {/*\n              {this.state.checkedContact2 ? (\n                <FormGroup className={classes.alignCheck} row>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        color=\"primary\"\n                        checked={this.state.contactCheckedRecEmails}\n                        onChange={this.handleChangeChecked(\n                          \"contactCheckedRecEmails\"\n                        )}\n                        classes={{\n                          root: classes.checkedRoot,\n                          checked: classes.checked\n                        }}\n                        value=\"contactCheckedRecEmails\"\n                      />\n                    }\n                    label=\"Receive email notifcations\"\n                  />\n                </FormGroup>\n              ) : null}\n                  */}\n\n              {this.state.checkedContact2 ? (\n                <Container>\n                  <FormGroup className={classes.checkBoxPadding} row>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          color=\"primary\"\n                          checked={this.state.checkedContact3}\n                          onChange={this.handleChangeCheck3(\"checkedContact3\")}\n                          classes={{\n                            root: classes.checkedRoot,\n                            checked: classes.checked\n                          }}\n                          value=\"checkedContact3\"\n                        />\n                      }\n                      label=\"Add third contact\"\n                    />\n                  </FormGroup>\n                </Container>\n              ) : null}\n              {/* Contact 3 */}\n\n              {this.state.checkedContact3 ? (\n                <Paper className={classes.rootTitle} elevation={0}>\n                  <Typography\n                    className={classes.title}\n                    align=\"center\"\n                    variant=\"h5\"\n                  >\n                    Contact 3 Information\n                  </Typography>\n                </Paper>\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-select-contactTitle3\"\n                  select\n                  label=\"Title\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactTitle3}\n                  onChange={this.handleChange(\"contactTitle3\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {titles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  required\n                  id=\"standard-contactFirstName3\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactFirstName3}\n                  onChange={this.handleChange(\"contactFirstName3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact3 ? (\n                <TextField\n                  required\n                  id=\"standard-lastNamename3\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactLastName3}\n                  onChange={this.handleChange(\"contactLastName3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-contactAddress3\"\n                  variant=\"outlined\"\n                  label=\"Street Address\"\n                  className={classes.textField}\n                  value={this.state.contactAddress3}\n                  onChange={this.handleChange(\"contactAddress3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-contactCity-3\"\n                  variant=\"outlined\"\n                  label=\"City\"\n                  className={classes.textField}\n                  value={this.state.contactCity3}\n                  onChange={this.handleChange(\"contactCity3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-state3\"\n                  variant=\"outlined\"\n                  label=\"State\"\n                  className={classes.textField}\n                  value={this.state.contactState3}\n                  onChange={this.handleChange(\"contactState3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-contactZip3\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.contactZip3}\n                  onChange={this.handleChange(\"contactZip3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-contactPhone3\"\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  className={classes.textField}\n                  value={this.state.contactPhone3}\n                  onChange={this.handleChange(\"contactPhone3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-contactPhone3\"\n                  variant=\"outlined\"\n                  label=\"Secondary Phone Number\"\n                  className={classes.textField}\n                  value={this.state.contact2ndPhone3}\n                  onChange={this.handleChange(\"contact2ndPhone3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  required\n                  id=\"standard-contactEmail3\"\n                  variant=\"outlined\"\n                  label=\"Email\"\n                  className={classes.textFieldAlign3}\n                  value={this.state.contactEmail3}\n                  onChange={this.handleChange(\"contactEmail3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {/*\n            <Button\n              size=\"medium\"\n              variant=\"contained\"\n              className={classes.button}\n            >\n              Add Additional\n            </Button>\n            */}\n\n              {/* Payor Info  */}\n              {/*\n              <FormGroup className={classes.marg} row>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state.sameAsContact}\n                      onChange={this.handleChange(\"sameAsContact\")}\n                      value=\"sameAsContact\"\n                      color=\"default\"\n                    />\n                  }\n                  label=\"Same as contact\" \n                />\n              </FormGroup>\n                */}\n\n              <Paper className={classes.rootTitle} elevation={0}>\n                <Typography\n                  className={classes.title}\n                  align=\"center\"\n                  variant=\"h5\"\n                >\n                  Payor Information\n                </Typography>\n              </Paper>\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <TextField\n                  required\n                  id=\"billingFirstName\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.billingFirstName}\n                  onChange={this.handleChange(\"billingFirstName\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  id=\"billingLastName\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.billingLastName}\n                  onChange={this.handleChange(\"billingLastName\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-select-paymentType\"\n                  select\n                  label=\"Payment Type\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.paymentType}\n                  onChange={this.handleChange(\"paymentType\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {paymentTypes.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                {this.state.paymentType === \"Card\" ? (\n                  <TextField\n                    id=\"standard-select-cardType\"\n                    select\n                    label=\"Card Type\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.cardType}\n                    onChange={this.handleChangeCard(\"cardType\")}\n                    SelectProps={{\n                      MenuProps: {\n                        className: classes.menu\n                      }\n                    }}\n                  >\n                    {cardTypes.map(option => (\n                      <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                ) : null}\n\n                {this.state.paymentType === \"Card\" ? (\n                  <TextField\n                    required\n                    id=\"standard-nameOnCard\"\n                    label=\"Name on Card\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.nameOnCard}\n                    onChange={this.handleChangeCard(\"nameOnCard\")}\n                    margin=\"normal\"\n                  />\n                ) : null}\n                {this.state.paymentType === \"Card\" ? (\n                  <TextField\n                    required\n                    id=\"standard-cardNum\"\n                    label=\"Card Number\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.cardNum}\n                    onChange={this.handleChangeCard(\"cardNum\")}\n                    margin=\"normal\"\n                  />\n                ) : null}\n\n                {this.state.paymentType === \"Card\" ? (\n                  <TextField\n                    required\n                    id=\"standard-cvv\"\n                    label=\"CVV\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.cvv}\n                    onChange={this.handleChangeCard(\"cvv\")}\n                    margin=\"normal\"\n                  />\n                ) : null}\n\n                {this.state.paymentType === \"Card\" ? (\n                  <TextField\n                    id=\"standard-expDate\"\n                    variant=\"outlined\"\n                    label=\"Expiration Date\"\n                    className={classes.textField}\n                    value={this.state.expDate}\n                    onChange={this.handleChangeCard(\"expDate\")}\n                    margin=\"normal\"\n                  />\n                ) : null}\n\n                <TextField\n                  id=\"standard-billingAddress\"\n                  variant=\"outlined\"\n                  label=\"Billing Street Address\"\n                  className={classes.textField}\n                  value={this.state.billingAddress}\n                  onChange={this.handleChange(\"billingAddress\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-billingCity-\"\n                  variant=\"outlined\"\n                  label=\"City\"\n                  className={classes.textField}\n                  value={this.state.billingCity}\n                  onChange={this.handleChange(\"billingCity\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-payorEmail\"\n                  variant=\"outlined\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  value={this.state.payorEmail}\n                  onChange={this.handleChange(\"payorEmail\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-state\"\n                  variant=\"outlined\"\n                  label=\"State\"\n                  className={classes.textField}\n                  value={this.state.billingState}\n                  onChange={this.handleChange(\"billingState\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-phone\"\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  className={classes.textField}\n                  value={this.state.billingPhone}\n                  onChange={this.handleChange(\"billingPhone\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-billingZip\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.billingZip}\n                  onChange={this.handleChange(\"billingZip\")}\n                  margin=\"normal\"\n                />\n\n                {/*\n                <Button\n                  size=\"medium\"\n                  variant=\"contained\"\n                  className={classes.button}\n                >\n                  +\n                </Button>\n*/}\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"flex-end\">\n              <Button\n                className={classes.saveButton}\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.onSubmit(\n                    // client info\n                    this.state.clientType,\n                    this.state.clientFirstName,\n                    this.state.clientLastName,\n                    this.state.clientEmail,\n                    this.state.clientTitle,\n                    this.state.clientCurrentPassword,\n                    this.state.clientConfirmPassword,\n                    this.state.sessionType,\n                    this.state.sessionCost,\n                    this.state.sessionLegnth,\n                    this.state.clientPhone,\n                    this.state.clientAddress,\n                    this.state.clientBday,\n                    this.state.clientCity,\n                    this.state.clientState,\n                    this.state.clientZipCode,\n                    this.state.clientStreetAddress,\n                    this.state.contactNotes,\n                    // contact info\n                    this.state.contactFirstName,\n                    this.state.contactLastName,\n                    this.state.contactEmail,\n                    this.state.contactTitle,\n                    this.state.contactPhone,\n                    this.state.contactAddress,\n                    this.state.contactCity,\n                    this.state.contactState,\n                    this.state.contactZip,\n                    // contact 2 info\n                    this.state.contactFirstName2,\n                    this.state.contactLastName2,\n                    this.state.contactEmail2,\n                    this.state.contactTitle2,\n                    this.state.contactPhone2,\n                    this.state.contactAddress2,\n                    this.state.contactCity2,\n                    this.state.contactState2,\n                    this.state.contactZip2,\n                    // contact 3 info\n                    this.state.contactFirstName3,\n                    this.state.contactLastName3,\n                    this.state.contactEmail3,\n                    this.state.contactTitle3,\n                    this.state.contactPhone3,\n                    this.state.contactAddress3,\n                    this.state.contactCity3,\n                    this.state.contactState3,\n                    this.state.contactZip3,\n                    // payor info\n                    this.state.billingFirstName,\n                    this.state.billingLastName,\n                    this.state.nameOnCard,\n                    this.state.cardNum,\n                    this.state.payorEmail,\n                    this.state.payorTitle,\n                    this.state.paymentType,\n                    this.state.billingPhone,\n                    this.state.billingAddress,\n                    this.state.billingCity,\n                    this.state.billingZip,\n                    this.state.billingState,\n                    this.state.cvv,\n                    this.state.expDate,\n                    this.state.cardType\n                  );\n                  this.handleClickSnackBar();\n                  //this.setLocation();\n                  //this.setState({ navigate: true });\n                  // this.reloadPage();\n                }}\n              >\n                {/*  <Link style={navStyle} to=\"/clients\"> */}\n                Save\n                {/*   </Link> */}\n              </Button>\n              <Snackbar\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\"\n                }}\n                open={this.state.open}\n                autoHideDuration={6000}\n                onClose={this.handleCloseSnackBar}\n              >\n                <MySnackbarContentWrapper\n                  onClose={this.handleCloseSnackBar}\n                  variant=\"success\"\n                  message=\"Your new client has been saved!\"\n                />\n              </Snackbar>\n            </Grid>\n          </Paper>\n        </form>\n      </Container>\n    );\n  }\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TopPanel);\n"]},"metadata":{},"sourceType":"module"}