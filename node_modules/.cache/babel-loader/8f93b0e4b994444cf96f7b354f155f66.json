{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos/MTSaaSRepo/mtsaas/src/ReactCalendarBase.js\";\nimport React, { Component } from \"react\"; //import { render } from \"react-dom\";\n\nimport events from \"./events\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport NewEventDialog from \"./newEventDialog\";\nimport ExistingEventDialog from \"./existingEventDialog\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst propTypes = {};\n\nconst styles = theme => ({\n  state: {\n    open: false,\n    openV: false\n  },\n  root: {\n    padding: theme.spacing(2, 2)\n  }\n});\n\nclass ReactCalendarBase extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleClickOpen2 = () => {\n      this.setState({\n        openV: true\n      });\n    };\n\n    this.handleClose2 = () => {\n      this.setState({\n        openV: false\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.state = {\n      events\n    };\n  }\n  /* show new event dialog box */\n\n\n  render() {\n    //const { classes } = this.props;\n    const classes = withStyles();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(BigCalendar, {\n      className: classes.root,\n      selectable: true,\n      localizer: localizer,\n      events: events,\n      views: [\"month\", \"week\", \"day\"],\n      defaultDate: new Date(2019, 3, 1),\n      onSelectEvent: this.handleClickOpen2,\n      onSelectSlot: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Dialog, {\n      open: this.state.openV,\n      onClose: this.handleClose2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Existing Event\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(ExistingEventDialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose2,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleClose2,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"New Event\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(NewEventDialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nReactCalendarBase.propTypes = propTypes; //export default ReactCalendarBase;\n\nexport default withStyles(styles)(ReactCalendarBase);","map":{"version":3,"sources":["/Users/kenneth/repos/MTSaaSRepo/mtsaas/src/ReactCalendarBase.js"],"names":["React","Component","events","BigCalendar","moment","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","withStyles","NewEventDialog","ExistingEventDialog","localizer","momentLocalizer","propTypes","styles","theme","state","open","openV","root","padding","spacing","ReactCalendarBase","constructor","args","handleClickOpen","setState","handleClose","handleClickOpen2","handleClose2","handleChange","name","event","target","value","render","classes","Date"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import { render } from \"react-dom\";\nimport events from \"./events\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport NewEventDialog from \"./newEventDialog\";\nimport ExistingEventDialog from \"./existingEventDialog\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst propTypes = {};\n\nconst styles = theme => ({\n  state: {\n    open: false,\n    openV: false\n  },\n\n  root: {\n    padding: theme.spacing(2, 2)\n  }\n});\n\nclass ReactCalendarBase extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = { events };\n  }\n\n  /* show new event dialog box */\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  /* close new event dialog box */\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  /* show existing event dialog box */\n  handleClickOpen2 = () => {\n    this.setState({ openV: true });\n  };\n\n  /* close existing event dialog box */\n  handleClose2 = () => {\n    this.setState({ openV: false });\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  render() {\n    //const { classes } = this.props;\n    const classes = withStyles();\n\n    return (\n      <div>\n        <BigCalendar\n          className={classes.root}\n          selectable\n          localizer={localizer}\n          events={events}\n          views={[\"month\", \"week\", \"day\"]}\n          defaultDate={new Date(2019, 3, 1)}\n          onSelectEvent={this.handleClickOpen2}\n          onSelectSlot={this.handleClickOpen}\n        />\n        {/* existing dialog */}\n        <Dialog open={this.state.openV} onClose={this.handleClose2}>\n          <DialogTitle id=\"form-dialog-title\">Existing Event</DialogTitle>\n          <DialogContent>\n            <ExistingEventDialog />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose2} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleClose2} color=\"primary\">\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog open={this.state.open} onClose={this.handleClose}>\n          <DialogTitle id=\"form-dialog-title\">New Event</DialogTitle>\n          <DialogContent>\n            <NewEventDialog />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nReactCalendarBase.propTypes = propTypes;\n\n//export default ReactCalendarBase;\nexport default withStyles(styles)(ReactCalendarBase);\n"]},"metadata":{},"sourceType":"module"}