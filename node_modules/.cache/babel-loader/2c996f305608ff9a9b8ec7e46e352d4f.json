{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/Tables/backEndFormsTable.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport Container from \"@material-ui/core/Container\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport axios from \"axios\";\n/*\nlet counter = 0;\nfunction createData(name, role, email, phone, clients) {\n  counter += 1;\n  return { id: counter, name, role, email, phone, clients };\n}\n*/\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [{\n  id: \"form\",\n  label: \"Form\"\n}, {\n  id: \"visibleToTherapist\",\n  label: \"Visible to Therapist\"\n}, {\n  id: \"dateCreated\",\n  label: \"Date Created\" // Prev File\n\n  /*   { id: \"name\", label: \"Name\" },\n  { id: \"phone\", label: \"Phone\" },\n  { id: \"email\", label: \"Email\" },\n  { id: \"therapist\", label: \"Therapist\" },\n  { id: \"facility\", label: \"Facility\" } */\n  // { id: \"clients\", label: \"Clients\" }\n\n}];\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    //backgroundColor: lightBlue[400],\n    backgroundColor: Cyan[800],\n    color: theme.palette.common.white,\n    fontSize: 15\n  },\n  body: {\n    fontSize: 12\n  }\n}))(TableCell);\n\nclass EnhancedTableHead extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createSortHandler = property => event => {\n      this.props.onRequestSort(event, property);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          onSelectAllClick = _this$props.onSelectAllClick,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy,\n          numSelected = _this$props.numSelected,\n          rowCount = _this$props.rowCount;\n    return React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(CustomTableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      indeterminate: numSelected > 0 && numSelected < rowCount,\n      checked: numSelected === rowCount,\n      onChange: onSelectAllClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), rows.map(row => React.createElement(CustomTableCell, {\n      key: row.id,\n      align: \"center\",\n      sortDirection: orderBy === row.id ? order : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(TableSortLabel, {\n      active: orderBy === row.id,\n      direction: order,\n      onClick: this.createSortHandler(row.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, row.label)), this)));\n  }\n\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  // previous file\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired //rowCount: PropTypes.number.isRequired,\n\n};\n\nconst styles = theme => ({\n  root: {\n    //width: \"60%\",\n    marginTop: theme.spacing.unit * 3,\n    // marginLeft: theme.spacing.unit * 30,\n    overflowX: \"auto\"\n  },\n  table: {//minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  },\n  appBar: {\n    position: \"relative\",\n    backgroundColor: Cyan[800]\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1) //width: 400\n\n  },\n  textField2: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 198\n  },\n  textField3: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"60%\"\n  },\n  root2: {\n    marginTop: theme.spacing(10)\n  },\n  letter: {\n    marginLeft: theme.spacing(10),\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(5)\n  }\n});\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }));\n}\n\nclass EnhancedTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      order: \"\",\n      orderBy: \"\",\n      templateData: [],\n      page: 0,\n      rowsPerPage: 5,\n      selected: [],\n      open: false\n    };\n\n    this.handleSelectAllClick = event => {\n      if (event.target.checked) {\n        this.setState(state => ({\n          selected: state.templateData.map(n => n.id)\n        }));\n        return;\n      }\n\n      this.setState({\n        selected: []\n      });\n    };\n\n    this.handleClick = (event, id) => {\n      const selected = this.state.selected;\n      const selectedIndex = selected.indexOf(id);\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      this.setState({\n        selected: newSelected\n      });\n    };\n\n    this.handleRequestSort = (event, property) => {\n      const orderBy = property;\n      let order = \"desc\";\n\n      if (this.state.orderBy === property && this.state.order === \"desc\") {\n        order = \"asc\";\n      }\n\n      this.setState({\n        order,\n        orderBy\n      });\n    };\n\n    this.handleChangePage = (event, page) => {\n      this.setState({\n        page\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.isSelected = id => this.state.selected.indexOf(id) !== -1;\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/forms\").then(response => {\n      console.log(\"Got form data!\");\n      console.log(response.data);\n      this.setState({\n        templateData: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Form interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from form data!\");\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          templateData = _this$state.templateData,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          selected = _this$state.selected;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, templateData.length - page * rowsPerPage);\n    return React.createElement(Container, {\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.tableWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(Table\n    /* className={classes.table} */\n    , {\n      \"aria-labelledby\": \"tableTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(EnhancedTableHead, {\n      numSelected: selected.length,\n      order: order,\n      orderBy: orderBy,\n      onRequestSort: this.handleRequestSort,\n      onSelectAllClick: this.handleSelectAllClick,\n      rowCount: templateData.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, stableSort(templateData, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(n => {\n      const isSelected = this.isSelected(n.id);\n      return React.createElement(TableRow, {\n        hover: true,\n        className: classes.row,\n        onClick: event => this.handleClick(event, n.id),\n        tabIndex: -1,\n        key: n.id,\n        selected: isSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: isSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      })), React.createElement(TableCell, {\n        onClick: this.handleOpen,\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, n.form_name), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, n.visible), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, n.created));\n    }), emptyRows > 0 && React.createElement(TableRow, {\n      style: {\n        height: 49 * emptyRows\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      colSpan: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }))))), React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 15, 20],\n      component: \"div\",\n      count: templateData.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        \"aria-label\": \"Previous Page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"Next Page\"\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      fullScreen: true,\n      open: this.state.open,\n      onClose: this.handleClose,\n      TransitionComponent: Transition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      className: classes.appBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      color: \"inherit\",\n      onClick: this.handleClose,\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, \"Note Form Builder\"), React.createElement(Button, {\n      color: \"inherit\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(EnhancedTable);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/Tables/backEndFormsTable.js"],"names":["React","classNames","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","Cyan","Container","Dialog","Slide","AppBar","Grid","TextField","CloseIcon","Button","IconButton","axios","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","rows","id","label","CustomTableCell","theme","head","backgroundColor","color","palette","common","white","fontSize","body","EnhancedTableHead","Component","createSortHandler","property","event","props","onRequestSort","render","onSelectAllClick","numSelected","rowCount","row","propTypes","number","isRequired","func","string","styles","root","marginTop","spacing","unit","overflowX","table","tableWrapper","background","default","appBar","position","title","marginLeft","flex","textField","marginRight","textField2","width","textField3","root2","letter","Transition","EnhancedTable","state","templateData","page","rowsPerPage","selected","open","handleSelectAllClick","target","checked","setState","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleRequestSort","handleChangePage","handleChangeRowsPerPage","value","handleOpen","handleClose","isSelected","componentDidMount","get","then","response","console","log","data","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","classes","emptyRows","Math","min","form_name","visible","created","height","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport Container from \"@material-ui/core/Container\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport axios from \"axios\";\n/*\nlet counter = 0;\nfunction createData(name, role, email, phone, clients) {\n  counter += 1;\n  return { id: counter, name, role, email, phone, clients };\n}\n*/\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [\n  { id: \"form\", label: \"Form\" },\n  { id: \"visibleToTherapist\", label: \"Visible to Therapist\" },\n  { id: \"dateCreated\", label: \"Date Created\" }\n  // Prev File\n  /*   { id: \"name\", label: \"Name\" },\n  { id: \"phone\", label: \"Phone\" },\n  { id: \"email\", label: \"Email\" },\n  { id: \"therapist\", label: \"Therapist\" },\n  { id: \"facility\", label: \"Facility\" } */\n  // { id: \"clients\", label: \"Clients\" }\n];\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    //backgroundColor: lightBlue[400],\n    backgroundColor: Cyan[800],\n    color: theme.palette.common.white,\n    fontSize: 15\n  },\n  body: {\n    fontSize: 12\n  }\n}))(TableCell);\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const {\n      onSelectAllClick,\n      order,\n      orderBy,\n      numSelected,\n      rowCount\n    } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <CustomTableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={numSelected === rowCount}\n              onChange={onSelectAllClick}\n            />\n          </CustomTableCell>\n          {rows.map(\n            row => (\n              <CustomTableCell\n                key={row.id}\n                align=\"center\"\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <TableSortLabel\n                  active={orderBy === row.id}\n                  direction={order}\n                  onClick={this.createSortHandler(row.id)}\n                >\n                  {row.label}\n                </TableSortLabel>\n              </CustomTableCell>\n            ),\n            this\n          )}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  // previous file\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired\n  //rowCount: PropTypes.number.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    //width: \"60%\",\n    marginTop: theme.spacing.unit * 3,\n    // marginLeft: theme.spacing.unit * 30,\n    overflowX: \"auto\"\n  },\n  table: {\n    //minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  },\n  appBar: {\n    position: \"relative\",\n    backgroundColor: Cyan[800]\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n    //width: 400\n  },\n  textField2: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 198\n  },\n  textField3: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"60%\"\n  },\n\n  root2: {\n    marginTop: theme.spacing(10)\n  },\n  letter: {\n    marginLeft: theme.spacing(10),\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(5)\n  }\n});\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass EnhancedTable extends React.Component {\n  state = {\n    order: \"\",\n    orderBy: \"\",\n    templateData: [],\n    page: 0,\n    rowsPerPage: 5,\n    selected: [],\n    open: false\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/forms\")\n      .then(response => {\n        console.log(\"Got form data!\");\n        console.log(response.data);\n        this.setState({\n          templateData: response.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Form interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from form data!\");\n    }\n  }\n\n  handleSelectAllClick = event => {\n    if (event.target.checked) {\n      this.setState(state => ({ selected: state.templateData.map(n => n.id) }));\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    this.setState({ selected: newSelected });\n  };\n\n  // prev file -->\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = \"desc\";\n\n    if (this.state.orderBy === property && this.state.order === \"desc\") {\n      order = \"asc\";\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  render() {\n    const { classes } = this.props;\n    const {\n      templateData,\n      order,\n      orderBy,\n      rowsPerPage,\n      page,\n      selected\n    } = this.state;\n    const emptyRows =\n      rowsPerPage -\n      Math.min(rowsPerPage, templateData.length - page * rowsPerPage);\n\n    return (\n      <Container maxWidth=\"lg\">\n        <Paper className={classes.root}>\n          <div className={classes.tableWrapper}>\n            <Table /* className={classes.table} */ aria-labelledby=\"tableTitle\">\n              <EnhancedTableHead\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={this.handleRequestSort}\n                onSelectAllClick={this.handleSelectAllClick}\n                rowCount={templateData.length}\n              />\n              <TableBody>\n                {stableSort(templateData, getSorting(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map(n => {\n                    const isSelected = this.isSelected(n.id);\n                    return (\n                      <TableRow\n                        hover\n                        className={classes.row}\n                        onClick={event => this.handleClick(event, n.id)}\n                        tabIndex={-1}\n                        key={n.id}\n                        selected={isSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isSelected} />\n                        </TableCell>\n                        <TableCell onClick={this.handleOpen} align=\"center\">\n                          {n.form_name}\n                        </TableCell>\n                        <TableCell align=\"center\">{n.visible}</TableCell>\n                        <TableCell align=\"center\">{n.created}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: 49 * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 15, 20]}\n            component=\"div\"\n            count={templateData.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"Previous Page\"\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"Next Page\"\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n          />\n        </Paper>\n        <Dialog\n          fullScreen\n          open={this.state.open}\n          onClose={this.handleClose}\n          TransitionComponent={Transition}\n        >\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={this.handleClose}\n                aria-label=\"Close\"\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                Note Form Builder\n              </Typography>\n              <Button color=\"inherit\" onClick={this.handleClose}>\n                Save\n              </Button>\n            </Toolbar>\n          </AppBar>\n        </Dialog>\n      </Container>\n    );\n  }\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EnhancedTable);\n"]},"metadata":{},"sourceType":"module"}