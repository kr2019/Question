{"ast":null,"code":"import _objectSpread from \"/Users/kenneth/repos/MTSaaSRepo/mtsaas/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/kenneth/repos/MTSaaSRepo/mtsaas/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kenneth/repos/MTSaaSRepo/mtsaas/src/existingEventDialog.js\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"moment\";\nimport MomentUtils from \"@date-io/moment\";\nimport { MuiPickersUtilsProvider, DatePicker, TimePicker } from \"@material-ui/pickers\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nconst clients = [{\n  value: \"John Smith\",\n  label: \"John Smith\"\n}, {\n  value: \"Jill Smith\",\n  label: \"Jill Smith\"\n}, {\n  value: \"Ashley Flowers\",\n  label: \"Ashley Flowers\"\n}];\nconst therapists = [{\n  value: \"Therapist 1\",\n  label: \"Therapist 1\"\n}, {\n  value: \"Harry Potter\",\n  label: \"Harry Potter\"\n}, {\n  value: \"Therapist 3\",\n  label: \"Therapist 3\"\n}];\nconst categories = [{\n  value: \"None\",\n  label: \"None\"\n}];\nconst repeatOptions = [{\n  value: \"Daily\",\n  label: \"Daily\"\n}, {\n  value: \"Weekly\",\n  label: \"Weekly\"\n}, {\n  value: \"Monthly\",\n  label: \"Monthly\"\n}, {\n  value: \"Custom\",\n  label: \"Custom\"\n}];\nconst repeatEndOptions = [{\n  value: \"Never\",\n  label: \"Never\"\n}, {\n  value: \"After\",\n  label: \"After\"\n}, {\n  value: \"On Date\",\n  label: \"On Date\"\n}];\nconst customFreqOptions = [{\n  value: \"Daily\",\n  label: \"Daily\"\n}, {\n  value: \"Weekly\",\n  label: \"Weekly\"\n}, {\n  value: \"Monthly\",\n  label: \"Monthly\"\n}];\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  },\n  textField2: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 192\n  },\n  rootCustWeekDay: {\n    display: \"flex\"\n  },\n  formControlCustWeekDay: {\n    margin: theme.spacing()\n  }\n}));\nexport default function OutlinedTextFields() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    existingClient: \"John Smith\",\n    existingTherapist: \"Harry Potter\",\n    existingLocation: \"Main Building\",\n    existingCategory: \"\",\n    existingRepeat: \"Therapy\",\n    endExistingRepeat: \"\",\n    existingNumOccurences: \"\",\n    existingCustomFreq: \"\",\n    existingEveryNumDays: \"\",\n    existingEveryNumWeeks: \"\",\n    existingNumMonths: \"\"\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  const _React$useState3 = React.useState({\n    checkedRepeat: true,\n    sun: false,\n    mon: false,\n    tues: false,\n    wed: false,\n    thu: false,\n    fri: false,\n    sat: false\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        state = _React$useState4[0],\n        setState = _React$useState4[1]; // The first commit of Material-UI\n\n\n  const _React$useState5 = React.useState(new Date(\"2019-04-01T21:11:54\")),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selectedDateStart = _React$useState6[0],\n        setSelectedDateStart = _React$useState6[1];\n\n  const _React$useState7 = React.useState(new Date(\"2019-04-01T21:11:54\")),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        selectedDateEnd = _React$useState8[0],\n        setSelectedDateEnd = _React$useState8[1];\n\n  const _React$useState9 = React.useState(new Date(\"2019-04-01T15:11:54\")),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        selectedTimeStart = _React$useState10[0],\n        setSelectedTimeStart = _React$useState10[1];\n\n  const _React$useState11 = React.useState(new Date(\"2019-05-01T21:11:54\")),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        selectedTimeEnd = _React$useState12[0],\n        setSelectedTimeEnd = _React$useState12[1];\n\n  const _React$useState13 = React.useState(new Date(\"2019-05-01T21:11:54\")),\n        _React$useState14 = _slicedToArray(_React$useState13, 2),\n        selectedDateOccurenceEnd = _React$useState14[0],\n        setSelectedDateOccurenceEnd = _React$useState14[1];\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  const handleChangeRepeat = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  const handleChangeCustomFreq = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  const handleChangeEndRepeat = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  const handleChangeCheckBox = name => event => {\n    setState(_objectSpread({}, state, {\n      [name]: event.target.checked\n    }));\n  };\n\n  function handleDateChangeStart(date) {\n    setSelectedDateStart(date);\n  }\n\n  function handleDateChangeEnd(date) {\n    setSelectedDateEnd(date);\n  }\n\n  function handleTimeChangeStart(date) {\n    setSelectedTimeStart(date);\n  }\n\n  function handleTimeChangeEnd(date) {\n    setSelectedTimeEnd(date);\n  }\n\n  function handleDateOccurenceChange(date) {\n    setSelectedDateOccurenceEnd(date);\n  }\n\n  const handleChangeCustWeekDay = name => event => {\n    setState(_objectSpread({}, state, {\n      [name]: event.target.checked\n    }));\n  };\n\n  const mon = state.mon,\n        tues = state.tues,\n        wed = state.wed,\n        thu = state.thu,\n        fri = state.fri,\n        sat = state.sat,\n        sun = state.sun;\n  return React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    id: \"standard-select-client\",\n    select: true,\n    label: \"Client\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    className: classes.textField,\n    value: values.existingClient,\n    onChange: handleChange(\"existingClient\"),\n    SelectProps: {\n      MenuProps: {\n        className: classes.menu\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, clients.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, option.label))), React.createElement(TextField, {\n    required: true,\n    id: \"standard-select-client\",\n    select: true,\n    label: \"Therapist\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    className: classes.textField,\n    value: values.existingTherapist,\n    onChange: handleChange(\"existingTherapist\"),\n    SelectProps: {\n      MenuProps: {\n        className: classes.menu\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, therapists.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, option.label))), React.createElement(Grid, {\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-existingLocation\",\n    label: \"Location\",\n    variant: \"outlined\",\n    className: classes.textField2,\n    value: values.existingLocation,\n    onChange: handleChange(\"existingLocation\"),\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-select-client\",\n    select: true,\n    label: \"Category\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    className: classes.textField2,\n    value: values.existingCategory,\n    onChange: handleChange(\"existingCategory\"),\n    SelectProps: {\n      MenuProps: {\n        className: classes.menu\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, categories.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, option.label)))), React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    inputVariant: \"outlined\",\n    className: classes.textField2,\n    margin: \"normal\",\n    id: \"mui-pickers-date\",\n    label: \"Start Date\",\n    value: selectedDateStart,\n    onChange: handleDateChangeStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }), React.createElement(TimePicker, {\n    inputVariant: \"outlined\",\n    className: classes.textField2,\n    margin: \"normal\",\n    id: \"mui-pickers-time\",\n    label: \"Start Time\",\n    value: selectedTimeStart,\n    onChange: handleTimeChangeStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }))), React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    inputVariant: \"outlined\",\n    margin: \"normal\",\n    className: classes.textField2,\n    id: \"mui-pickers-date\",\n    label: \"End Date\",\n    value: selectedDateEnd,\n    onChange: handleDateChangeEnd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }), React.createElement(TimePicker, {\n    inputVariant: \"outlined\",\n    className: classes.textField2,\n    margin: \"normal\",\n    id: \"mui-pickers-time\",\n    label: \"End Time\",\n    value: selectedTimeEnd,\n    onChange: handleTimeChangeEnd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }))), React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: state.checkedRepeat,\n      onChange: handleChangeCheckBox(\"checkedRepeat\"),\n      value: \"checkedRepeat\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }),\n    label: \"Repeat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-select-client\",\n    select: true,\n    label: \"Repeats\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    className: classes.textField,\n    value: values.existingRepeat,\n    onChange: handleChangeRepeat(\"existingRepeat\"),\n    SelectProps: {\n      MenuProps: {\n        className: classes.menu\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, repeatOptions.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, option.label)))), React.createElement(Grid, {\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-select-client\",\n    select: true,\n    label: \"End Repeat\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    className: classes.textField2,\n    value: values.newEndRepeat,\n    onChange: handleChangeEndRepeat(\"newEndRepeat\"),\n    SelectProps: {\n      MenuProps: {\n        className: classes.menu\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, repeatEndOptions.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402\n    },\n    __self: this\n  }, option.label))), React.createElement(TextField, {\n    id: \"standard-newNumOccurences\",\n    label: \"Occurences\",\n    variant: \"outlined\",\n    className: classes.textField2,\n    value: values.newNumOccurences,\n    onChange: handleChange(\"existingNumOccurences\"),\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  })), React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    inputVariant: \"outlined\",\n    className: classes.textField2,\n    margin: \"normal\",\n    id: \"mui-pickers-date\",\n    label: \"End On\",\n    value: selectedDateOccurenceEnd,\n    onChange: handleDateOccurenceChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419\n    },\n    __self: this\n  }))), React.createElement(TextField, {\n    id: \"standard-select-client\",\n    select: true,\n    label: \"Custom Frequency\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    className: classes.textField,\n    value: values.existingCustomFreq,\n    onChange: handleChangeCustomFreq(\"existingCustomFreq\"),\n    SelectProps: {\n      MenuProps: {\n        className: classes.menu\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, customFreqOptions.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }, option.label))), React.createElement(TextField, {\n    id: \"standard-newNumOccurences\",\n    label: \"Every Number of Days\",\n    variant: \"outlined\",\n    className: classes.textField2,\n    value: values.existingEveryNumDays,\n    onChange: handleChange(\"existingEveryNumDays\"),\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-newNumOccurences\",\n    label: \"Every Number of Weeks\",\n    variant: \"outlined\",\n    className: classes.textField2,\n    value: values.existingEveryNumWeeks,\n    onChange: handleChange(\"existingEveryNumWeeks\"),\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControlCustWeekDay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473\n    },\n    __self: this\n  }, \"Every\"), React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: sun,\n      onChange: handleChangeCustWeekDay(\"sun\"),\n      value: \"sun\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }),\n    label: \"Su\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: mon,\n      onChange: handleChangeCustWeekDay(\"mon\"),\n      value: \"mon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }),\n    label: \"M\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: tues,\n      onChange: handleChangeCustWeekDay(\"tues\"),\n      value: \"tues\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }),\n    label: \"T\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: wed,\n      onChange: handleChangeCustWeekDay(\"wed\"),\n      value: \"wed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }),\n    label: \"W\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: thu,\n      onChange: handleChangeCustWeekDay(\"thu\"),\n      value: \"thu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }),\n    label: \"Th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: fri,\n      onChange: handleChangeCustWeekDay(\"fri\"),\n      value: \"fri\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }),\n    label: \"F\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: sat,\n      onChange: handleChangeCustWeekDay(\"sat\"),\n      value: \"sat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }),\n    label: \"Sa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535\n    },\n    __self: this\n  }))), React.createElement(TextField, {\n    id: \"standard-newNumOccurences\",\n    label: \"Every Number of Months\",\n    variant: \"outlined\",\n    className: classes.textField2,\n    value: values.existingNumMonths,\n    onChange: handleChange(\"existingNumMonths\"),\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/kenneth/repos/MTSaaSRepo/mtsaas/src/existingEventDialog.js"],"names":["React","clsx","makeStyles","MenuItem","TextField","Grid","MomentUtils","MuiPickersUtilsProvider","DatePicker","TimePicker","FormGroup","FormControlLabel","FormLabel","FormControl","Checkbox","clients","value","label","therapists","categories","repeatOptions","repeatEndOptions","customFreqOptions","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","textField2","rootCustWeekDay","formControlCustWeekDay","margin","OutlinedTextFields","classes","useState","existingClient","existingTherapist","existingLocation","existingCategory","existingRepeat","endExistingRepeat","existingNumOccurences","existingCustomFreq","existingEveryNumDays","existingEveryNumWeeks","existingNumMonths","values","setValues","checkedRepeat","sun","mon","tues","wed","thu","fri","sat","state","setState","Date","selectedDateStart","setSelectedDateStart","selectedDateEnd","setSelectedDateEnd","selectedTimeStart","setSelectedTimeStart","selectedTimeEnd","setSelectedTimeEnd","selectedDateOccurenceEnd","setSelectedDateOccurenceEnd","handleChange","name","event","target","handleChangeRepeat","handleChangeCustomFreq","handleChangeEndRepeat","handleChangeCheckBox","checked","handleDateChangeStart","date","handleDateChangeEnd","handleTimeChangeStart","handleTimeChangeEnd","handleDateOccurenceChange","handleChangeCustWeekDay","MenuProps","className","menu","map","option","newEndRepeat","newNumOccurences"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"moment\";\nimport MomentUtils from \"@date-io/moment\";\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker,\n  TimePicker\n} from \"@material-ui/pickers\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst clients = [\n  {\n    value: \"John Smith\",\n    label: \"John Smith\"\n  },\n\n  {\n    value: \"Jill Smith\",\n    label: \"Jill Smith\"\n  },\n  {\n    value: \"Ashley Flowers\",\n    label: \"Ashley Flowers\"\n  }\n];\n\nconst therapists = [\n  {\n    value: \"Therapist 1\",\n    label: \"Therapist 1\"\n  },\n\n  {\n    value: \"Harry Potter\",\n    label: \"Harry Potter\"\n  },\n  {\n    value: \"Therapist 3\",\n    label: \"Therapist 3\"\n  }\n];\n\nconst categories = [\n  {\n    value: \"None\",\n    label: \"None\"\n  }\n];\n\nconst repeatOptions = [\n  {\n    value: \"Daily\",\n    label: \"Daily\"\n  },\n\n  {\n    value: \"Weekly\",\n    label: \"Weekly\"\n  },\n  {\n    value: \"Monthly\",\n    label: \"Monthly\"\n  },\n  {\n    value: \"Custom\",\n    label: \"Custom\"\n  }\n];\n\nconst repeatEndOptions = [\n  {\n    value: \"Never\",\n    label: \"Never\"\n  },\n\n  {\n    value: \"After\",\n    label: \"After\"\n  },\n  {\n    value: \"On Date\",\n    label: \"On Date\"\n  }\n];\n\nconst customFreqOptions = [\n  {\n    value: \"Daily\",\n    label: \"Daily\"\n  },\n\n  {\n    value: \"Weekly\",\n    label: \"Weekly\"\n  },\n  {\n    value: \"Monthly\",\n    label: \"Monthly\"\n  }\n];\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  },\n  textField2: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 192\n  },\n  rootCustWeekDay: {\n    display: \"flex\"\n  },\n  formControlCustWeekDay: {\n    margin: theme.spacing()\n  }\n}));\n\nexport default function OutlinedTextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    existingClient: \"John Smith\",\n    existingTherapist: \"Harry Potter\",\n    existingLocation: \"Main Building\",\n    existingCategory: \"\",\n    existingRepeat: \"Therapy\",\n    endExistingRepeat: \"\",\n    existingNumOccurences: \"\",\n    existingCustomFreq: \"\",\n    existingEveryNumDays: \"\",\n    existingEveryNumWeeks: \"\",\n    existingNumMonths: \"\"\n  });\n  const [state, setState] = React.useState({\n    checkedRepeat: true,\n    sun: false,\n    mon: false,\n    tues: false,\n    wed: false,\n    thu: false,\n    fri: false,\n    sat: false\n  });\n\n  // The first commit of Material-UI\n  const [selectedDateStart, setSelectedDateStart] = React.useState(\n    new Date(\"2019-04-01T21:11:54\")\n  );\n\n  const [selectedDateEnd, setSelectedDateEnd] = React.useState(\n    new Date(\"2019-04-01T21:11:54\")\n  );\n\n  const [selectedTimeStart, setSelectedTimeStart] = React.useState(\n    new Date(\"2019-04-01T15:11:54\")\n  );\n  const [selectedTimeEnd, setSelectedTimeEnd] = React.useState(\n    new Date(\"2019-05-01T21:11:54\")\n  );\n\n  const [\n    selectedDateOccurenceEnd,\n    setSelectedDateOccurenceEnd\n  ] = React.useState(new Date(\"2019-05-01T21:11:54\"));\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleChangeRepeat = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleChangeCustomFreq = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleChangeEndRepeat = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleChangeCheckBox = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  function handleDateChangeStart(date) {\n    setSelectedDateStart(date);\n  }\n\n  function handleDateChangeEnd(date) {\n    setSelectedDateEnd(date);\n  }\n\n  function handleTimeChangeStart(date) {\n    setSelectedTimeStart(date);\n  }\n\n  function handleTimeChangeEnd(date) {\n    setSelectedTimeEnd(date);\n  }\n\n  function handleDateOccurenceChange(date) {\n    setSelectedDateOccurenceEnd(date);\n  }\n\n  const handleChangeCustWeekDay = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  const { mon, tues, wed, thu, fri, sat, sun } = state;\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"flex-start\">\n      <TextField\n        required\n        id=\"standard-select-client\"\n        select\n        label=\"Client\"\n        variant=\"outlined\"\n        margin=\"normal\"\n        className={classes.textField}\n        value={values.existingClient}\n        onChange={handleChange(\"existingClient\")}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu\n          }\n        }}\n      >\n        {clients.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        required\n        id=\"standard-select-client\"\n        select\n        label=\"Therapist\"\n        variant=\"outlined\"\n        margin=\"normal\"\n        className={classes.textField}\n        value={values.existingTherapist}\n        onChange={handleChange(\"existingTherapist\")}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu\n          }\n        }}\n      >\n        {therapists.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <Grid direction=\"row\">\n        <TextField\n          id=\"standard-existingLocation\"\n          label=\"Location\"\n          variant=\"outlined\"\n          className={classes.textField2}\n          value={values.existingLocation}\n          onChange={handleChange(\"existingLocation\")}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"standard-select-client\"\n          select\n          label=\"Category\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          className={classes.textField2}\n          value={values.existingCategory}\n          onChange={handleChange(\"existingCategory\")}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu\n            }\n          }}\n        >\n          {categories.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <Grid direction=\"row\">\n          <DatePicker\n            inputVariant=\"outlined\"\n            className={classes.textField2}\n            margin=\"normal\"\n            id=\"mui-pickers-date\"\n            label=\"Start Date\"\n            value={selectedDateStart}\n            onChange={handleDateChangeStart}\n          />\n          <TimePicker\n            inputVariant=\"outlined\"\n            className={classes.textField2}\n            margin=\"normal\"\n            id=\"mui-pickers-time\"\n            label=\"Start Time\"\n            value={selectedTimeStart}\n            onChange={handleTimeChangeStart}\n          />\n        </Grid>\n      </MuiPickersUtilsProvider>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <Grid direction=\"row\">\n          <DatePicker\n            inputVariant=\"outlined\"\n            margin=\"normal\"\n            className={classes.textField2}\n            id=\"mui-pickers-date\"\n            label=\"End Date\"\n            value={selectedDateEnd}\n            onChange={handleDateChangeEnd}\n          />\n          <TimePicker\n            inputVariant=\"outlined\"\n            className={classes.textField2}\n            margin=\"normal\"\n            id=\"mui-pickers-time\"\n            label=\"End Time\"\n            value={selectedTimeEnd}\n            onChange={handleTimeChangeEnd}\n          />\n        </Grid>\n      </MuiPickersUtilsProvider>\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={state.checkedRepeat}\n              onChange={handleChangeCheckBox(\"checkedRepeat\")}\n              value=\"checkedRepeat\"\n              color=\"primary\"\n            />\n          }\n          label=\"Repeat\"\n        />\n      </FormGroup>\n      <Grid direction=\"row\">\n        <TextField\n          id=\"standard-select-client\"\n          select\n          label=\"Repeats\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          className={classes.textField}\n          value={values.existingRepeat}\n          onChange={handleChangeRepeat(\"existingRepeat\")}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu\n            }\n          }}\n        >\n          {repeatOptions.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid direction=\"row\">\n        <TextField\n          id=\"standard-select-client\"\n          select\n          label=\"End Repeat\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          className={classes.textField2}\n          value={values.newEndRepeat}\n          onChange={handleChangeEndRepeat(\"newEndRepeat\")}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu\n            }\n          }}\n        >\n          {repeatEndOptions.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"standard-newNumOccurences\"\n          label=\"Occurences\"\n          variant=\"outlined\"\n          className={classes.textField2}\n          value={values.newNumOccurences}\n          onChange={handleChange(\"existingNumOccurences\")}\n          margin=\"normal\"\n        />\n      </Grid>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <Grid direction=\"row\">\n          <DatePicker\n            inputVariant=\"outlined\"\n            className={classes.textField2}\n            margin=\"normal\"\n            id=\"mui-pickers-date\"\n            label=\"End On\"\n            value={selectedDateOccurenceEnd}\n            onChange={handleDateOccurenceChange}\n          />\n        </Grid>\n      </MuiPickersUtilsProvider>\n      <TextField\n        id=\"standard-select-client\"\n        select\n        label=\"Custom Frequency\"\n        variant=\"outlined\"\n        margin=\"normal\"\n        className={classes.textField}\n        value={values.existingCustomFreq}\n        onChange={handleChangeCustomFreq(\"existingCustomFreq\")}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu\n          }\n        }}\n      >\n        {customFreqOptions.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id=\"standard-newNumOccurences\"\n        label=\"Every Number of Days\"\n        variant=\"outlined\"\n        className={classes.textField2}\n        value={values.existingEveryNumDays}\n        onChange={handleChange(\"existingEveryNumDays\")}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-newNumOccurences\"\n        label=\"Every Number of Weeks\"\n        variant=\"outlined\"\n        className={classes.textField2}\n        value={values.existingEveryNumWeeks}\n        onChange={handleChange(\"existingEveryNumWeeks\")}\n        margin=\"normal\"\n      />\n      <FormControl\n        component=\"fieldset\"\n        className={classes.formControlCustWeekDay}\n      >\n        <FormLabel component=\"legend\">Every</FormLabel>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={sun}\n                onChange={handleChangeCustWeekDay(\"sun\")}\n                value=\"sun\"\n              />\n            }\n            label=\"Su\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={mon}\n                onChange={handleChangeCustWeekDay(\"mon\")}\n                value=\"mon\"\n              />\n            }\n            label=\"M\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={tues}\n                onChange={handleChangeCustWeekDay(\"tues\")}\n                value=\"tues\"\n              />\n            }\n            label=\"T\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={wed}\n                onChange={handleChangeCustWeekDay(\"wed\")}\n                value=\"wed\"\n              />\n            }\n            label=\"W\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={thu}\n                onChange={handleChangeCustWeekDay(\"thu\")}\n                value=\"thu\"\n              />\n            }\n            label=\"Th\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={fri}\n                onChange={handleChangeCustWeekDay(\"fri\")}\n                value=\"fri\"\n              />\n            }\n            label=\"F\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={sat}\n                onChange={handleChangeCustWeekDay(\"sat\")}\n                value=\"sat\"\n              />\n            }\n            label=\"Sa\"\n          />\n        </FormGroup>\n      </FormControl>\n      <TextField\n        id=\"standard-newNumOccurences\"\n        label=\"Every Number of Months\"\n        variant=\"outlined\"\n        className={classes.textField2}\n        value={values.existingNumMonths}\n        onChange={handleChange(\"existingNumMonths\")}\n        margin=\"normal\"\n      />\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}