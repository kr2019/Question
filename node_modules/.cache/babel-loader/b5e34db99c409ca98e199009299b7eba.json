{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/panelTabs/memberPanelTabs.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport green from \"@material-ui/core/colors/green\";\nimport red from \"@material-ui/core/colors/red\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport AssignedClientsTable from \"../Tables/assignedClientsTable\";\nimport TeamMemFilesTable from \"../Tables/teamMemFilesTable\";\nimport AssignedClientsActions from \"../Actions/asssignedClientsActions\";\nimport TeamMemberInfo from \"../teamMember/teamMemberInfo\";\nimport MemberUploadAction from \"../Actions/memberUploadAction\";\nimport AdminPrivliges from \"../teamMember/adminPrivliges\";\nimport TherapistPrivliges from \"../teamMember/therapistPrivliges\";\nimport MemberAvatar from \"../teamMember/memberAvatarTest\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  root: {\n    //paddingTop: theme.spacing.unit * 1,\n    // paddingBottom: theme.spacing.unit * 1,\n    // paddingLeft: theme.spacing.unit,\n    //marginTop: theme.spacing.unit * 15,\n    //marginLeft: theme.spacing.unit * 22,\n    //marginRight: theme.spacing.unit * 22\n    align: \"center\",\n    //width: \"66%\",\n    height: \"130\"\n  },\n  toggle: {\n    paddingRight: theme.spacing.unit * 30\n  },\n  marg: {\n    marginLeft: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  },\n  purpleAvatar: {\n    margin: 10,\n    color: \"#fff\",\n    backgroundColor: deepPurple[500],\n    width: 100,\n    height: 100,\n    fontSize: 40,\n    marginBottom: theme.spacing.unit * -28,\n    marginRight: theme.spacing.unit * 18\n  },\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    width: 300\n  },\n  menu: {\n    width: 200\n  },\n  checked: {},\n  root2: {\n    //flexGrow: 1,\n    //backgroundColor: theme.palette.background.paper,\n    marginLeft: theme.spacing.unit * 22,\n    marginRight: theme.spacing.unit * 22,\n    //marginTop: theme.spacing.unit * 22,\n    width: \"66%\",\n    borderRadius: theme.shape.borderRadius\n  },\n  infoRoot: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nconst members = [{\n  value: \"Jane Doe\",\n  label: \"Jane Doe\"\n}, {\n  value: \"Hermione Granger\",\n  label: \"Hermione Granger\"\n}, {\n  value: \"Harry Potter\",\n  label: \"Harry Potter\"\n}];\nconst titles = [{\n  value: \"\",\n  label: \"\"\n}, {\n  value: \"Dr.\",\n  label: \"Dr.\"\n}, {\n  value: \"Miss\",\n  label: \"Miss\"\n}, {\n  value: \"Mr.\",\n  label: \"Mr.\"\n}, {\n  value: \"Mrs.\",\n  label: \"Mrs.\"\n}, {\n  value: \"Ms.\",\n  label: \"Ms.\"\n}, {\n  value: \"Mx.\",\n  label: \"Mx.\"\n}];\n\nclass TopPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkedA: true,\n      member: \"Harry Potter\",\n      open: false,\n      client: \"\",\n      cost: \"\",\n      length: \"\",\n      type: \"\",\n      checkedAdmin: true,\n      checkedThera: true,\n      checkedIntern: false,\n      tabValue: 0,\n      //client info\n      firstName: \"Harry\",\n      lastName: \"Potter\",\n      email: \"harry@hogwarts.com\",\n      title: \"Mr.\",\n      currentPassword: \"test123\",\n      confirmPassword: \"test123\",\n      phone: \"123-456-1111\",\n      address: \"713 Hogwarts Lane\",\n      primaryLocation: \"Diagon Alley\",\n      npi: \"731890\",\n      city: \"London\",\n      zipCode: \"77777\",\n      multiline: \"Controlled\"\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n\n    this.handleChange2 = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange3 = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n\n    this.handleChange4 = (event, tabValue) => {\n      this.setState({\n        tabValue\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/gettherapists\").then(response => {\n      console.log(\"Got therapistdata data!\");\n      console.log(response.data);\n      this.setState({\n        therapistData: response.data\n      });\n    }).then(response2 => {\n      return axios.get(\"http://localhost:5000/allclients\").then(response2 => {\n        console.log(\"Got client data!\");\n        console.log(response2.data);\n        this.setState({\n          clientData: response2.data\n        });\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Data interval set!\");\n    }\n  } // kills a process everytime we are done using it\n\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const tabValue = this.state.tabValue;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(MemberAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    })), React.createElement(Paper\n    /* className={classes.root} */\n    , {\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.checkedA,\n        onChange: this.handleChange(\"checkedA\"),\n        value: \"checkedA\",\n        marginLeft: \"theme.spacing.unit * 20\",\n        className: classes.marg,\n        classes: {\n          switchBase: classes.colorSwitchBase,\n          checked: classes.colorChecked,\n          bar: classes.colorBar\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }),\n      label: \"Active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      row: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-member\",\n      select: true,\n      label: \"Team Member\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.member,\n      onChange: this.handleChange2(\"member\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, members.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, option.label))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedAdmin,\n        onChange: this.handleChange(\"checkedAdmin\"),\n        value: \"checkedAdmin\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }),\n      label: \"Administrator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedThera,\n        onChange: this.handleChange(\"checkedThera\"),\n        value: \"checkedThera\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }),\n      label: \"Therapist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedIntern,\n        onChange: this.handleChange(\"checkedIntern\"),\n        value: \"checkedIntern\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }),\n      label: \"Intern\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    })))), React.createElement(AppBar\n    /* className={classes.root2} */\n    , {\n      position: \"static\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      value: tabValue,\n      onChange: this.handleChange4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: \"Team Member Information\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Assigned Clients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Message History\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Privliges\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }))), tabValue === 0 && React.createElement(\"form\", {\n      /* className={classes.container} */\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-title\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.title,\n      onChange: this.handleChange(\"title\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, option.label)))), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.phone,\n      onChange: this.handleChange(\"phone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-firstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.firstName,\n      onChange: this.handleChange(\"firstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.email,\n      onChange: this.handleChange(\"email\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.lastName,\n      onChange: this.handleChange(\"lastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-address\",\n      variant: \"outlined\",\n      label: \"Address\",\n      className: classes.textField,\n      value: this.state.address,\n      onChange: this.handleChange(\"address\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-password-input\",\n      variant: \"outlined\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.currentPassword //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-city-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.city,\n      onChange: this.handleChange(\"city\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-confirmPassword-input\",\n      variant: \"outlined\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.confirmPassword //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-zipCode\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.zipCode,\n      onChange: this.handleChange(\"zipCode\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-npi\",\n      variant: \"outlined\",\n      label: \"NPI Number\",\n      className: classes.textField,\n      value: this.state.npi,\n      onChange: this.handleChange(\"npi\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-primary-location\",\n      variant: \"outlined\",\n      label: \"Primary Location\",\n      className: classes.textField,\n      value: this.state.primaryLocation,\n      onChange: this.handleChange(\"primaryLocation\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    })), React.createElement(TextField, {\n      id: \"standard-full-width\",\n      label: \"Additional Notes\",\n      style: {\n        margin: 8\n      },\n      className: classes.textField2,\n      placeholder: \"Add any additional notes here\",\n      fullWidth: true,\n      multiline: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, \"Save\")))), tabValue === 1 && React.createElement(AssignedClientsActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }), tabValue === 1 && React.createElement(AssignedClientsTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }), tabValue === 2 && React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, \"Message History\"), tabValue === 3 && React.createElement(MemberUploadAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }), tabValue === 3 && React.createElement(TeamMemFilesTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }), tabValue === 4 && React.createElement(TherapistPrivliges, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    })));\n  }\n\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TopPanel);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/panelTabs/memberPanelTabs.js"],"names":["React","PropTypes","withStyles","Paper","deepPurple","Grid","Avatar","green","red","FormGroup","FormControlLabel","Switch","MenuItem","TextField","Checkbox","AppBar","Tab","Tabs","AssignedClientsTable","TeamMemFilesTable","AssignedClientsActions","TeamMemberInfo","MemberUploadAction","AdminPrivliges","TherapistPrivliges","MemberAvatar","Button","Box","Container","axios","styles","theme","root","align","height","toggle","paddingRight","spacing","unit","marg","marginLeft","marginBottom","purpleAvatar","margin","color","backgroundColor","width","fontSize","marginRight","colorSwitchBase","colorBar","colorChecked","textField","menu","checked","root2","borderRadius","shape","infoRoot","members","value","label","titles","TopPanel","Component","state","checkedA","member","open","client","cost","length","type","checkedAdmin","checkedThera","checkedIntern","tabValue","firstName","lastName","email","title","currentPassword","confirmPassword","phone","address","primaryLocation","npi","city","zipCode","multiline","handleChange","name","event","setState","target","handleChange2","handleChange3","handleChange4","componentDidMount","get","then","response","console","log","data","therapistData","response2","clientData","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","render","classes","props","switchBase","bar","MenuProps","className","map","option","textField2","shrink","saveButton","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,GAAP,MAAgB,8BAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,sBAAP,MAAmC,oCAAnC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,KAAK,EAAE,QAPH;AAQJ;AACAC,IAAAA,MAAM,EAAE;AATJ,GADiB;AAavBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,YAAY,EAAEL,KAAK,CAACM,OAAN,CAAcC,IAAd,GAAqB;AAD7B,GAbe;AAiBvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAET,KAAK,CAACM,OAAN,CAAcC,IADtB;AAEJG,IAAAA,YAAY,EAAEV,KAAK,CAACM,OAAN,CAAcC;AAFxB,GAjBiB;AAsBvBI,EAAAA,YAAY,EAAE;AACZC,IAAAA,MAAM,EAAE,EADI;AAEZC,IAAAA,KAAK,EAAE,MAFK;AAGZC,IAAAA,eAAe,EAAEzC,UAAU,CAAC,GAAD,CAHf;AAIZ0C,IAAAA,KAAK,EAAE,GAJK;AAKZZ,IAAAA,MAAM,EAAE,GALI;AAMZa,IAAAA,QAAQ,EAAE,EANE;AAOZN,IAAAA,YAAY,EAAEV,KAAK,CAACM,OAAN,CAAcC,IAAd,GAAqB,CAAC,EAPxB;AAQZU,IAAAA,WAAW,EAAEjB,KAAK,CAACM,OAAN,CAAcC,IAAd,GAAqB;AARtB,GAtBS;AAiCvBW,EAAAA,eAAe,EAAE;AACfL,IAAAA,KAAK,EAAEpC,GAAG,CAAC,GAAD,CADK;AAEf,sBAAkB;AAChBoC,MAAAA,KAAK,EAAErC,KAAK,CAAC,GAAD,CADI;AAEhB,uBAAiB;AACfsC,QAAAA,eAAe,EAAEtC,KAAK,CAAC,GAAD;AADP;AAFD;AAFH,GAjCM;AA0CvB2C,EAAAA,QAAQ,EAAE,EA1Ca;AA2CvBC,EAAAA,YAAY,EAAE,EA3CS;AA6CvBC,EAAAA,SAAS,EAAE;AACTZ,IAAAA,UAAU,EAAET,KAAK,CAACM,OAAN,CAAcC,IADjB;AAETU,IAAAA,WAAW,EAAEjB,KAAK,CAACM,OAAN,CAAcC,IAFlB;AAGTG,IAAAA,YAAY,EAAEV,KAAK,CAACM,OAAN,CAAcC,IAHnB;AAITQ,IAAAA,KAAK,EAAE;AAJE,GA7CY;AAmDvBO,EAAAA,IAAI,EAAE;AACJP,IAAAA,KAAK,EAAE;AADH,GAnDiB;AAuDvBQ,EAAAA,OAAO,EAAE,EAvDc;AAyDvBC,EAAAA,KAAK,EAAE;AACL;AACA;AACAf,IAAAA,UAAU,EAAET,KAAK,CAACM,OAAN,CAAcC,IAAd,GAAqB,EAH5B;AAILU,IAAAA,WAAW,EAAEjB,KAAK,CAACM,OAAN,CAAcC,IAAd,GAAqB,EAJ7B;AAKL;AACAQ,IAAAA,KAAK,EAAE,KANF;AAOLU,IAAAA,YAAY,EAAEzB,KAAK,CAAC0B,KAAN,CAAYD;AAPrB,GAzDgB;AAkEvBE,EAAAA,QAAQ,EAAE;AACRjB,IAAAA,YAAY,EAAEV,KAAK,CAACM,OAAN,CAAcC,IAAd,GAAqB;AAD3B;AAlEa,CAAL,CAApB;;AAuEA,MAAMqB,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,EAMd;AACED,EAAAA,KAAK,EAAE,kBADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CANc,EAUd;AACED,EAAAA,KAAK,EAAE,cADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAVc,CAAhB;AAgBA,MAAMC,MAAM,GAAG,CACb;AACEF,EAAAA,KAAK,EAAE,EADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADa,EAMb;AACED,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CANa,EAWb;AACED,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAXa,EAgBb;AACED,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAhBa,EAoBb;AACED,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CApBa,EAwBb;AACED,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAxBa,EA4Bb;AACED,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CA5Ba,CAAf;;AAkCA,MAAME,QAAN,SAAuB/D,KAAK,CAACgE,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,MAAM,EAAE,cAFF;AAGNC,MAAAA,IAAI,EAAE,KAHA;AAINC,MAAAA,MAAM,EAAE,EAJF;AAKNC,MAAAA,IAAI,EAAE,EALA;AAMNC,MAAAA,MAAM,EAAE,EANF;AAONC,MAAAA,IAAI,EAAE,EAPA;AAQNC,MAAAA,YAAY,EAAE,IARR;AASNC,MAAAA,YAAY,EAAE,IATR;AAUNC,MAAAA,aAAa,EAAE,KAVT;AAWNC,MAAAA,QAAQ,EAAE,CAXJ;AAYN;AACAC,MAAAA,SAAS,EAAE,OAbL;AAcNC,MAAAA,QAAQ,EAAE,QAdJ;AAeNC,MAAAA,KAAK,EAAE,oBAfD;AAgBNC,MAAAA,KAAK,EAAE,KAhBD;AAiBNC,MAAAA,eAAe,EAAE,SAjBX;AAkBNC,MAAAA,eAAe,EAAE,SAlBX;AAmBNC,MAAAA,KAAK,EAAE,cAnBD;AAoBNC,MAAAA,OAAO,EAAE,mBApBH;AAqBNC,MAAAA,eAAe,EAAE,cArBX;AAsBNC,MAAAA,GAAG,EAAE,QAtBC;AAuBNC,MAAAA,IAAI,EAAE,QAvBA;AAwBNC,MAAAA,OAAO,EAAE,OAxBH;AAyBNC,MAAAA,SAAS,EAAE;AAzBL,KAD6B;;AAAA,SAoErCC,YApEqC,GAoEtBC,IAAI,IAAIC,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQC,KAAK,CAACE,MAAN,CAAaxC;AAAvB,OAAd;AACD,KAtEoC;;AAAA,SAyErCyC,aAzEqC,GAyErBJ,IAAI,IAAIC,KAAK,IAAI;AAC/B,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQC,KAAK,CAACE,MAAN,CAAalC;AAAvB,OAAd;AACD,KA3EoC;;AAAA,SA8ErCoC,aA9EqC,GA8ErBL,IAAI,IAAIC,KAAK,IAAI;AAC/B,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQC,KAAK,CAACE,MAAN,CAAaxC;AAAvB,OAAd;AACD,KAhFoC;;AAAA,SAkFrC2C,aAlFqC,GAkFrB,CAACL,KAAD,EAAQhB,QAAR,KAAqB;AACnC,WAAKiB,QAAL,CAAc;AAAEjB,QAAAA;AAAF,OAAd;AACD,KApFoC;AAAA;;AA6BrCsB,EAAAA,iBAAiB,GAAG;AAClBrE,IAAAA,KAAK,CACFsE,GADH,CACO,qCADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,WAAKX,QAAL,CAAc;AACZY,QAAAA,aAAa,EAAEJ,QAAQ,CAACG;AADZ,OAAd;AAGD,KARH,EASGJ,IATH,CASQM,SAAS,IAAI;AACjB,aAAO7E,KAAK,CAACsE,GAAN,CAAU,kCAAV,EAA8CC,IAA9C,CAAmDM,SAAS,IAAI;AACrEJ,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYG,SAAS,CAACF,IAAtB;AACA,aAAKX,QAAL,CAAc;AACZc,UAAAA,UAAU,EAAED,SAAS,CAACF;AADV,SAAd;AAGD,OANM,CAAP;AAOD,KAjBH,EAkBGI,KAlBH,CAkBS,UAASC,KAAT,EAAgB;AACrBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,KApBH;;AAsBA,QAAI,CAAC,KAAK5C,KAAL,CAAW6C,aAAhB,EAA+B;AAC7B,UAAIC,QAAQ,GAAGC,WAAW,CAAC,KAAKC,aAAN,EAAqB,IAArB,CAA1B;AACA,WAAKpB,QAAL,CAAc;AAAEiB,QAAAA,aAAa,EAAEC;AAAjB,OAAd;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;AACF,GAzDoC,CA2DrC;;;AACAW,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKjD,KAAL,CAAW6C,aAAf,EAA8B;AAC5BK,MAAAA,aAAa,CAAC,KAAKlD,KAAL,CAAW6C,aAAZ,CAAb;AACA,WAAKjB,QAAL,CAAc;AAAEiB,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF;;AAoBDa,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAAA,UAECzC,QAFD,GAEc,KAAKX,KAFnB,CAECW,QAFD;AAIP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAiC,MAAA,UAAU,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAKE,oBAAC;AAAM;AAAP;AAAsC,MAAA,SAAS,EAAE,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AACE,MAAA,OAAO,EACL,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWC,QADtB;AAEE,QAAA,QAAQ,EAAE,KAAKwB,YAAL,CAAkB,UAAlB,CAFZ;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,UAAU,EAAC,yBAJb;AAKE,QAAA,SAAS,EAAE2B,OAAO,CAAC9E,IALrB;AAME,QAAA,OAAO,EAAE;AACPgF,UAAAA,UAAU,EAAEF,OAAO,CAACpE,eADb;AAEPK,UAAAA,OAAO,EAAE+D,OAAO,CAAClE,YAFV;AAGPqE,UAAAA,GAAG,EAAEH,OAAO,CAACnE;AAHN,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAeE,MAAA,KAAK,EAAC,QAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAsBE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,GAAG,MAAnB;AAAoB,MAAA,OAAO,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,wBADL;AAEE,MAAA,MAAM,MAFR;AAGE,MAAA,KAAK,EAAC,aAHR;AAIE,MAAA,OAAO,EAAC,UAJV;AAKE,MAAA,SAAS,EAAEmE,OAAO,CAACjE,SALrB;AAME,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWE,MANpB;AAOE,MAAA,QAAQ,EAAE,KAAK4B,aAAL,CAAmB,QAAnB,CAPZ;AAQE,MAAA,WAAW,EAAE;AACX0B,QAAAA,SAAS,EAAE;AACTC,UAAAA,SAAS,EAAEL,OAAO,CAAChE;AADV;AADA,OARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcGM,OAAO,CAACgE,GAAR,CAAYC,MAAM,IACjB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,MAAM,CAAChE,KAAtB;AAA6B,MAAA,KAAK,EAAEgE,MAAM,CAAChE,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGgE,MAAM,CAAC/D,KADV,CADD,CAdH,CADF,EAsBE,oBAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AACE,MAAA,OAAO,EACL,oBAAC,QAAD;AACE,QAAA,OAAO,EAAE,KAAKI,KAAL,CAAWQ,YADtB;AAEE,QAAA,QAAQ,EAAE,KAAKiB,YAAL,CAAkB,cAAlB,CAFZ;AAGE,QAAA,KAAK,EAAC,cAHR;AAIE,QAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AASE,MAAA,KAAK,EAAC,eATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE,oBAAC,gBAAD;AACE,MAAA,OAAO,EACL,oBAAC,QAAD;AACE,QAAA,OAAO,EAAE,KAAKzB,KAAL,CAAWS,YADtB;AAEE,QAAA,QAAQ,EAAE,KAAKgB,YAAL,CAAkB,cAAlB,CAFZ;AAGE,QAAA,KAAK,EAAC,cAHR;AAIE,QAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AASE,MAAA,KAAK,EAAC,WATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAuBE,oBAAC,gBAAD;AACE,MAAA,OAAO,EACL,oBAAC,QAAD;AACE,QAAA,OAAO,EAAE,KAAKzB,KAAL,CAAWU,aADtB;AAEE,QAAA,QAAQ,EAAE,KAAKe,YAAL,CAAkB,eAAlB,CAFZ;AAGE,QAAA,KAAK,EAAC,eAHR;AAIE,QAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AASE,MAAA,KAAK,EAAC,QATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CAtBF,CAtBF,CALF,EAuFE,oBAAC;AAAO;AAAR;AAAwC,MAAA,QAAQ,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEd,QAAb;AAAuB,MAAA,QAAQ,EAAE,KAAKqB,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,yBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CAvFF,EAiGGrB,QAAQ,KAAK,CAAb,IACC;AACE;AAAoC,MAAA,UAAU,MADhD;AAEE,MAAA,YAAY,EAAC,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEyC,OAAO,CAACrF,IAA1B;AAAgC,MAAA,SAAS,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAiC,MAAA,UAAU,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,uBADL;AAEE,MAAA,MAAM,MAFR;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,OAAO,EAAC,UAJV;AAKE,MAAA,SAAS,EAAEqF,OAAO,CAACjE,SALrB;AAME,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWe,KANpB;AAOE,MAAA,QAAQ,EAAE,KAAKU,YAAL,CAAkB,OAAlB,CAPZ;AAQE,MAAA,WAAW,EAAE;AACX+B,QAAAA,SAAS,EAAE;AACTC,UAAAA,SAAS,EAAEL,OAAO,CAAChE;AADV;AADA,OARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcGS,MAAM,CAAC6D,GAAP,CAAWC,MAAM,IAChB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,MAAM,CAAChE,KAAtB;AAA6B,MAAA,KAAK,EAAEgE,MAAM,CAAChE,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGgE,MAAM,CAAC/D,KADV,CADD,CAdH,CADF,CADF,EAwBE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,SAAS,EAAEwD,OAAO,CAACjE,SAJrB;AAKE,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWkB,KALpB;AAME,MAAA,QAAQ,EAAE,KAAKO,YAAL,CAAkB,OAAlB,CANZ;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAxBF,EAoCE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,EAAE,EAAC,oBAFL;AAGE,MAAA,KAAK,EAAC,YAHR;AAIE,MAAA,OAAO,EAAC,UAJV;AAKE,MAAA,SAAS,EAAE2B,OAAO,CAACjE,SALrB;AAME,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWY,SANpB;AAOE,MAAA,QAAQ,EAAE,KAAKa,YAAL,CAAkB,WAAlB,CAPZ;AAQE,MAAA,MAAM,EAAC,QART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CApCF,EAiDE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,KAAK,EAAC,OAJR;AAKE,MAAA,SAAS,EAAE2B,OAAO,CAACjE,SALrB;AAME,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWc,KANpB;AAOE,MAAA,QAAQ,EAAE,KAAKW,YAAL,CAAkB,OAAlB,CAPZ;AAQE,MAAA,MAAM,EAAC,QART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjDF,EA8DE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,EAAE,EAAC,uBAFL;AAGE,MAAA,KAAK,EAAC,WAHR;AAIE,MAAA,OAAO,EAAC,UAJV;AAKE,MAAA,SAAS,EAAE2B,OAAO,CAACjE,SALrB;AAME,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWa,QANpB;AAOE,MAAA,QAAQ,EAAE,KAAKY,YAAL,CAAkB,UAAlB,CAPZ;AAQE,MAAA,MAAM,EAAC,QART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA9DF,EA2EE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,kBADL;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,SAAS,EAAE2B,OAAO,CAACjE,SAJrB;AAKE,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWmB,OALpB;AAME,MAAA,QAAQ,EAAE,KAAKM,YAAL,CAAkB,SAAlB,CANZ;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA3EF,EAuFE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,EAAE,EAAC,yBAFL;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,KAAK,EAAC,UAJR;AAKE,MAAA,SAAS,EAAE2B,OAAO,CAACjE,SALrB;AAME,MAAA,IAAI,EAAC,UANP;AAOE,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWgB,eAPpB,CAQE;AARF;AASE,MAAA,MAAM,EAAC,QATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAvFF,EAqGE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,SAAS,EAAEoC,OAAO,CAACjE,SAJrB;AAKE,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWsB,IALpB;AAME,MAAA,QAAQ,EAAE,KAAKG,YAAL,CAAkB,MAAlB,CANZ;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CArGF,EAiHE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,EAAE,EAAC,gCAFL;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,KAAK,EAAC,kBAJR;AAKE,MAAA,SAAS,EAAE2B,OAAO,CAACjE,SALrB;AAME,MAAA,IAAI,EAAC,UANP;AAOE,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWiB,eAPpB,CAQE;AARF;AASE,MAAA,MAAM,EAAC,QATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjHF,EA+HE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,kBADL;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,SAAS,EAAEmC,OAAO,CAACjE,SAJrB;AAKE,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWuB,OALpB;AAME,MAAA,QAAQ,EAAE,KAAKE,YAAL,CAAkB,SAAlB,CANZ;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA/HF,EA2IE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,YAHR;AAIE,MAAA,SAAS,EAAE2B,OAAO,CAACjE,SAJrB;AAKE,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWqB,GALpB;AAME,MAAA,QAAQ,EAAE,KAAKI,YAAL,CAAkB,KAAlB,CANZ;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA3IF,EAsJE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,2BADL;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,kBAHR;AAIE,MAAA,SAAS,EAAE2B,OAAO,CAACjE,SAJrB;AAKE,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWoB,eALpB;AAME,MAAA,QAAQ,EAAE,KAAKK,YAAL,CAAkB,iBAAlB,CANZ;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAtJF,EAkKE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,qBADL;AAEE,MAAA,KAAK,EAAC,kBAFR;AAGE,MAAA,KAAK,EAAE;AAAE/C,QAAAA,MAAM,EAAE;AAAV,OAHT;AAIE,MAAA,SAAS,EAAE0E,OAAO,CAACQ,UAJrB;AAKE,MAAA,WAAW,EAAC,+BALd;AAME,MAAA,SAAS,MANX;AAOE,MAAA,SAAS,MAPX;AAQE,MAAA,MAAM,EAAC,QART;AASE,MAAA,eAAe,EAAE;AACfC,QAAAA,MAAM,EAAE;AADO,OATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlKF,CADF,EAiLE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,KAA1B;AAAgC,MAAA,OAAO,EAAC,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAET,OAAO,CAACU,UADrB;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,OAAO,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAjLF,CAJF,CAlGJ,EAmSGnD,QAAQ,KAAK,CAAb,IAAkB,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnSrB,EAoSGA,QAAQ,KAAK,CAAb,IAAkB,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApSrB,EAqSGA,QAAQ,KAAK,CAAb,IAAkB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBArSrB,EAsSGA,QAAQ,KAAK,CAAb,IAAkB,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtSrB,EAuSGA,QAAQ,KAAK,CAAb,IAAkB,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvSrB,EAySGA,QAAQ,KAAK,CAAb,IAAkB,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzSrB,CADF,CADF;AA+SD;;AAzYoC;;AA4YvCb,QAAQ,CAACiE,SAAT,GAAqB;AACnBX,EAAAA,OAAO,EAAEpH,SAAS,CAACgI,MAAV,CAAiBC;AADP,CAArB;AAIA,eAAehI,UAAU,CAAC4B,MAAD,CAAV,CAAmBiC,QAAnB,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport green from \"@material-ui/core/colors/green\";\nimport red from \"@material-ui/core/colors/red\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport AssignedClientsTable from \"../Tables/assignedClientsTable\";\nimport TeamMemFilesTable from \"../Tables/teamMemFilesTable\";\nimport AssignedClientsActions from \"../Actions/asssignedClientsActions\";\nimport TeamMemberInfo from \"../teamMember/teamMemberInfo\";\nimport MemberUploadAction from \"../Actions/memberUploadAction\";\nimport AdminPrivliges from \"../teamMember/adminPrivliges\";\nimport TherapistPrivliges from \"../teamMember/therapistPrivliges\";\nimport MemberAvatar from \"../teamMember/memberAvatarTest\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  root: {\n    //paddingTop: theme.spacing.unit * 1,\n    // paddingBottom: theme.spacing.unit * 1,\n    // paddingLeft: theme.spacing.unit,\n    //marginTop: theme.spacing.unit * 15,\n    //marginLeft: theme.spacing.unit * 22,\n    //marginRight: theme.spacing.unit * 22\n    align: \"center\",\n    //width: \"66%\",\n    height: \"130\"\n  },\n\n  toggle: {\n    paddingRight: theme.spacing.unit * 30\n  },\n\n  marg: {\n    marginLeft: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  },\n\n  purpleAvatar: {\n    margin: 10,\n    color: \"#fff\",\n    backgroundColor: deepPurple[500],\n    width: 100,\n    height: 100,\n    fontSize: 40,\n    marginBottom: theme.spacing.unit * -28,\n    marginRight: theme.spacing.unit * 18\n  },\n\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    width: 300\n  },\n  menu: {\n    width: 200\n  },\n\n  checked: {},\n\n  root2: {\n    //flexGrow: 1,\n    //backgroundColor: theme.palette.background.paper,\n    marginLeft: theme.spacing.unit * 22,\n    marginRight: theme.spacing.unit * 22,\n    //marginTop: theme.spacing.unit * 22,\n    width: \"66%\",\n    borderRadius: theme.shape.borderRadius\n  },\n  infoRoot: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nconst members = [\n  {\n    value: \"Jane Doe\",\n    label: \"Jane Doe\"\n  },\n\n  {\n    value: \"Hermione Granger\",\n    label: \"Hermione Granger\"\n  },\n  {\n    value: \"Harry Potter\",\n    label: \"Harry Potter\"\n  }\n];\n\nconst titles = [\n  {\n    value: \"\",\n    label: \"\"\n  },\n\n  {\n    value: \"Dr.\",\n    label: \"Dr.\"\n  },\n\n  {\n    value: \"Miss\",\n    label: \"Miss\"\n  },\n\n  {\n    value: \"Mr.\",\n    label: \"Mr.\"\n  },\n  {\n    value: \"Mrs.\",\n    label: \"Mrs.\"\n  },\n  {\n    value: \"Ms.\",\n    label: \"Ms.\"\n  },\n  {\n    value: \"Mx.\",\n    label: \"Mx.\"\n  }\n];\n\nclass TopPanel extends React.Component {\n  state = {\n    checkedA: true,\n    member: \"Harry Potter\",\n    open: false,\n    client: \"\",\n    cost: \"\",\n    length: \"\",\n    type: \"\",\n    checkedAdmin: true,\n    checkedThera: true,\n    checkedIntern: false,\n    tabValue: 0,\n    //client info\n    firstName: \"Harry\",\n    lastName: \"Potter\",\n    email: \"harry@hogwarts.com\",\n    title: \"Mr.\",\n    currentPassword: \"test123\",\n    confirmPassword: \"test123\",\n    phone: \"123-456-1111\",\n    address: \"713 Hogwarts Lane\",\n    primaryLocation: \"Diagon Alley\",\n    npi: \"731890\",\n    city: \"London\",\n    zipCode: \"77777\",\n    multiline: \"Controlled\"\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/gettherapists\")\n      .then(response => {\n        console.log(\"Got therapistdata data!\");\n        console.log(response.data);\n        this.setState({\n          therapistData: response.data\n        });\n      })\n      .then(response2 => {\n        return axios.get(\"http://localhost:5000/allclients\").then(response2 => {\n          console.log(\"Got client data!\");\n          console.log(response2.data);\n          this.setState({\n            clientData: response2.data\n          });\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  // kills a process everytime we are done using it\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  /* change of team member dropdown */\n  handleChange2 = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  // change of check boxes\n  handleChange3 = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  handleChange4 = (event, tabValue) => {\n    this.setState({ tabValue });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { tabValue } = this.state;\n\n    return (\n      <div>\n        <Container maxWidth=\"lg\">\n          {/* Avatar */}\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <MemberAvatar />\n          </Grid>\n          <Paper /* className={classes.root} */ elevation={1}>\n            <FormGroup row>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={this.state.checkedA}\n                    onChange={this.handleChange(\"checkedA\")}\n                    value=\"checkedA\"\n                    marginLeft=\"theme.spacing.unit * 20\"\n                    className={classes.marg}\n                    classes={{\n                      switchBase: classes.colorSwitchBase,\n                      checked: classes.colorChecked,\n                      bar: classes.colorBar\n                    }}\n                  />\n                }\n                label=\"Active\"\n              />\n            </FormGroup>\n\n            {/* member drop down */}\n            <Grid container row justify=\"space-between\">\n              <TextField\n                id=\"standard-select-member\"\n                select\n                label=\"Team Member\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.member}\n                onChange={this.handleChange2(\"member\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {members.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n\n              <FormGroup row>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state.checkedAdmin}\n                      onChange={this.handleChange(\"checkedAdmin\")}\n                      value=\"checkedAdmin\"\n                      color=\"default\"\n                    />\n                  }\n                  label=\"Administrator\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state.checkedThera}\n                      onChange={this.handleChange(\"checkedThera\")}\n                      value=\"checkedThera\"\n                      color=\"default\"\n                    />\n                  }\n                  label=\"Therapist\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state.checkedIntern}\n                      onChange={this.handleChange(\"checkedIntern\")}\n                      value=\"checkedIntern\"\n                      color=\"default\"\n                    />\n                  }\n                  label=\"Intern\"\n                />\n              </FormGroup>\n            </Grid>\n          </Paper>\n\n          <AppBar /* className={classes.root2} */ position=\"static\">\n            <Tabs value={tabValue} onChange={this.handleChange4}>\n              <Tab label=\"Team Member Information\" />\n              <Tab label=\"Assigned Clients\" />\n              <Tab label=\"Message History\" />\n              <Tab label=\"Files\" />\n              <Tab label=\"Privliges\" />\n            </Tabs>\n          </AppBar>\n\n          {tabValue === 0 && (\n            <form\n              /* className={classes.container} */ noValidate\n              autoComplete=\"off\"\n            >\n              <Paper className={classes.root} elevation={1}>\n                <Grid container justify=\"center\" alignItems=\"center\">\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-select-title\"\n                      select\n                      label=\"Title\"\n                      variant=\"outlined\"\n                      className={classes.textField}\n                      value={this.state.title}\n                      onChange={this.handleChange(\"title\")}\n                      SelectProps={{\n                        MenuProps: {\n                          className: classes.menu\n                        }\n                      }}\n                    >\n                      {titles.map(option => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-phone\"\n                      variant=\"outlined\"\n                      label=\"Phone Number\"\n                      className={classes.textField}\n                      value={this.state.phone}\n                      onChange={this.handleChange(\"phone\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-firstName\"\n                      label=\"First Name\"\n                      variant=\"outlined\"\n                      className={classes.textField}\n                      value={this.state.firstName}\n                      onChange={this.handleChange(\"firstName\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-email\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      className={classes.textField}\n                      value={this.state.email}\n                      onChange={this.handleChange(\"email\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-lastNamename\"\n                      label=\"Last Name\"\n                      variant=\"outlined\"\n                      className={classes.textField}\n                      value={this.state.lastName}\n                      onChange={this.handleChange(\"lastName\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-address\"\n                      variant=\"outlined\"\n                      label=\"Address\"\n                      className={classes.textField}\n                      value={this.state.address}\n                      onChange={this.handleChange(\"address\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-password-input\"\n                      variant=\"outlined\"\n                      label=\"Password\"\n                      className={classes.textField}\n                      type=\"password\"\n                      value={this.state.currentPassword}\n                      //autoComplete=\"current-password\"\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-city-\"\n                      variant=\"outlined\"\n                      label=\"City\"\n                      className={classes.textField}\n                      value={this.state.city}\n                      onChange={this.handleChange(\"city\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-confirmPassword-input\"\n                      variant=\"outlined\"\n                      label=\"Confirm Password\"\n                      className={classes.textField}\n                      type=\"password\"\n                      value={this.state.confirmPassword}\n                      //autoComplete=\"current-password\"\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-zipCode\"\n                      variant=\"outlined\"\n                      label=\"Zip Code\"\n                      className={classes.textField}\n                      value={this.state.zipCode}\n                      onChange={this.handleChange(\"zipCode\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-npi\"\n                      variant=\"outlined\"\n                      label=\"NPI Number\"\n                      className={classes.textField}\n                      value={this.state.npi}\n                      onChange={this.handleChange(\"npi\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-primary-location\"\n                      variant=\"outlined\"\n                      label=\"Primary Location\"\n                      className={classes.textField}\n                      value={this.state.primaryLocation}\n                      onChange={this.handleChange(\"primaryLocation\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <TextField\n                    id=\"standard-full-width\"\n                    label=\"Additional Notes\"\n                    style={{ margin: 8 }}\n                    className={classes.textField2}\n                    placeholder=\"Add any additional notes here\"\n                    fullWidth\n                    multiline\n                    margin=\"normal\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                  />\n                </Grid>\n                <Grid container direction=\"row\" justify=\"flex-end\">\n                  <Button\n                    className={classes.saveButton}\n                    size=\"large\"\n                    variant=\"contained\"\n                  >\n                    Save\n                  </Button>\n                </Grid>\n              </Paper>\n            </form>\n          )}\n          {tabValue === 1 && <AssignedClientsActions />}\n          {tabValue === 1 && <AssignedClientsTable />}\n          {tabValue === 2 && <Paper>Message History</Paper>}\n          {tabValue === 3 && <MemberUploadAction />}\n          {tabValue === 3 && <TeamMemFilesTable />}\n          {/* {tabValue === 4 && <AdminPrivliges />} */}\n          {tabValue === 4 && <TherapistPrivliges />}\n        </Container>\n      </div>\n    );\n  }\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TopPanel);\n"]},"metadata":{},"sourceType":"module"}