{"ast":null,"code":"import _slicedToArray from \"/Users/kenneth/repos2/mtsaas/mtrepo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/noteTemplatesTable.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Slide from \"@material-ui/core/Slide\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SOAPTemplate from \"./noteTemplateSOAP\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: lightBlue[400],\n    color: theme.palette.common.white,\n    fontSize: 14\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow); // not needed for new file\n\nfunction createData(template, visibleToTherapist, dateCreated) {\n  return {\n    template,\n    visibleToTherapist,\n    dateCreated\n  };\n}\n\nconst rows = [createData(\"SOAP Note\", \"Yes\", \"1/2/17\"), createData(\"Narrative\", \"Yes\", \"1/2/17\"), createData(\"Rating Scale +\", \"Yes\", \"1/2/17\"), createData(\"Template 4\", \"No\", \"1/2/17\"), createData(\"Template 5\", \"No\", \"1/2/17\")];\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headRows = [{\n  id: \"template\",\n  label: \"Template\"\n}, {\n  id: \"visibleToTherapist\",\n  label: \"Visible to Therpaist\"\n}, {\n  id: \"dateCreated\",\n  label: \"Date Created\"\n}];\n\nfunction EnhancedTableHead(props) {\n  const onSelectAllClick = props.onSelectAllClick,\n        order = props.order,\n        orderBy = props.orderBy,\n        numSelected = props.numSelected,\n        rowCount = props.rowCount,\n        onRequestSort = props.onRequestSort;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(StyledTableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      \"aria-label\": \"Select all desserts\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), headRows.map(row => React.createElement(StyledTableCell, {\n    key: row.id,\n    align: \"left\" //align={row.numeric ? 'right' : 'left'}\n    // padding={'default'}\n    ,\n    sortDirection: orderBy === row.id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: orderBy === row.id,\n    direction: order,\n    onClick: createSortHandler(row.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, row.label)))));\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  spacer: {\n    flex: \"1 1 100%\"\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: \"0 0 auto\"\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles(); //const { numSelected } = props;\n\n  return React.createElement(\"div\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  });\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  // table positioning\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  state: {\n    open: false,\n    openV: false\n  },\n  appBar: {\n    position: \"relative\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1) //width: 400\n\n  },\n  textField2: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 198\n  },\n  textField3: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"60%\"\n  },\n  root: {\n    marginTop: theme.spacing(10)\n  },\n  letter: {\n    marginLeft: theme.spacing(10),\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(5)\n  }\n}));\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }));\n});\nexport default function EnhancedTable() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        order = _React$useState2[0],\n        setOrder = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        orderBy = _React$useState4[0],\n        setOrderBy = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selected = _React$useState6[0],\n        setSelected = _React$useState6[1];\n\n  const _React$useState7 = React.useState(0),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        page = _React$useState8[0],\n        setPage = _React$useState8[1]; // const [dense, setDense] = React.useState(false);\n\n\n  const _React$useState9 = React.useState(5),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        rowsPerPage = _React$useState10[0],\n        setRowsPerPage = _React$useState10[1];\n\n  const _React$useState11 = React.useState(false),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        open = _React$useState12[0],\n        setOpen = _React$useState12[1];\n\n  function handleRequestSort(event, property) {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  }\n\n  function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.template);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  }\n\n  function handleClick(event, template) {\n    const selectedIndex = selected.indexOf(template);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, template);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  const isSelected = template => selected.indexOf(template) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(EnhancedTableToolbar, {\n    numSelected: selected.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\" //size={dense ? 'small' : 'medium'}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, React.createElement(EnhancedTableHead, {\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, stableSort(rows, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.template);\n    const labelId = \"enhanced-table-checkbox-\".concat(index);\n    return React.createElement(StyledTableRow, {\n      hover: true,\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.template,\n      selected: isItemSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(StyledTableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: isItemSelected,\n      inputProps: {\n        \"aria-labelledby\": labelId\n      },\n      onClick: event => handleClick(event, row.template),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    })), React.createElement(TableCell, {\n      onClick: handleClickOpen,\n      align: \"left\",\n      id: labelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, row.template), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, row.visibleToTherapist), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, row.dateCreated));\n  }), emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: 49 * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  }))))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    backIconButtonProps: {\n      \"aria-label\": \"Previous Page\"\n    },\n    nextIconButtonProps: {\n      \"aria-label\": \"Next Page\"\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  })), React.createElement(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: handleClose,\n    \"aria-label\": \"Close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396\n    },\n    __self: this\n  }, \"Note Template Builder\"), React.createElement(Button, {\n    color: \"inherit\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }, \"Save\"))), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }, \"S\"), React.createElement(TextField, {\n    id: \"standard-full-width\" //label=\"S\"\n    //style={{ margin: 8 }}\n    ,\n    className: classes.textField3 //placeholder=\"Add notes here\"\n    //fullWidth\n    ,\n    variant: \"outlined\",\n    multiline: true,\n    rows: \"2\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425\n    },\n    __self: this\n  }, \"O\"), React.createElement(TextField, {\n    id: \"standard-full-width\" //label=\"O\"\n    //style={{ margin: 8 }}\n    ,\n    className: classes.textField3 //placeholder=\"Add notes here\"\n    //fullWidth\n    ,\n    variant: \"outlined\",\n    multiline: true,\n    rows: \"2\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445\n    },\n    __self: this\n  }, \"A\"), React.createElement(TextField, {\n    id: \"standard-full-width\" //label=\"A\"\n    //style={{ margin: 8 }}\n    ,\n    className: classes.textField3 //placeholder=\"Add notes here\"\n    //fullWidth\n    ,\n    variant: \"outlined\",\n    multiline: true,\n    rows: \"2\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465\n    },\n    __self: this\n  }, \"P\"), React.createElement(TextField, {\n    id: \"standard-full-width\" //label=\"P\"\n    //style={{ margin: 8 }}\n    ,\n    className: classes.textField3 //placeholder=\"Add notes here\"\n    //fullWidth\n    ,\n    variant: \"outlined\",\n    multiline: true,\n    rows: \"2\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/noteTemplatesTable.js"],"names":["React","PropTypes","makeStyles","withStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","lightBlue","AppBar","Dialog","TextField","Slide","CloseIcon","Button","Grid","SOAPTemplate","StyledTableCell","theme","head","backgroundColor","color","palette","common","white","fontSize","body","StyledTableRow","root","background","default","createData","template","visibleToTherapist","dateCreated","rows","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","headRows","id","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","row","propTypes","number","isRequired","func","string","useToolbarStyles","paddingLeft","spacing","paddingRight","spacer","flex","actions","text","secondary","title","EnhancedTableToolbar","classes","useStyles","width","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","state","open","openV","appBar","position","marginLeft","textField","marginRight","textField2","textField3","letter","Transition","forwardRef","ref","EnhancedTable","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","setOpen","handleRequestSort","isDesc","handleSelectAllClick","target","checked","newSelecteds","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","value","handleClickOpen","handleClose","isSelected","emptyRows","Math","min","isItemSelected","labelId","height","shrink"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Slide from \"@material-ui/core/Slide\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SOAPTemplate from \"./noteTemplateSOAP\";\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: lightBlue[400],\n    color: theme.palette.common.white,\n    fontSize: 14\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow);\n\n// not needed for new file\nfunction createData(template, visibleToTherapist, dateCreated) {\n  return { template, visibleToTherapist, dateCreated };\n}\n\nconst rows = [\n  createData(\"SOAP Note\", \"Yes\", \"1/2/17\"),\n  createData(\"Narrative\", \"Yes\", \"1/2/17\"),\n  createData(\"Rating Scale +\", \"Yes\", \"1/2/17\"),\n  createData(\"Template 4\", \"No\", \"1/2/17\"),\n  createData(\"Template 5\", \"No\", \"1/2/17\")\n];\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headRows = [\n  { id: \"template\", label: \"Template\" },\n  { id: \"visibleToTherapist\", label: \"Visible to Therpaist\" },\n  { id: \"dateCreated\", label: \"Date Created\" }\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <StyledTableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"Select all desserts\" }}\n          />\n        </StyledTableCell>\n        {headRows.map(row => (\n          <StyledTableCell\n            key={row.id}\n            align=\"left\"\n            //align={row.numeric ? 'right' : 'left'}\n            // padding={'default'}\n            sortDirection={orderBy === row.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === row.id}\n              direction={order}\n              onClick={createSortHandler(row.id)}\n            >\n              {row.label}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n\n  spacer: {\n    flex: \"1 1 100%\"\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: \"0 0 auto\"\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  //const { numSelected } = props;\n\n  return <div className={classes.spacer} />;\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nconst useStyles = makeStyles(theme => ({\n  // table positioning\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  state: {\n    open: false,\n    openV: false\n  },\n  appBar: {\n    position: \"relative\"\n  },\n\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n    //width: 400\n  },\n  textField2: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 198\n  },\n  textField3: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"60%\"\n  },\n\n  root: {\n    marginTop: theme.spacing(10)\n  },\n  letter: {\n    marginLeft: theme.spacing(10),\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(5)\n  }\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"\");\n  const [orderBy, setOrderBy] = React.useState(\"\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  // const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [open, setOpen] = React.useState(false);\n\n  function handleRequestSort(event, property) {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  }\n\n  function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.template);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  }\n\n  function handleClick(event, template) {\n    const selectedIndex = selected.indexOf(template);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, template);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  const isSelected = template => selected.indexOf(template) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n\n            //size={dense ? 'small' : 'medium'}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.template);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <StyledTableRow\n                      hover\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.template}\n                      selected={isItemSelected}\n                    >\n                      <StyledTableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                          onClick={event => handleClick(event, row.template)}\n                        />\n                      </StyledTableCell>\n                      <TableCell\n                        onClick={handleClickOpen}\n                        align=\"left\"\n                        id={labelId}\n                      >\n                        {row.template}\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        {row.visibleToTherapist}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.dateCreated}</TableCell>\n                    </StyledTableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            \"aria-label\": \"Previous Page\"\n          }}\n          nextIconButtonProps={{\n            \"aria-label\": \"Next Page\"\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Note Template Builder\n            </Typography>\n            <Button color=\"inherit\" onClick={handleClose}>\n              Save\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Grid container direction=\"row\">\n          <Typography variant=\"h5\" className={classes.letter}>\n            S\n          </Typography>\n          <TextField\n            id=\"standard-full-width\"\n            //label=\"S\"\n            //style={{ margin: 8 }}\n            className={classes.textField3}\n            //placeholder=\"Add notes here\"\n            //fullWidth\n            variant=\"outlined\"\n            multiline\n            rows=\"2\"\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true\n            }}\n          />\n        </Grid>\n        <Grid container direction=\"row\">\n          <Typography variant=\"h5\" className={classes.letter}>\n            O\n          </Typography>\n          <TextField\n            id=\"standard-full-width\"\n            //label=\"O\"\n            //style={{ margin: 8 }}\n            className={classes.textField3}\n            //placeholder=\"Add notes here\"\n            //fullWidth\n            variant=\"outlined\"\n            multiline\n            rows=\"2\"\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true\n            }}\n          />\n        </Grid>\n        <Grid container direction=\"row\">\n          <Typography variant=\"h5\" className={classes.letter}>\n            A\n          </Typography>\n          <TextField\n            id=\"standard-full-width\"\n            //label=\"A\"\n            //style={{ margin: 8 }}\n            className={classes.textField3}\n            //placeholder=\"Add notes here\"\n            //fullWidth\n            variant=\"outlined\"\n            multiline\n            rows=\"2\"\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true\n            }}\n          />\n        </Grid>\n        <Grid container direction=\"row\">\n          <Typography variant=\"h5\" className={classes.letter}>\n            P\n          </Typography>\n          <TextField\n            id=\"standard-full-width\"\n            //label=\"P\"\n            //style={{ margin: 8 }}\n            className={classes.textField3}\n            //placeholder=\"Add notes here\"\n            //fullWidth\n            variant=\"outlined\"\n            multiline\n            rows=\"2\"\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true\n            }}\n          />\n        </Grid>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}