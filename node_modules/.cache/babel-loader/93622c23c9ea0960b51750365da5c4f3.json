{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/newTeamMemberConsolidate.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport red from \"@material-ui/core/colors/red\";\nimport green from \"@material-ui/core/colors/green\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  marg: {\n    marginLeft: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  },\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  saveButton: {\n    marginRight: theme.spacing(2)\n  },\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 850\n  },\n  menu2: {\n    width: 200\n  },\n  button: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  title: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: 20\n  }\n});\n\nconst titles = [{\n  value: \"\",\n  label: \"\"\n}, {\n  value: \"Dr.\",\n  label: \"Dr.\"\n}, {\n  value: \"Miss\",\n  label: \"Miss\"\n}, {\n  value: \"Mr.\",\n  label: \"Mr.\"\n}, {\n  value: \"Mrs.\",\n  label: \"Mrs.\"\n}, {\n  value: \"Ms.\",\n  label: \"Ms.\"\n}, {\n  value: \"Mx.\",\n  label: \"Mx.\"\n}];\n\nclass TopPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkedActive: false,\n      checkedAdmin: false,\n      checkedThera: false,\n      checkedIntern: false,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      title: \"\",\n      currentPassword: \"\",\n      confirmPassword: \"\",\n      phone: \"\",\n      address: \"\",\n      primaryLocation: \"\",\n      npi: \"\",\n      city: \"\",\n      zipCode: \"\",\n      multiline: \"Controlled\",\n      clientData: []\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange2 = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange3 = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/members\").then(response => {\n      console.log(\"Got member data!\");\n      console.log(response.data);\n      this.setState({\n        memberData: response.data\n      });\n    }).then(response2 => {\n      return axios.get(\"http://localhost:5000/allclients\") // using response.data\n      .then(response2 => {\n        console.log(\"Got client data!\");\n        console.log(response2.data);\n        this.setState({\n          clientData: response2.data\n        });\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from team data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n    const obj = {\n      //title: this.state.title,\n      checkedActive: this.state.checkedActive,\n      checkedAdmin: this.state.checkedAdmin,\n      checkedThera: this.state.checkedThera,\n      checkedIntern: this.state.checkedIntern,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode\n    };\n    axios.post(\"http://localhost:5000/members/registermember\", obj).then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      checkedActive: this.state.checkedActive,\n      checkedAdmin: this.state.checkedAdmin,\n      checkedThera: this.state.checkedThera,\n      checkedIntern: this.state.checkedIntern,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(Container, {\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Client Information\"), React.createElement(Grid, {\n      container: true,\n      row: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.checkedActive,\n        onChange: this.handleChange3(\"checkedActive\"),\n        value: \"checkedActive\",\n        marginLeft: \"theme.spacing.unit * 20\",\n        className: classes.marg,\n        classes: {\n          switchBase: classes.colorSwitchBase,\n          checked: classes.colorChecked,\n          bar: classes.colorBar\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }),\n      label: \"Active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-title\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.title,\n      onChange: this.handleChange(\"title\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, option.label)))), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.phone,\n      onChange: this.handleChange(\"phone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-firstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.firstName,\n      onChange: this.handleChange(\"firstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.email,\n      onChange: this.handleChange(\"email\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.lastName,\n      onChange: this.handleChange(\"lastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-address\",\n      variant: \"outlined\",\n      label: \"Address\",\n      className: classes.textField,\n      value: this.state.address,\n      onChange: this.handleChange(\"address\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-password-input\",\n      variant: \"outlined\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.currentPassword,\n      onChange: this.handleChange(\"currentPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-city-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.city,\n      onChange: this.handleChange(\"city\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-confirmPassword-input\",\n      variant: \"outlined\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange(\"confirmPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-zipCode\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.zipCode,\n      onChange: this.handleChange(\"zipCode\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-npi\",\n      variant: \"outlined\",\n      label: \"NPI Number\",\n      className: classes.textField,\n      value: this.state.npi,\n      onChange: this.handleChange(\"npi\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-primary-location\",\n      variant: \"outlined\",\n      label: \"Primary Location\",\n      className: classes.textField,\n      value: this.state.primaryLocation,\n      onChange: this.handleChange(\"primaryLocation\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    })), React.createElement(TextField, {\n      id: \"standard-full-width\",\n      label: \"Additional Notes\",\n      style: {\n        margin: 8\n      },\n      className: classes.textField2,\n      placeholder: \"Add any additional notes here\",\n      fullWidth: true,\n      multiline: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      onClick: () => {\n        this.onSubmit(this.state.checkedActive, this.state.checkedAdmin, this.state.checkedThera, this.state.checkedIntern, this.state.firstName, this.state.lastName, this.state.email, this.state.title, this.state.currentPassword, this.state.confirmPassword, this.state.phone, this.state.address, this.state.primaryLocation, this.state.npi, this.state.city, this.state.zipCode); //this.reloadPage();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, \"Save\")), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, \"Clients\")), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }), \"Assign Client\")))));\n  }\n\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TopPanel);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/newTeamMemberConsolidate.js"],"names":["React","PropTypes","withStyles","Paper","Grid","MenuItem","TextField","Button","Container","FormGroup","FormControlLabel","Switch","Checkbox","red","green","Typography","AddIcon","axios","styles","theme","container","display","flexWrap","marg","marginLeft","spacing","unit","marginBottom","colorSwitchBase","color","backgroundColor","colorBar","colorChecked","textField","marginRight","width","menu","root","paddingTop","paddingBottom","saveButton","container2","textField2","menu2","button","title","align","marginTop","icon","fontSize","titles","value","label","TopPanel","Component","state","checkedActive","checkedAdmin","checkedThera","checkedIntern","firstName","lastName","email","currentPassword","confirmPassword","phone","address","primaryLocation","npi","city","zipCode","multiline","clientData","handleChange","name","event","setState","target","handleChange2","handleChange3","checked","componentDidMount","get","then","response","console","log","data","memberData","response2","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","onSubmit","obj","post","res","render","classes","props","switchBase","bar","MenuProps","className","map","option","margin","shrink","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport red from \"@material-ui/core/colors/red\";\nimport green from \"@material-ui/core/colors/green\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n\n  marg: {\n    marginLeft: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  },\n\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2\n  },\n\n  saveButton: {\n    marginRight: theme.spacing(2)\n  },\n\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 850\n  },\n\n  menu2: {\n    width: 200\n  },\n  button: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  title: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: 20\n  }\n});\n\nconst titles = [\n  {\n    value: \"\",\n    label: \"\"\n  },\n\n  {\n    value: \"Dr.\",\n    label: \"Dr.\"\n  },\n\n  {\n    value: \"Miss\",\n    label: \"Miss\"\n  },\n\n  {\n    value: \"Mr.\",\n    label: \"Mr.\"\n  },\n  {\n    value: \"Mrs.\",\n    label: \"Mrs.\"\n  },\n  {\n    value: \"Ms.\",\n    label: \"Ms.\"\n  },\n  {\n    value: \"Mx.\",\n    label: \"Mx.\"\n  }\n];\n\nclass TopPanel extends React.Component {\n  state = {\n    checkedActive: false,\n    checkedAdmin: false,\n    checkedThera: false,\n    checkedIntern: false,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    title: \"\",\n    currentPassword: \"\",\n    confirmPassword: \"\",\n    phone: \"\",\n    address: \"\",\n    primaryLocation: \"\",\n    npi: \"\",\n    city: \"\",\n    zipCode: \"\",\n    multiline: \"Controlled\",\n    clientData: []\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/members\")\n      .then(response => {\n        console.log(\"Got member data!\");\n        console.log(response.data);\n        this.setState({\n          memberData: response.data\n        });\n      })\n      .then(response2 => {\n        return axios\n          .get(\"http://localhost:5000/allclients\") // using response.data\n          .then(response2 => {\n            console.log(\"Got client data!\");\n            console.log(response2.data);\n            this.setState({\n              clientData: response2.data\n            });\n          });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from team data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n\n    const obj = {\n      //title: this.state.title,\n      checkedActive: this.state.checkedActive,\n      checkedAdmin: this.state.checkedAdmin,\n      checkedThera: this.state.checkedThera,\n      checkedIntern: this.state.checkedIntern,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode\n    };\n    axios\n      .post(\"http://localhost:5000/members/registermember\", obj)\n      .then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      checkedActive: this.state.checkedActive,\n      checkedAdmin: this.state.checkedAdmin,\n      checkedThera: this.state.checkedThera,\n      checkedIntern: this.state.checkedIntern,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode\n    });\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChange2 = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChange3 = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Container maxWidth=\"lg\">\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          <Paper className={classes.root} elevation={1}>\n            <Typography className={classes.title} align=\"center\" variant=\"h6\">\n              Client Information\n            </Typography>\n            <Grid container row justify=\"space-between\">\n              <FormGroup row>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.checkedActive}\n                      onChange={this.handleChange3(\"checkedActive\")}\n                      value=\"checkedActive\"\n                      marginLeft=\"theme.spacing.unit * 20\"\n                      className={classes.marg}\n                      classes={{\n                        switchBase: classes.colorSwitchBase,\n                        checked: classes.colorChecked,\n                        bar: classes.colorBar\n                      }}\n                    />\n                  }\n                  label=\"Active\"\n                />\n              </FormGroup>\n\n              {/*\n            <FormGroup row>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.checkedAdmin}\n                    onChange={this.handleChange3(\"checkedAdmin\")}\n                    value=\"checkedAdmin\"\n                    color=\"default\"\n                  />\n                }\n                label=\"Administrator\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.checkedThera}\n                    onChange={this.handleChange3(\"checkedThera\")}\n                    value=\"checkedThera\"\n                    color=\"default\"\n                  />\n                }\n                label=\"Therapist\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.checkedIntern}\n                    onChange={this.handleChange3(\"checkedIntern\")}\n                    value=\"checkedIntern\"\n                    color=\"default\"\n                  />\n                }\n                label=\"Intern\"\n              />\n            </FormGroup>\n            */}\n            </Grid>\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid direction=\"column\">\n                <TextField\n                  id=\"standard-select-title\"\n                  select\n                  label=\"Title\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.title}\n                  onChange={this.handleChange(\"title\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {titles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  id=\"standard-phone\"\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  className={classes.textField}\n                  value={this.state.phone}\n                  onChange={this.handleChange(\"phone\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  required\n                  id=\"standard-firstName\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.firstName}\n                  onChange={this.handleChange(\"firstName\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  required\n                  id=\"standard-email\"\n                  variant=\"outlined\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  value={this.state.email}\n                  onChange={this.handleChange(\"email\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  required\n                  id=\"standard-lastNamename\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.lastName}\n                  onChange={this.handleChange(\"lastName\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  id=\"standard-address\"\n                  variant=\"outlined\"\n                  label=\"Address\"\n                  className={classes.textField}\n                  value={this.state.address}\n                  onChange={this.handleChange(\"address\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  required\n                  id=\"standard-password-input\"\n                  variant=\"outlined\"\n                  label=\"Password\"\n                  className={classes.textField}\n                  type=\"password\"\n                  value={this.state.currentPassword}\n                  onChange={this.handleChange(\"currentPassword\")}\n                  //autoComplete=\"current-password\"\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  id=\"standard-city-\"\n                  variant=\"outlined\"\n                  label=\"City\"\n                  className={classes.textField}\n                  value={this.state.city}\n                  onChange={this.handleChange(\"city\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  required\n                  id=\"standard-confirmPassword-input\"\n                  variant=\"outlined\"\n                  label=\"Confirm Password\"\n                  className={classes.textField}\n                  type=\"password\"\n                  value={this.state.confirmPassword}\n                  onChange={this.handleChange(\"confirmPassword\")}\n                  //autoComplete=\"current-password\"\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  id=\"standard-zipCode\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.zipCode}\n                  onChange={this.handleChange(\"zipCode\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <Grid direction=\"column\">\n                <TextField\n                  id=\"standard-npi\"\n                  variant=\"outlined\"\n                  label=\"NPI Number\"\n                  className={classes.textField}\n                  value={this.state.npi}\n                  onChange={this.handleChange(\"npi\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid direction=\"column\">\n                <TextField\n                  id=\"standard-primary-location\"\n                  variant=\"outlined\"\n                  label=\"Primary Location\"\n                  className={classes.textField}\n                  value={this.state.primaryLocation}\n                  onChange={this.handleChange(\"primaryLocation\")}\n                  margin=\"normal\"\n                />\n              </Grid>\n\n              <TextField\n                id=\"standard-full-width\"\n                label=\"Additional Notes\"\n                style={{ margin: 8 }}\n                className={classes.textField2}\n                placeholder=\"Add any additional notes here\"\n                fullWidth\n                multiline\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n            </Grid>\n            <Grid container direction=\"row\" justify=\"flex-end\">\n              <Button\n                className={classes.saveButton}\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.onSubmit(\n                    this.state.checkedActive,\n                    this.state.checkedAdmin,\n                    this.state.checkedThera,\n                    this.state.checkedIntern,\n                    this.state.firstName,\n                    this.state.lastName,\n                    this.state.email,\n                    this.state.title,\n                    this.state.currentPassword,\n                    this.state.confirmPassword,\n                    this.state.phone,\n                    this.state.address,\n                    this.state.primaryLocation,\n                    this.state.npi,\n                    this.state.city,\n                    this.state.zipCode\n                  );\n                  //this.reloadPage();\n                }}\n              >\n                Save\n              </Button>\n            </Grid>\n            <Container>\n              <Typography className={classes.title} align=\"center\" variant=\"h6\">\n                Clients\n              </Typography>\n            </Container>\n            {/* Assign client button */}\n            <Grid container direction=\"row\" justify=\"center\">\n              <Button\n                className={classes.saveButton}\n                size=\"large\"\n                variant=\"contained\"\n              >\n                <AddIcon className={classes.icon} />\n                Assign Client\n              </Button>\n            </Grid>\n          </Paper>\n        </form>\n      </Container>\n    );\n  }\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TopPanel);\n"]},"metadata":{},"sourceType":"module"}