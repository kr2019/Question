{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/Documents/AlkinLatest/mtsaas/src/ReactCalendarBase.js\";\nimport React, { Component } from \"react\"; //import { render } from \"react-dom\";\n\nimport events from \"./events\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst propTypes = {};\n\nconst styles = theme => ({\n  state: {\n    open: false,\n    openV: false,\n    client: \"\"\n  },\n  textField2: {\n    //marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit //width: 100\n\n  }\n});\n\nconst clients = [{\n  value: \"John Smith\",\n  label: \"John Smith\"\n}, {\n  value: \"Jill Smith\",\n  label: \"Jill Smith\"\n}, {\n  value: \"Ashley Flowers\",\n  label: \"Ashley Flowers\"\n}];\n\nclass ReactCalendarBase extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleClickOpen2 = () => {\n      this.setState({\n        openV: true\n      });\n    };\n\n    this.handleClose2 = () => {\n      this.setState({\n        openV: false\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.state = {\n      events\n    };\n  }\n  /* show new event dialog box */\n\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      style: {\n        height: 600\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(BigCalendar, {\n      selectable: true,\n      localizer: localizer,\n      events: events,\n      views: [\"month\", \"week\", \"day\"],\n      defaultDate: new Date(2019, 3, 1),\n      onSelectEvent: this.handleClickOpen2,\n      onSelectSlot: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Dialog, {\n      open: this.state.openV,\n      onClose: this.handleClose2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Existing Event\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-date\",\n      label: \"title\",\n      variant: \"outlined\",\n      className: classes.textField2,\n      value: events => events.title //onChange={this.handleChange(\"date\")}\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-payor\",\n      label: \"start\",\n      variant: \"outlined\",\n      className: classes.textField2,\n      value: events.start //onChange={this.handleChange(\"payor\")}\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-amount\",\n      label: \"end\",\n      variant: \"outlined\",\n      className: classes.textField2,\n      value: events.end //onChange={this.handleChange(\"amount\")}\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-paymentMethod\",\n      label: \"Payment Method\",\n      variant: \"outlined\",\n      className: classes.textField2 //value={this.state.paymentMethod}\n      //onChange={this.handleChange(\"paymentMethod\")}\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose2,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleClose2,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"New Event\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-client\",\n      select: true,\n      label: \"Client\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textField2,\n      value: this.state.client,\n      onChange: this.handleChange(\"client\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, clients.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-payor\",\n      label: \"Payor\",\n      variant: \"outlined\",\n      className: classes.textField2 //value={this.state.payor}\n      //onChange={this.handleChange(\"payor\")}\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-amount\",\n      label: \"Amount\",\n      variant: \"outlined\",\n      className: classes.textField2 //value={this.state.amount}\n      //onChange={this.handleChange(\"amount\")}\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-paymentMethod\",\n      label: \"Start\",\n      variant: \"outlined\",\n      className: classes.textField2,\n      value: events.start //onChange={this.handleChange(\"paymentMethod\")}\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nReactCalendarBase.propTypes = propTypes; //export default ReactCalendarBase;\n\nexport default withStyles(styles)(ReactCalendarBase);","map":{"version":3,"sources":["/Users/kenneth/Documents/AlkinLatest/mtsaas/src/ReactCalendarBase.js"],"names":["React","Component","events","BigCalendar","moment","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","TextField","withStyles","MenuItem","localizer","momentLocalizer","propTypes","styles","theme","state","open","openV","client","textField2","marginRight","spacing","unit","clients","value","label","ReactCalendarBase","constructor","args","handleClickOpen","setState","handleClose","handleClickOpen2","handleClose2","handleChange","name","event","target","render","classes","props","height","Date","title","start","end","MenuProps","className","menu","map","option"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAO,mDAAP;AAEA,MAAMC,SAAS,GAAGX,WAAW,CAACY,eAAZ,CAA4BX,MAA5B,CAAlB;AACA,MAAMY,SAAS,GAAG,EAAlB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,KADD;AAELC,IAAAA,KAAK,EAAE,KAFF;AAGLC,IAAAA,MAAM,EAAE;AAHH,GADgB;AAOvBC,EAAAA,UAAU,EAAE;AACV;AACAC,IAAAA,WAAW,EAAEN,KAAK,CAACO,OAAN,CAAcC,IAFjB,CAGV;;AAHU;AAPW,CAAL,CAApB;;AAcA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,EAMd;AACED,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CANc,EAUd;AACED,EAAAA,KAAK,EAAE,gBADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAVc,CAAhB;;AAgBA,MAAMC,iBAAN,SAAgC7B,SAAhC,CAA0C;AACxC8B,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACnB,UAAM,GAAGA,IAAT;;AADmB,SAOrBC,eAPqB,GAOH,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAEd,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAToB;;AAAA,SAYrBe,WAZqB,GAYP,MAAM;AAClB,WAAKD,QAAL,CAAc;AAAEd,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAdoB;;AAAA,SAiBrBgB,gBAjBqB,GAiBF,MAAM;AACvB,WAAKF,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAnBoB;;AAAA,SAsBrBgB,YAtBqB,GAsBN,MAAM;AACnB,WAAKH,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAxBoB;;AAAA,SA0BrBiB,YA1BqB,GA0BNC,IAAI,IAAIC,KAAK,IAAI;AAC9B,WAAKN,QAAL,CAAc;AAAE,SAACK,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAab;AAAvB,OAAd;AACD,KA5BoB;;AAGnB,SAAKT,KAAL,GAAa;AAAEjB,MAAAA;AAAF,KAAb;AACD;AAED;;;AAwBAwC,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAGP,WACE;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,SAAS,EAAE/B,SAFb;AAGE,MAAA,MAAM,EAAEZ,MAHV;AAIE,MAAA,KAAK,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,KAAlB,CAJT;AAKE,MAAA,WAAW,EAAE,IAAI4C,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CALf;AAME,MAAA,aAAa,EAAE,KAAKV,gBANtB;AAOE,MAAA,YAAY,EAAE,KAAKH,eAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWE,KAAzB;AAAgC,MAAA,OAAO,EAAE,KAAKgB,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,eADL;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,SAAS,EAAEM,OAAO,CAACpB,UAJrB;AAKE,MAAA,KAAK,EAAErB,MAAM,IAAIA,MAAM,CAAC6C,KAL1B,CAME;AANF;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,SAAS,EAAEJ,OAAO,CAACpB,UAJrB;AAKE,MAAA,KAAK,EAAErB,MAAM,CAAC8C,KALhB,CAME;AANF;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAmBE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,iBADL;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,SAAS,EAAEL,OAAO,CAACpB,UAJrB;AAKE,MAAA,KAAK,EAAErB,MAAM,CAAC+C,GALhB,CAME;AANF;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EA4BE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,wBADL;AAEE,MAAA,KAAK,EAAC,gBAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,SAAS,EAAEN,OAAO,CAACpB,UAJrB,CAKE;AACA;AANF;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,CAFF,EAwCE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKc,YAAtB;AAAoC,MAAA,KAAK,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKA,YAAtB;AAAoC,MAAA,KAAK,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAxCF,CAXF,EA6DE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWC,IAAzB;AAA+B,MAAA,OAAO,EAAE,KAAKe,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,wBADL;AAEE,MAAA,MAAM,MAFR;AAGE,MAAA,KAAK,EAAC,QAHR;AAIE,MAAA,OAAO,EAAC,UAJV;AAKE,MAAA,MAAM,EAAC,QALT;AAME,MAAA,SAAS,EAAEQ,OAAO,CAACpB,UANrB;AAOE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,MAPpB;AAQE,MAAA,QAAQ,EAAE,KAAKgB,YAAL,CAAkB,QAAlB,CARZ;AASE,MAAA,WAAW,EAAE;AACXY,QAAAA,SAAS,EAAE;AACTC,UAAAA,SAAS,EAAER,OAAO,CAACS;AADV;AADA,OATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeGzB,OAAO,CAAC0B,GAAR,CAAYC,MAAM,IACjB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,MAAM,CAAC1B,KAAtB;AAA6B,MAAA,KAAK,EAAE0B,MAAM,CAAC1B,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG0B,MAAM,CAACzB,KADV,CADD,CAfH,CADF,EAsBE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,SAAS,EAAEc,OAAO,CAACpB,UAJrB,CAKE;AACA;AANF;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,EA+BE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,iBADL;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,SAAS,EAAEoB,OAAO,CAACpB,UAJrB,CAKE;AACA;AANF;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BF,EAwCE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,wBADL;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,SAAS,EAAEoB,OAAO,CAACpB,UAJrB;AAKE,MAAA,KAAK,EAAErB,MAAM,CAAC8C,KALhB,CAME;AANF;AAOE,MAAA,MAAM,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,CAFF,EAoDE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKb,WAAtB;AAAmC,MAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKA,WAAtB;AAAmC,MAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CApDF,CA7DF,CADF;AA6HD;;AA/JuC;;AAkK1CL,iBAAiB,CAACd,SAAlB,GAA8BA,SAA9B,C,CAEA;;AACA,eAAeJ,UAAU,CAACK,MAAD,CAAV,CAAmBa,iBAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\n//import { render } from \"react-dom\";\nimport events from \"./events\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst propTypes = {};\n\nconst styles = theme => ({\n  state: {\n    open: false,\n    openV: false,\n    client: \"\"\n  },\n\n  textField2: {\n    //marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n    //width: 100\n  }\n});\n\nconst clients = [\n  {\n    value: \"John Smith\",\n    label: \"John Smith\"\n  },\n\n  {\n    value: \"Jill Smith\",\n    label: \"Jill Smith\"\n  },\n  {\n    value: \"Ashley Flowers\",\n    label: \"Ashley Flowers\"\n  }\n];\n\nclass ReactCalendarBase extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = { events };\n  }\n\n  /* show new event dialog box */\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  /* close new event dialog box */\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  /* show existing event dialog box */\n  handleClickOpen2 = () => {\n    this.setState({ openV: true });\n  };\n\n  /* close existing event dialog box */\n  handleClose2 = () => {\n    this.setState({ openV: false });\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div style={{ height: 600 }}>\n        <BigCalendar\n          selectable\n          localizer={localizer}\n          events={events}\n          views={[\"month\", \"week\", \"day\"]}\n          defaultDate={new Date(2019, 3, 1)}\n          onSelectEvent={this.handleClickOpen2}\n          onSelectSlot={this.handleClickOpen}\n        />\n        {/* existing dialog */}\n        <Dialog open={this.state.openV} onClose={this.handleClose2}>\n          <DialogTitle id=\"form-dialog-title\">Existing Event</DialogTitle>\n          <DialogContent>\n            <TextField\n              id=\"standard-date\"\n              label=\"title\"\n              variant=\"outlined\"\n              className={classes.textField2}\n              value={events => events.title}\n              //onChange={this.handleChange(\"date\")}\n              margin=\"normal\"\n            />\n            <TextField\n              id=\"standard-payor\"\n              label=\"start\"\n              variant=\"outlined\"\n              className={classes.textField2}\n              value={events.start}\n              //onChange={this.handleChange(\"payor\")}\n              margin=\"normal\"\n            />\n            <TextField\n              id=\"standard-amount\"\n              label=\"end\"\n              variant=\"outlined\"\n              className={classes.textField2}\n              value={events.end}\n              //onChange={this.handleChange(\"amount\")}\n              margin=\"normal\"\n            />\n            <TextField\n              id=\"standard-paymentMethod\"\n              label=\"Payment Method\"\n              variant=\"outlined\"\n              className={classes.textField2}\n              //value={this.state.paymentMethod}\n              //onChange={this.handleChange(\"paymentMethod\")}\n              margin=\"normal\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose2} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleClose2} color=\"primary\">\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog open={this.state.open} onClose={this.handleClose}>\n          <DialogTitle id=\"form-dialog-title\">New Event</DialogTitle>\n          <DialogContent>\n            <TextField\n              id=\"standard-select-client\"\n              select\n              label=\"Client\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              className={classes.textField2}\n              value={this.state.client}\n              onChange={this.handleChange(\"client\")}\n              SelectProps={{\n                MenuProps: {\n                  className: classes.menu\n                }\n              }}\n            >\n              {clients.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              id=\"standard-payor\"\n              label=\"Payor\"\n              variant=\"outlined\"\n              className={classes.textField2}\n              //value={this.state.payor}\n              //onChange={this.handleChange(\"payor\")}\n              margin=\"normal\"\n            />\n            <TextField\n              id=\"standard-amount\"\n              label=\"Amount\"\n              variant=\"outlined\"\n              className={classes.textField2}\n              //value={this.state.amount}\n              //onChange={this.handleChange(\"amount\")}\n              margin=\"normal\"\n            />\n            <TextField\n              id=\"standard-paymentMethod\"\n              label=\"Start\"\n              variant=\"outlined\"\n              className={classes.textField2}\n              value={events.start}\n              //onChange={this.handleChange(\"paymentMethod\")}\n              margin=\"normal\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nReactCalendarBase.propTypes = propTypes;\n\n//export default ReactCalendarBase;\nexport default withStyles(styles)(ReactCalendarBase);\n"]},"metadata":{},"sourceType":"module"}