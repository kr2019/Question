{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/Calendar/ReactCalendarBase.js\";\nimport React, { Component } from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ExistingEventDialog from \"./existingEventDialogHooks\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport MomentUtils from \"@date-io/moment\";\nimport { MuiPickersUtilsProvider, DatePicker, TimePicker } from \"@material-ui/pickers\";\nimport { Switch, Link, Route } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst propTypes = {};\nmoment().toDate();\n\nconst styles = theme => ({\n  state: {\n    open: false,\n    openV: false\n  },\n  root: {\n    paddingTop: theme.spacing(10),\n    height: \"100%\" // width: \"90%\"\n\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  },\n  textField2: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 192\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {//width: 200\n  },\n  root3: {\n    width: \"100%\"\n  }\n});\n\nconst navStyle = {\n  color: \"black\",\n  textDecoration: \"none\"\n};\nconst newBillTypes = [{\n  value: \"Billable\",\n  label: \"Billable\"\n}, {\n  value: \"Non-billable\",\n  label: \"Non-billable\"\n}];\nconst newClientTypes = [{\n  value: \"Individual\",\n  label: \"Individual\"\n}, {\n  value: \"Facility\",\n  label: \"Facility\"\n}];\nconst repeatOptions = [{\n  value: \"Daily\",\n  label: \"Daily\"\n}, {\n  value: \"Weekly\",\n  label: \"Weekly\"\n}, {\n  value: \"Monthly\",\n  label: \"Monthly\"\n}, {\n  value: \"Custom\",\n  label: \"Custom\"\n}];\nconst repeatEndOptions = [\n/* {\n  value: \"Never\",\n  label: \"Never\"\n},\n*/\n{\n  value: \"After\",\n  label: \"After\"\n}, {\n  value: \"On Date\",\n  label: \"On Date\"\n}];\nconst customFreqOptions = [{\n  value: \"Daily\",\n  label: \"Daily\"\n}, {\n  value: \"Weekly\",\n  label: \"Weekly\"\n}, {\n  value: \"Monthly\",\n  label: \"Monthly\"\n}];\nconst categories = [{\n  value: \"None\",\n  label: \"None\"\n}];\n\nclass ReactCalendarBase extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.convertDate = date => {\n      return moment.utc(date).toDate();\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false,\n        //this will set the values to blank once the window is closed\n        newBillType: \"\",\n        newClientType: \"\",\n        title: \"\",\n        newClient: \"\",\n        newTherapist: \"\",\n        newLocation: \"\",\n        newCategory: \"\",\n        checkedRepeat: false,\n        repeatOption: null,\n        newEndRepeat: null,\n        newNumOccurences: null,\n        selectedDateOccurenceEnd: null,\n        existingCustomFreq: null,\n        sun: false,\n        mon: false,\n        tues: false,\n        wed: false,\n        thu: false,\n        fri: false,\n        sat: false,\n        selectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n        endSelectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n      });\n    };\n\n    this.handleClickOpen2 = () => {\n      this.setState({\n        openV: true\n      });\n    };\n\n    this.handleClose2 = () => {\n      this.setState({\n        openV: false\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeCheck = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n\n    this.handleChangeCheck2 = name => event => {\n      this.setState({\n        [name]: event.target.checked,\n        //this will set the values to blank once the window is closed\n        repeatOption: null,\n        newEndRepeat: null,\n        newNumOccurences: null,\n        selectedDateOccurenceEnd: null,\n        existingCustomFreq: null,\n        sun: false,\n        mon: false,\n        tues: false,\n        wed: false,\n        thu: false,\n        fri: false,\n        sat: false // contact 3,\n\n        /* checkedContact3: false,\n        contactFirstName3: null,\n        contactLastName3: null,\n        contactEmail3: null,\n        contactTitle3: null,\n        contactPhone3: null,\n        contactAddress3: null,\n        contactCity3: null,\n        contactState3: null,\n        contactZip3: null */\n\n      });\n    };\n\n    this.handleDateChangeStart = date => {\n      this.setState({\n        selectedDate: date.format(\"YYYY-MM-DD HH:mm:ss\")\n      });\n    };\n\n    this.handleDateChangeEnd = date => {\n      this.setState({\n        endSelectedDate: date.format(\"YYYY-MM-DD HH:mm:ss\")\n      });\n    };\n\n    this.state = {\n      cal_events: [//State is updated via componentDidMount\n      ],\n      therapistData: [],\n      clientData: [],\n      data: [],\n      //id: 0,\n      // NEW EVENT\n      newBillType: \"\",\n      newClientType: \"\",\n      newClient: \"\",\n      newTherapist: \"\",\n      newLocation: \"\",\n      newCategory: \"\",\n      newStartDate: \"\",\n      newStartTime: \"\",\n      newEndDate: \"\",\n      newEndTime: \"\",\n      information: \"\",\n      intervalIsSet: \"\",\n      checkedRepeat: false,\n      repeatOption: null,\n      newEndRepeat: null,\n      newNumOccurences: null,\n      selectedDateOccurenceEnd: null,\n      existingCustomFreq: null,\n      sun: false,\n      mon: false,\n      tues: false,\n      wed: false,\n      thu: false,\n      fri: false,\n      sat: false,\n      selectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n      endSelectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\") // EXISTING EVENT\n\n      /*\n      attendance: \"Present\",\n      existingBillType: \"Billable\",\n      existingClientType: \"Individual\",\n      existingClient: \"John Smith\",\n      existingTherapist: \"Harry Potter\",\n      existingLocation: \"Main Building\",\n      existingCategory: \"None\",\n      existingRepeat: \"Weekly\",\n      existingEndRepeat: \"On Date\",\n      existingNumOccurences: \"\",\n      existingCustomFreq: \"\",\n      existingEveryNumDays: \"\",\n      existingEveryNumWeeks: \"\",\n      existingNumMonths: \"\",\n      existingCheckedRepeat: true,\n      sun: false,\n      mon: false,\n      tues: false,\n      wed: false,\n      thu: false,\n      fri: false,\n      sat: false\n      */\n\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/events\").then(response => {\n      console.log(\"Got event data!\");\n      console.log(response.data);\n      let appointments = response.data;\n      this.setState({\n        cal_events: appointments\n      });\n    }).then(response2 => {\n      return axios.get(\"http://localhost:5000/gettherapists\") // this is not using the sequelize method\n      .then(response2 => {\n        console.log(\"Got therapist data!\");\n        console.log(response2.data);\n        this.setState({\n          therapistData: response2.data\n        });\n      });\n    }).then(response3 => {\n      return axios.get(\"http://localhost:5000/getclients\").then(response3 => {\n        console.log(\"Got client data!\");\n        console.log(response3.data);\n        let clientTest = response3.data;\n        this.setState({\n          clientData: clientTest\n        });\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Data interval set!\");\n    }\n  }\n  /*\n  reloadPage(prevState) {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  }\n  //}\n  */\n  // never let a process live forever\n  // always kill a process everytime we are done using it\n\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from events!\");\n    }\n  }\n\n  onSubmit(e) {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n    const obj = {\n      //title: this.state.title,\n      newBillType: this.state.newBillType,\n      newClientType: this.state.newClientType,\n      newTherapist: this.state.newTherapist,\n      newLocation: this.state.newLocation,\n      newCategory: this.state.newCategory,\n      newClient: this.state.newClient,\n      selectedDate: this.state.selectedDate,\n      endSelectedDate: this.state.endSelectedDate\n    };\n    axios.post(\"http://localhost:5000/putData2\", obj).then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      newBillType: \"\",\n      newClientType: \"\",\n      //title: \"\",\n      newClient: \"\",\n      newTherapist: \"\",\n      newLocation: \"\",\n      newCategory: \"\",\n      selectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n      endSelectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n    });\n  }\n  /* show new event dialog box */\n\n\n  /*\n  reloadPage() {\n    window.location.reload();\n  }\n  */\n\n  /*\n  someMethod() {\n    // Force a render without state change...\n    this.forceUpdate();\n  }\n  */\n  render() {\n    const classes = this.props.classes; //const classes = withStyles();\n\n    const _this$state = this.state,\n          cal_events = _this$state.cal_events,\n          therapistData = _this$state.therapistData,\n          clientData = _this$state.clientData,\n          selectedDate = _this$state.selectedDate,\n          endSelectedDate = _this$state.endSelectedDate;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        height: 1000\n      },\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(BigCalendar, {\n      className: classes.root,\n      selectable: true,\n      startAccessor: cal_events => new Date(cal_events.start),\n      endAccessor: cal_events => new Date(cal_events.end),\n      localizer: localizer,\n      events: cal_events,\n      views: [\"month\", \"week\", \"day\"],\n      defaultDate: new Date(),\n      defaultView: \"month\",\n      onSelectEvent: this.handleClickOpen2,\n      onSelectSlot: this.handleClickOpen,\n      min: new Date(2000, 1, 1, 8),\n      max: new Date(2000, 1, 1, 20) // (this sets the start time of 7am) min={new Date(2000, 1, 1, 7)}\n      // this sets the end time of 6pm)  max={new Date(2000, 1, 1, 18)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.openV,\n      onClose: this.handleClose2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(ExistingEventDialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose2,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleClose2,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Button, {\n      onClick: this.handleClose2,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, \"Save & Next\"))), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"bill_type\",\n      select: true,\n      label: \"Bill Type\",\n      className: classes.textField,\n      value: this.state.newBillType,\n      onChange: e => this.setState({\n        newBillType: e.target.value\n      }) //helperText=\"Please select your currency\"\n      ,\n      margin: \"normal\",\n      variant: \"outlined\",\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, newBillTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      required: true,\n      id: \"client_type\",\n      select: true,\n      label: \"Client Type\",\n      className: classes.textField,\n      value: this.state.newClientType,\n      onChange: e => this.setState({\n        newClientType: e.target.value\n      }) //helperText=\"Please select your currency\"\n      ,\n      margin: \"normal\",\n      variant: \"outlined\",\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, newClientTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      required: true,\n      id: \"newClient\",\n      select: true,\n      label: \"Client\",\n      className: classes.textField,\n      value: this.state.newClient,\n      onChange: this.handleChange(\"newClient\") //helperText=\"Please select your currency\"\n      ,\n      margin: \"normal\",\n      variant: \"outlined\",\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, clientData.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.client_full_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, option.client_full_name))), React.createElement(TextField, {\n      id: \"standard-select-therapist\",\n      select: true,\n      label: \"Therapist\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.state.newTherapist,\n      onChange: this.handleChange(\"newTherapist\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, therapistData.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.member_full_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, option.member_full_name))), React.createElement(TextField, {\n      required: true,\n      id: \"newLocation\",\n      label: \"Location \",\n      className: classes.textField2,\n      value: this.state.newLocation,\n      onChange: e => this.setState({\n        newLocation: e.target.value\n      }),\n      margin: \"normal\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"newCategory\",\n      select: true,\n      label: \"Category\",\n      className: classes.textField2,\n      value: this.state.newCategory,\n      onChange: e => this.setState({\n        newCategory: e.target.value\n      }) //helperText=\"Please select your currency\"\n      ,\n      margin: \"normal\",\n      variant: \"outlined\",\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }, categories.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    }, option.label))), React.createElement(MuiPickersUtilsProvider, {\n      utils: MomentUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      margin: \"normal\",\n      className: classes.textField2,\n      label: \"Date picker\",\n      value: selectedDate,\n      onChange: this.handleDateChangeStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }), React.createElement(TimePicker, {\n      margin: \"normal\",\n      className: classes.textField2,\n      label: \"Time picker\",\n      value: selectedDate,\n      onChange: this.handleDateChangeStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623\n      },\n      __self: this\n    }))), React.createElement(MuiPickersUtilsProvider, {\n      utils: MomentUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      margin: \"normal\",\n      label: \"Date picker\",\n      className: classes.textField2,\n      value: endSelectedDate,\n      onChange: this.handleDateChangeEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }), React.createElement(TimePicker, {\n      margin: \"normal\",\n      label: \"Time picker\",\n      className: classes.textField2,\n      value: endSelectedDate,\n      onChange: this.handleDateChangeEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641\n      },\n      __self: this\n    }))), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedRepeat,\n        onChange: this.handleChangeCheck2(\"checkedRepeat\"),\n        value: \"checkedRepeat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654\n        },\n        __self: this\n      }),\n      label: \"Repeat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652\n      },\n      __self: this\n    }))), this.state.checkedRepeat ? React.createElement(TextField, {\n      id: \"standard-select-repeatOption\",\n      select: true,\n      label: \"Repeats\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.repeatOption,\n      onChange: this.handleChange(\"repeatOption\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }, repeatOptions.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }, option.label))) : null, this.state.repeatOption === \"Custom\" ? React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.sun,\n        onChange: this.handleChangeCustWeekDay(\"sun\"),\n        value: \"sun\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690\n        },\n        __self: this\n      }),\n      label: \"Su\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.mon,\n        onChange: this.handleChangeCustWeekDay(\"mon\"),\n        value: \"mon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700\n        },\n        __self: this\n      }),\n      label: \"M\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.tues,\n        onChange: this.handleChangeCustWeekDay(\"tues\"),\n        value: \"tues\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710\n        },\n        __self: this\n      }),\n      label: \"T\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.wed,\n        onChange: this.handleChangeCustWeekDay(\"wed\"),\n        value: \"wed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720\n        },\n        __self: this\n      }),\n      label: \"W\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.thu,\n        onChange: this.handleChangeCustWeekDay(\"thu\"),\n        value: \"thu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        },\n        __self: this\n      }),\n      label: \"Th\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.fri,\n        onChange: hthis.andleChangeCustWeekDay(\"fri\"),\n        value: \"fri\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740\n        },\n        __self: this\n      }),\n      label: \"F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.sat,\n        onChange: this.handleChangeCustWeekDay(\"sat\"),\n        value: \"sat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750\n        },\n        __self: this\n      }),\n      label: \"Sa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748\n      },\n      __self: this\n    })) : null, this.state.existingCustomFreq === \"Daily\" ? React.createElement(TextField, {\n      id: \"standard-select-client\",\n      select: true,\n      label: \"Custom Frequency\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.state.existingCustomFreq,\n      onChange: this.handleChange(\"existingCustomFreq\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762\n      },\n      __self: this\n    }, customFreqOptions.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778\n      },\n      __self: this\n    }, option.label))) : null, this.state.checkedRepeat ? React.createElement(TextField, {\n      id: \"standard-select-client\",\n      select: true,\n      label: \"End Repeat\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textField2,\n      value: this.state.newEndRepeat,\n      onChange: this.handleChange(\"newEndRepeat\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786\n      },\n      __self: this\n    }, repeatEndOptions.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802\n      },\n      __self: this\n    }, option.label))) : null, this.state.newEndRepeat === \"After\" ? React.createElement(TextField, {\n      id: \"standard-newNumOccurences\",\n      label: \"Occurences\",\n      variant: \"outlined\",\n      className: classes.textField2,\n      value: this.state.newNumOccurences,\n      onChange: this.handleChange(\"existingNumOccurences\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810\n      },\n      __self: this\n    }) : null, this.state.newEndRepeat === \"On Date\" ? React.createElement(MuiPickersUtilsProvider, {\n      utils: MomentUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      inputVariant: \"outlined\",\n      className: classes.textField2,\n      margin: \"normal\",\n      id: \"mui-pickers-date\",\n      label: \"End On\",\n      value: this.state.selectedDateOccurenceEnd,\n      onChange: this.handleDateOccurenceChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823\n      },\n      __self: this\n    })) : null), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: () => {\n        this.onSubmit( //this.state.title,\n        this.state.newBillType, this.state.newClientType, this.state.newClient, this.state.thereapist, this.state.newLocation, this.state.newCategory, this.state.selectedDate, this.state.endSelectedDate); //this.reloadPage();\n      },\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860\n      },\n      __self: this\n    }, \"Close\")))));\n  }\n\n}\n\nReactCalendarBase.propTypes = propTypes; //export default ReactCalendarBase;\n\nexport default withStyles(styles)(ReactCalendarBase);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/Calendar/ReactCalendarBase.js"],"names":["React","Component","BigCalendar","moment","Dialog","DialogActions","DialogContent","Button","Grid","MenuItem","TextField","withStyles","FormGroup","FormControlLabel","Checkbox","ExistingEventDialog","MomentUtils","MuiPickersUtilsProvider","DatePicker","TimePicker","Switch","Link","Route","Container","axios","localizer","momentLocalizer","propTypes","toDate","styles","theme","state","open","openV","root","paddingTop","spacing","height","container","display","flexWrap","textField","marginLeft","marginRight","width","textField2","dense","marginTop","menu","root3","navStyle","color","textDecoration","newBillTypes","value","label","newClientTypes","repeatOptions","repeatEndOptions","customFreqOptions","categories","ReactCalendarBase","constructor","args","convertDate","date","utc","handleClickOpen","setState","handleClose","newBillType","newClientType","title","newClient","newTherapist","newLocation","newCategory","checkedRepeat","repeatOption","newEndRepeat","newNumOccurences","selectedDateOccurenceEnd","existingCustomFreq","sun","mon","tues","wed","thu","fri","sat","selectedDate","format","endSelectedDate","handleClickOpen2","handleClose2","handleChange","name","event","target","handleChangeCheck","checked","handleChangeCheck2","handleDateChangeStart","handleDateChangeEnd","cal_events","therapistData","clientData","data","newStartDate","newStartTime","newEndDate","newEndTime","information","intervalIsSet","componentDidMount","get","then","response","console","log","appointments","response2","response3","clientTest","catch","error","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","onSubmit","e","obj","post","res","render","classes","props","Date","start","end","MenuProps","className","map","option","client_full_name","member_full_name","handleChangeCustWeekDay","hthis","andleChangeCustWeekDay","handleDateOccurenceChange","thereapist"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ExistingEventDialog from \"./existingEventDialogHooks\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport MomentUtils from \"@date-io/moment\";\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker,\n  TimePicker\n} from \"@material-ui/pickers\";\nimport { Switch, Link, Route } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\n\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst propTypes = {};\nmoment().toDate();\n\nconst styles = theme => ({\n  state: {\n    open: false,\n    openV: false\n  },\n\n  root: {\n    paddingTop: theme.spacing(10),\n    height: \"100%\"\n    // width: \"90%\"\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  },\n  textField2: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 192\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    //width: 200\n  },\n  root3: {\n    width: \"100%\"\n  }\n});\n\nconst navStyle = {\n  color: \"black\",\n  textDecoration: \"none\"\n};\n\nconst newBillTypes = [\n  {\n    value: \"Billable\",\n    label: \"Billable\"\n  },\n\n  {\n    value: \"Non-billable\",\n    label: \"Non-billable\"\n  }\n];\n\nconst newClientTypes = [\n  {\n    value: \"Individual\",\n    label: \"Individual\"\n  },\n\n  {\n    value: \"Facility\",\n    label: \"Facility\"\n  }\n];\n\nconst repeatOptions = [\n  {\n    value: \"Daily\",\n    label: \"Daily\"\n  },\n\n  {\n    value: \"Weekly\",\n    label: \"Weekly\"\n  },\n  {\n    value: \"Monthly\",\n    label: \"Monthly\"\n  },\n  {\n    value: \"Custom\",\n    label: \"Custom\"\n  }\n];\n\nconst repeatEndOptions = [\n  /* {\n    value: \"Never\",\n    label: \"Never\"\n  },\n*/\n  {\n    value: \"After\",\n    label: \"After\"\n  },\n  {\n    value: \"On Date\",\n    label: \"On Date\"\n  }\n];\n\nconst customFreqOptions = [\n  {\n    value: \"Daily\",\n    label: \"Daily\"\n  },\n\n  {\n    value: \"Weekly\",\n    label: \"Weekly\"\n  },\n  {\n    value: \"Monthly\",\n    label: \"Monthly\"\n  }\n];\n\nconst categories = [\n  {\n    value: \"None\",\n    label: \"None\"\n  }\n];\n\nclass ReactCalendarBase extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = {\n      cal_events: [\n        //State is updated via componentDidMount\n      ],\n      therapistData: [],\n      clientData: [],\n      data: [],\n      //id: 0,\n      // NEW EVENT\n      newBillType: \"\",\n      newClientType: \"\",\n      newClient: \"\",\n      newTherapist: \"\",\n      newLocation: \"\",\n      newCategory: \"\",\n      newStartDate: \"\",\n      newStartTime: \"\",\n      newEndDate: \"\",\n      newEndTime: \"\",\n      information: \"\",\n      intervalIsSet: \"\",\n      checkedRepeat: false,\n      repeatOption: null,\n      newEndRepeat: null,\n      newNumOccurences: null,\n      selectedDateOccurenceEnd: null,\n      existingCustomFreq: null,\n      sun: false,\n      mon: false,\n      tues: false,\n      wed: false,\n      thu: false,\n      fri: false,\n      sat: false,\n      selectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n      endSelectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n      // EXISTING EVENT\n      /*\n      attendance: \"Present\",\n      existingBillType: \"Billable\",\n      existingClientType: \"Individual\",\n      existingClient: \"John Smith\",\n      existingTherapist: \"Harry Potter\",\n      existingLocation: \"Main Building\",\n      existingCategory: \"None\",\n      existingRepeat: \"Weekly\",\n      existingEndRepeat: \"On Date\",\n      existingNumOccurences: \"\",\n      existingCustomFreq: \"\",\n      existingEveryNumDays: \"\",\n      existingEveryNumWeeks: \"\",\n      existingNumMonths: \"\",\n      existingCheckedRepeat: true,\n      sun: false,\n      mon: false,\n      tues: false,\n      wed: false,\n      thu: false,\n      fri: false,\n      sat: false\n      */\n    };\n  }\n\n  convertDate = date => {\n    return moment.utc(date).toDate();\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/events\")\n      .then(response => {\n        console.log(\"Got event data!\");\n        console.log(response.data);\n        let appointments = response.data;\n        this.setState({\n          cal_events: appointments\n        });\n      })\n      .then(response2 => {\n        return axios\n          .get(\"http://localhost:5000/gettherapists\") // this is not using the sequelize method\n          .then(response2 => {\n            console.log(\"Got therapist data!\");\n            console.log(response2.data);\n            this.setState({\n              therapistData: response2.data\n            });\n          });\n      })\n      .then(response3 => {\n        return axios.get(\"http://localhost:5000/getclients\").then(response3 => {\n          console.log(\"Got client data!\");\n          console.log(response3.data);\n          let clientTest = response3.data;\n          this.setState({\n            clientData: clientTest\n          });\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Data interval set!\");\n    }\n  }\n  /*\n  reloadPage(prevState) {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  }\n  //}\n  */\n\n  // never let a process live forever\n  // always kill a process everytime we are done using it\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from events!\");\n    }\n  }\n\n  onSubmit(e) {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n\n    const obj = {\n      //title: this.state.title,\n      newBillType: this.state.newBillType,\n      newClientType: this.state.newClientType,\n      newTherapist: this.state.newTherapist,\n      newLocation: this.state.newLocation,\n      newCategory: this.state.newCategory,\n      newClient: this.state.newClient,\n      selectedDate: this.state.selectedDate,\n      endSelectedDate: this.state.endSelectedDate\n    };\n    axios\n      .post(\"http://localhost:5000/putData2\", obj)\n      .then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      newBillType: \"\",\n      newClientType: \"\",\n      //title: \"\",\n      newClient: \"\",\n      newTherapist: \"\",\n      newLocation: \"\",\n      newCategory: \"\",\n      selectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n      endSelectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n    });\n  }\n\n  /* show new event dialog box */\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  /* close new event dialog box */\n  handleClose = () => {\n    this.setState({\n      open: false,\n      //this will set the values to blank once the window is closed\n      newBillType: \"\",\n      newClientType: \"\",\n      title: \"\",\n      newClient: \"\",\n      newTherapist: \"\",\n      newLocation: \"\",\n      newCategory: \"\",\n      checkedRepeat: false,\n      repeatOption: null,\n      newEndRepeat: null,\n      newNumOccurences: null,\n      selectedDateOccurenceEnd: null,\n      existingCustomFreq: null,\n      sun: false,\n      mon: false,\n      tues: false,\n      wed: false,\n      thu: false,\n      fri: false,\n      sat: false,\n      selectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n      endSelectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n    });\n  };\n\n  /* show existing event dialog box */\n  handleClickOpen2 = () => {\n    this.setState({ openV: true });\n  };\n\n  /* close existing event dialog box */\n  handleClose2 = () => {\n    this.setState({ openV: false });\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChangeCheck = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  handleChangeCheck2 = name => event => {\n    this.setState({\n      [name]: event.target.checked,\n      //this will set the values to blank once the window is closed\n      repeatOption: null,\n      newEndRepeat: null,\n      newNumOccurences: null,\n      selectedDateOccurenceEnd: null,\n      existingCustomFreq: null,\n      sun: false,\n      mon: false,\n      tues: false,\n      wed: false,\n      thu: false,\n      fri: false,\n      sat: false\n      // contact 3,\n      /* checkedContact3: false,\n      contactFirstName3: null,\n      contactLastName3: null,\n      contactEmail3: null,\n      contactTitle3: null,\n      contactPhone3: null,\n      contactAddress3: null,\n      contactCity3: null,\n      contactState3: null,\n      contactZip3: null */\n    });\n  };\n\n  handleDateChangeStart = date => {\n    this.setState({ selectedDate: date.format(\"YYYY-MM-DD HH:mm:ss\") });\n  };\n\n  handleDateChangeEnd = date => {\n    this.setState({ endSelectedDate: date.format(\"YYYY-MM-DD HH:mm:ss\") });\n  };\n  /*\n  reloadPage() {\n    window.location.reload();\n  }\n  */\n\n  /*\n  someMethod() {\n    // Force a render without state change...\n    this.forceUpdate();\n  }\n  */\n\n  render() {\n    const { classes } = this.props;\n    //const classes = withStyles();\n    const {\n      cal_events,\n      therapistData,\n      clientData,\n      selectedDate,\n      endSelectedDate\n    } = this.state;\n\n    return (\n      <div>\n        <Container style={{ height: 1000 }} maxWidth=\"lg\">\n          <BigCalendar\n            className={classes.root}\n            selectable\n            startAccessor={cal_events => new Date(cal_events.start)}\n            endAccessor={cal_events => new Date(cal_events.end)}\n            localizer={localizer}\n            events={cal_events}\n            views={[\"month\", \"week\", \"day\"]}\n            defaultDate={new Date()}\n            defaultView=\"month\"\n            onSelectEvent={this.handleClickOpen2}\n            onSelectSlot={this.handleClickOpen}\n            min={new Date(2000, 1, 1, 8)}\n            max={new Date(2000, 1, 1, 20)}\n            // (this sets the start time of 7am) min={new Date(2000, 1, 1, 7)}\n            // this sets the end time of 6pm)  max={new Date(2000, 1, 1, 18)}\n          />\n        </Container>\n        {/* existing dialog */}\n        <Dialog open={this.state.openV} onClose={this.handleClose2}>\n          <DialogContent>\n            <ExistingEventDialog />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose2} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleClose2} color=\"primary\">\n              Save\n            </Button>\n            <Button onClick={this.handleClose2} color=\"primary\">\n              Save & Next\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog open={this.state.open} onClose={this.handleClose}>\n          <form className={classes.container} noValidate autoComplete=\"off\">\n            <DialogContent>\n              {/*\n              <TextField\n                required\n                id=\"title\"\n                label=\"Title \"\n                className={classes.textField}\n                value={this.state.title}\n                onChange={e => this.setState({ title: e.target.value })}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            */}\n              <TextField\n                required\n                id=\"bill_type\"\n                select\n                label=\"Bill Type\"\n                className={classes.textField}\n                value={this.state.newBillType}\n                onChange={e => this.setState({ newBillType: e.target.value })}\n                //helperText=\"Please select your currency\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {newBillTypes.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n\n              <TextField\n                required\n                id=\"client_type\"\n                select\n                label=\"Client Type\"\n                className={classes.textField}\n                value={this.state.newClientType}\n                onChange={e => this.setState({ newClientType: e.target.value })}\n                //helperText=\"Please select your currency\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {newClientTypes.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                required\n                id=\"newClient\"\n                select\n                label=\"Client\"\n                className={classes.textField}\n                value={this.state.newClient}\n                onChange={this.handleChange(\"newClient\")}\n                //helperText=\"Please select your currency\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {clientData.map(option => (\n                  <MenuItem key={option.value} value={option.client_full_name}>\n                    {option.client_full_name}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                id=\"standard-select-therapist\"\n                select\n                label=\"Therapist\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                className={classes.textField}\n                value={this.state.newTherapist}\n                onChange={this.handleChange(\"newTherapist\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {therapistData.map(option => (\n                  <MenuItem key={option.value} value={option.member_full_name}>\n                    {option.member_full_name}\n                  </MenuItem>\n                ))}\n              </TextField>\n\n              <TextField\n                required\n                id=\"newLocation\"\n                label=\"Location \"\n                className={classes.textField2}\n                value={this.state.newLocation}\n                onChange={e => this.setState({ newLocation: e.target.value })}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                required\n                id=\"newCategory\"\n                select\n                label=\"Category\"\n                className={classes.textField2}\n                value={this.state.newCategory}\n                onChange={e => this.setState({ newCategory: e.target.value })}\n                //helperText=\"Please select your currency\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {categories.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <MuiPickersUtilsProvider utils={MomentUtils}>\n                <Grid container row>\n                  <DatePicker\n                    margin=\"normal\"\n                    className={classes.textField2}\n                    label=\"Date picker\"\n                    value={selectedDate}\n                    onChange={this.handleDateChangeStart}\n                  />\n                  <TimePicker\n                    margin=\"normal\"\n                    className={classes.textField2}\n                    label=\"Time picker\"\n                    value={selectedDate}\n                    onChange={this.handleDateChangeStart}\n                  />\n                </Grid>\n              </MuiPickersUtilsProvider>\n              <MuiPickersUtilsProvider utils={MomentUtils}>\n                <Grid container row>\n                  <DatePicker\n                    margin=\"normal\"\n                    label=\"Date picker\"\n                    className={classes.textField2}\n                    value={endSelectedDate}\n                    onChange={this.handleDateChangeEnd}\n                  />\n                  <TimePicker\n                    margin=\"normal\"\n                    label=\"Time picker\"\n                    className={classes.textField2}\n                    value={endSelectedDate}\n                    onChange={this.handleDateChangeEnd}\n                  />\n                </Grid>\n              </MuiPickersUtilsProvider>\n              <Container>\n                <FormGroup row>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.checkedRepeat}\n                        onChange={this.handleChangeCheck2(\"checkedRepeat\")}\n                        value=\"checkedRepeat\"\n                      />\n                    }\n                    label=\"Repeat\"\n                  />\n                </FormGroup>\n              </Container>\n              {this.state.checkedRepeat ? (\n                <TextField\n                  id=\"standard-select-repeatOption\"\n                  select\n                  label=\"Repeats\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.repeatOption}\n                  onChange={this.handleChange(\"repeatOption\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {repeatOptions.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              ) : null}\n              {this.state.repeatOption === \"Custom\" ? (\n                <FormGroup row>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.sun}\n                        onChange={this.handleChangeCustWeekDay(\"sun\")}\n                        value=\"sun\"\n                      />\n                    }\n                    label=\"Su\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.mon}\n                        onChange={this.handleChangeCustWeekDay(\"mon\")}\n                        value=\"mon\"\n                      />\n                    }\n                    label=\"M\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.tues}\n                        onChange={this.handleChangeCustWeekDay(\"tues\")}\n                        value=\"tues\"\n                      />\n                    }\n                    label=\"T\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.wed}\n                        onChange={this.handleChangeCustWeekDay(\"wed\")}\n                        value=\"wed\"\n                      />\n                    }\n                    label=\"W\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.thu}\n                        onChange={this.handleChangeCustWeekDay(\"thu\")}\n                        value=\"thu\"\n                      />\n                    }\n                    label=\"Th\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.fri}\n                        onChange={hthis.andleChangeCustWeekDay(\"fri\")}\n                        value=\"fri\"\n                      />\n                    }\n                    label=\"F\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.sat}\n                        onChange={this.handleChangeCustWeekDay(\"sat\")}\n                        value=\"sat\"\n                      />\n                    }\n                    label=\"Sa\"\n                  />\n                </FormGroup>\n              ) : null}\n\n              {this.state.existingCustomFreq === \"Daily\" ? (\n                <TextField\n                  id=\"standard-select-client\"\n                  select\n                  label=\"Custom Frequency\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  className={classes.textField}\n                  value={this.state.existingCustomFreq}\n                  onChange={this.handleChange(\"existingCustomFreq\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {customFreqOptions.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              ) : null}\n\n              {this.state.checkedRepeat ? (\n                <TextField\n                  id=\"standard-select-client\"\n                  select\n                  label=\"End Repeat\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  className={classes.textField2}\n                  value={this.state.newEndRepeat}\n                  onChange={this.handleChange(\"newEndRepeat\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {repeatEndOptions.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              ) : null}\n\n              {this.state.newEndRepeat === \"After\" ? (\n                <TextField\n                  id=\"standard-newNumOccurences\"\n                  label=\"Occurences\"\n                  variant=\"outlined\"\n                  className={classes.textField2}\n                  value={this.state.newNumOccurences}\n                  onChange={this.handleChange(\"existingNumOccurences\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.newEndRepeat === \"On Date\" ? (\n                <MuiPickersUtilsProvider utils={MomentUtils}>\n                  <DatePicker\n                    inputVariant=\"outlined\"\n                    className={classes.textField2}\n                    margin=\"normal\"\n                    id=\"mui-pickers-date\"\n                    label=\"End On\"\n                    value={this.state.selectedDateOccurenceEnd}\n                    onChange={this.handleDateOccurenceChange}\n                  />\n                </MuiPickersUtilsProvider>\n              ) : null}\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n              </Button>\n\n              <Button\n                onClick={() => {\n                  this.onSubmit(\n                    //this.state.title,\n                    this.state.newBillType,\n                    this.state.newClientType,\n                    this.state.newClient,\n                    this.state.thereapist,\n                    this.state.newLocation,\n                    this.state.newCategory,\n                    this.state.selectedDate,\n                    this.state.endSelectedDate\n                  );\n                  //this.reloadPage();\n                }}\n                color=\"primary\"\n              >\n                Save\n              </Button>\n\n              <Button onClick={this.handleClose} color=\"primary\">\n                Close\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nReactCalendarBase.propTypes = propTypes;\n\n//export default ReactCalendarBase;\nexport default withStyles(styles)(ReactCalendarBase);\n"]},"metadata":{},"sourceType":"module"}