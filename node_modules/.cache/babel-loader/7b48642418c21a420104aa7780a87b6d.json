{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/teamMemberActions.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport FilterIcon from \"@material-ui/icons/FilterList\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst styles = theme => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    marginTop: theme.spacing(5),\n    marginLeft: theme.spacing(65),\n    align: \"center\",\n    width: \"19.5%\"\n  },\n  button: {\n    margin: theme.spacing.unit\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  }\n});\n\nclass teamMemberActions extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      openV: false,\n      name: true,\n      phone: true,\n      email: true,\n      npi: true,\n      role: true\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClickOpen2 = () => {\n      this.setState({\n        openV: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          phone = _this$state.phone,\n          npi = _this$state.npi,\n          role = _this$state.role;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      className: classNames(classes.leftIcon, classes.iconSmall),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \"Add New\"), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-title\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.title,\n      onChange: this.handleChange(\"title\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.phone,\n      onChange: this.handleChange(\"phone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-firstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.firstName,\n      onChange: this.handleChange(\"firstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.email,\n      onChange: this.handleChange(\"email\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.lastName,\n      onChange: this.handleChange(\"lastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-address\",\n      variant: \"outlined\",\n      label: \"Address\",\n      className: classes.textField,\n      value: this.state.address,\n      onChange: this.handleChange(\"address\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-password-input\",\n      variant: \"outlined\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.currentPassword //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-city-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.city,\n      onChange: this.handleChange(\"city\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-confirmPassword-input\",\n      variant: \"outlined\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.confirmPassword //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-zipCode\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.zipCode,\n      onChange: this.handleChange(\"zipCode\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-npi\",\n      variant: \"outlined\",\n      label: \"NPI Number\",\n      className: classes.textField,\n      value: this.state.npi,\n      onChange: this.handleChange(\"npi\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-primary-location\",\n      variant: \"outlined\",\n      label: \"Primary Location\",\n      className: classes.textField,\n      value: this.state.primaryLocation,\n      onChange: this.handleChange(\"primaryLocation\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-full-width\",\n      label: \"Additional Notes\",\n      style: {\n        margin: 8\n      },\n      className: classes.textField2,\n      placeholder: \"Add any additional notes here\",\n      fullWidth: true,\n      multiline: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: () => {\n        this.onSubmit( //this.state.title,\n        this.state.newBillType, this.state.newClientType, this.state.newClient, this.state.thereapist, this.state.newLocation, this.state.newCategory, this.state.selectedDate, this.state.endSelectedDate); //this.reloadPage();\n      },\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Button, {\n      onClick: this.reloadPage,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Close\")))), React.createElement(Dialog, {\n      open: this.state.openV,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Show\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      component: \"fieldset\",\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: name,\n        onChange: this.handleChange(\"name\"),\n        value: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }),\n      label: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: email,\n        onChange: this.handleChange(\"email\"),\n        value: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }),\n      label: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: phone,\n        onChange: this.handleChange(\"phone\"),\n        value: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }),\n      label: \"Phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: npi,\n        onChange: this.handleChange(\"npi\"),\n        value: \"npi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }),\n      label: \"NPI\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: role,\n        onChange: this.handleChange(\"role\"),\n        value: \"role\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }),\n      label: \"Role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nteamMemberActions.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(teamMemberActions);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/teamMemberActions.js"],"names":["React","PropTypes","withStyles","Paper","Typography","classNames","Button","AddIcon","EmailIcon","FilterIcon","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","FormGroup","FormControlLabel","Checkbox","VisibilityIcon","TextField","MenuItem","styles","theme","root","paddingTop","spacing","paddingBottom","marginTop","marginLeft","align","width","button","margin","unit","leftIcon","marginRight","rightIcon","iconSmall","fontSize","container","display","flexWrap","teamMemberActions","Component","state","open","openV","name","phone","email","npi","role","handleChange","event","setState","target","checked","handleClickOpen","handleClickOpen2","handleClose","render","classes","props","textField","title","MenuProps","className","menu","titles","map","option","value","label","firstName","lastName","address","currentPassword","city","confirmPassword","zipCode","primaryLocation","textField2","shrink","onSubmit","newBillType","newClientType","newClient","thereapist","newLocation","newCategory","selectedDate","endSelectedDate","reloadPage","formControl","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport FilterIcon from \"@material-ui/icons/FilterList\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst styles = theme => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    marginTop: theme.spacing(5),\n    marginLeft: theme.spacing(65),\n    align: \"center\",\n    width: \"19.5%\"\n  },\n  button: {\n    margin: theme.spacing.unit\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  }\n});\n\nclass teamMemberActions extends React.Component {\n  state = {\n    open: false,\n    openV: false,\n    name: true,\n    phone: true,\n    email: true,\n    npi: true,\n    role: true\n  };\n\n  /* change of team member dropdown */\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  /* show assign client diaglog box */\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  /* show assign client diaglog box */\n  handleClickOpen2 = () => {\n    this.setState({ openV: true });\n  };\n\n  /* close assign client diaglog box */\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { name, email, phone, npi, role } = this.state;\n\n    return (\n      <div>\n        <Paper className={classes.root} elevation={7}>\n          <Button variant=\"contained\" className={classes.button}>\n            <AddIcon\n              className={classNames(classes.leftIcon, classes.iconSmall)}\n            />\n            Add New\n          </Button>\n          {/*\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            onClick={this.handleClickOpen}\n          >\n           \n            <VisibilityIcon\n              className={classNames(classes.leftIcon, classes.iconSmall)}\n            />\n            Show\n          </Button>\n            */}\n\n          <Dialog open={this.state.open} onClose={this.handleClose}>\n            <form className={classes.container} noValidate autoComplete=\"off\">\n              <DialogContent>\n                <TextField\n                  id=\"standard-select-title\"\n                  select\n                  label=\"Title\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.title}\n                  onChange={this.handleChange(\"title\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {titles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                <TextField\n                  id=\"standard-phone\"\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  className={classes.textField}\n                  value={this.state.phone}\n                  onChange={this.handleChange(\"phone\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-firstName\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.firstName}\n                  onChange={this.handleChange(\"firstName\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-email\"\n                  variant=\"outlined\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  value={this.state.email}\n                  onChange={this.handleChange(\"email\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-lastNamename\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.lastName}\n                  onChange={this.handleChange(\"lastName\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-address\"\n                  variant=\"outlined\"\n                  label=\"Address\"\n                  className={classes.textField}\n                  value={this.state.address}\n                  onChange={this.handleChange(\"address\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-password-input\"\n                  variant=\"outlined\"\n                  label=\"Password\"\n                  className={classes.textField}\n                  type=\"password\"\n                  value={this.state.currentPassword}\n                  //autoComplete=\"current-password\"\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-city-\"\n                  variant=\"outlined\"\n                  label=\"City\"\n                  className={classes.textField}\n                  value={this.state.city}\n                  onChange={this.handleChange(\"city\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-confirmPassword-input\"\n                  variant=\"outlined\"\n                  label=\"Confirm Password\"\n                  className={classes.textField}\n                  type=\"password\"\n                  value={this.state.confirmPassword}\n                  //autoComplete=\"current-password\"\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-zipCode\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.zipCode}\n                  onChange={this.handleChange(\"zipCode\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-npi\"\n                  variant=\"outlined\"\n                  label=\"NPI Number\"\n                  className={classes.textField}\n                  value={this.state.npi}\n                  onChange={this.handleChange(\"npi\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-primary-location\"\n                  variant=\"outlined\"\n                  label=\"Primary Location\"\n                  className={classes.textField}\n                  value={this.state.primaryLocation}\n                  onChange={this.handleChange(\"primaryLocation\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-full-width\"\n                  label=\"Additional Notes\"\n                  style={{ margin: 8 }}\n                  className={classes.textField2}\n                  placeholder=\"Add any additional notes here\"\n                  fullWidth\n                  multiline\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleClose} color=\"primary\">\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => {\n                    this.onSubmit(\n                      //this.state.title,\n                      this.state.newBillType,\n                      this.state.newClientType,\n                      this.state.newClient,\n                      this.state.thereapist,\n                      this.state.newLocation,\n                      this.state.newCategory,\n                      this.state.selectedDate,\n                      this.state.endSelectedDate\n                    );\n                    //this.reloadPage();\n                  }}\n                  color=\"primary\"\n                >\n                  Save\n                </Button>\n\n                <Button onClick={this.reloadPage} color=\"primary\">\n                  Close\n                </Button>\n              </DialogActions>\n            </form>\n          </Dialog>\n\n          {/* 'Show more' dialog box */}\n          <Dialog open={this.state.openV} onClose={this.handleClose}>\n            <DialogTitle id=\"form-dialog-title\">Show</DialogTitle>\n            <DialogContent>\n              <FormControl component=\"fieldset\" className={classes.formControl}>\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={name}\n                        onChange={this.handleChange(\"name\")}\n                        value=\"name\"\n                      />\n                    }\n                    label=\"Name\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={email}\n                        onChange={this.handleChange(\"email\")}\n                        value=\"email\"\n                      />\n                    }\n                    label=\"Email\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={phone}\n                        onChange={this.handleChange(\"phone\")}\n                        value=\"phone\"\n                      />\n                    }\n                    label=\"Phone\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={npi}\n                        onChange={this.handleChange(\"npi\")}\n                        value=\"npi\"\n                      />\n                    }\n                    label=\"NPI\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={role}\n                        onChange={this.handleChange(\"role\")}\n                        value=\"role\"\n                      />\n                    }\n                    label=\"Role\"\n                  />\n                </FormGroup>\n              </FormControl>\n            </DialogContent>\n          </Dialog>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nteamMemberActions.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(teamMemberActions);\n"]},"metadata":{},"sourceType":"module"}