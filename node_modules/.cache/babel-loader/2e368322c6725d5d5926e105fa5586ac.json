{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/Old/activeRadioButton.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { green, red } from \"@material-ui/core/colors\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst styles = theme => ({\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {}\n});\n\nclass CustomizedSwitches extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkedA: true\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.checkedA,\n        onChange: this.handleChange(\"checkedA\"),\n        value: \"checkedA\",\n        classes: {\n          switchBase: classes.colorSwitchBase,\n          checked: classes.colorChecked,\n          bar: classes.colorBar\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }),\n      label: \"Active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nCustomizedSwitches.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CustomizedSwitches);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/Old/activeRadioButton.js"],"names":["React","PropTypes","withStyles","green","red","FormGroup","FormControlLabel","Switch","styles","theme","colorSwitchBase","color","backgroundColor","colorBar","colorChecked","CustomizedSwitches","Component","state","checkedA","handleChange","name","event","setState","target","checked","render","classes","props","switchBase","bar","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,eAAe,EAAE;AACfC,IAAAA,KAAK,EAAEP,GAAG,CAAC,GAAD,CADK;AAEf,sBAAkB;AAChBO,MAAAA,KAAK,EAAER,KAAK,CAAC,GAAD,CADI;AAEhB,uBAAiB;AACfS,QAAAA,eAAe,EAAET,KAAK,CAAC,GAAD;AADP;AAFD;AAFH,GADM;AAUvBU,EAAAA,QAAQ,EAAE,EAVa;AAWvBC,EAAAA,YAAY,EAAE;AAXS,CAAL,CAApB;;AAcA,MAAMC,kBAAN,SAAiCf,KAAK,CAACgB,SAAvC,CAAiD;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADuC;;AAAA,SAK/CC,YAL+C,GAKhCC,IAAI,IAAIC,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQC,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AACD,KAP8C;AAAA;;AAS/CC,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAGP,WACE,oBAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AACE,MAAA,OAAO,EACL,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWC,QADtB;AAEE,QAAA,QAAQ,EAAE,KAAKC,YAAL,CAAkB,UAAlB,CAFZ;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,OAAO,EAAE;AACPS,UAAAA,UAAU,EAAEF,OAAO,CAAChB,eADb;AAEPc,UAAAA,OAAO,EAAEE,OAAO,CAACZ,YAFV;AAGPe,UAAAA,GAAG,EAAEH,OAAO,CAACb;AAHN,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAaE,MAAA,KAAK,EAAC,QAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAmBD;;AA/B8C;;AAkCjDE,kBAAkB,CAACe,SAAnB,GAA+B;AAC7BJ,EAAAA,OAAO,EAAEzB,SAAS,CAAC8B,MAAV,CAAiBC;AADG,CAA/B;AAIA,eAAe9B,UAAU,CAACM,MAAD,CAAV,CAAmBO,kBAAnB,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { green, red } from \"@material-ui/core/colors\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst styles = theme => ({\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {}\n});\n\nclass CustomizedSwitches extends React.Component {\n  state = {\n    checkedA: true\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.checkedA}\n              onChange={this.handleChange(\"checkedA\")}\n              value=\"checkedA\"\n              classes={{\n                switchBase: classes.colorSwitchBase,\n                checked: classes.colorChecked,\n                bar: classes.colorBar\n              }}\n            />\n          }\n          label=\"Active\"\n        />\n      </FormGroup>\n    );\n  }\n}\n\nCustomizedSwitches.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(CustomizedSwitches);\n"]},"metadata":{},"sourceType":"module"}