{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/Client/clientPanelTabs.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport green from \"@material-ui/core/colors/green\";\nimport red from \"@material-ui/core/colors/red\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Button from \"@material-ui/core/Button\";\nimport AssignedClientsTable from \"../Tables/assignedClientsTable\";\nimport TeamMemFilesTable from \"../Tables/teamMemFilesTable\";\nimport AssignedClientsActions from \"../Actions/asssignedClientsActions\";\nimport PleaseWork3 from \"../teamMember/teamMemberInfo\";\nimport ClientInfo from \"./clientInfo\";\nimport ClientContactInfo from \"./clientContactInfo\";\nimport ClientPayorInfo from \"./clientPayorInfo\";\nimport NoteHistoryTableOld from \"../Old/clientNoteHistoryTableOld\";\nimport NoteHistoryTable from \"../Tables/noteHistoryTable\";\nimport ClientAvatar from \"./clientAvatarTest\";\nimport GoalsObjectives from \"./goalsObjectives\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  root: {\n    //paddingTop: theme.spacing.unit * 1,\n    // paddingBottom: theme.spacing.unit * 1,\n    // paddingLeft: theme.spacing.unit,\n    marginTop: theme.spacing.unit * 15,\n    // marginLeft: theme.spacing.unit * 22,\n    //marginRight: theme.spacing.unit * 22,\n    align: \"center\",\n    width: \"100%\",\n    height: \"120\"\n  },\n  toggle: {\n    paddingRight: theme.spacing.unit * 30\n  },\n  marg: {\n    marginLeft: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  },\n  purpleAvatar: {\n    margin: 10,\n    color: \"#fff\",\n    backgroundColor: deepPurple[500],\n    width: 100,\n    height: 100,\n    fontSize: 40,\n    marginBottom: theme.spacing.unit * -28,\n    marginRight: theme.spacing.unit * 18\n  },\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    //marginBottom: theme.spacing.unit,\n    width: 300\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    width: 200\n  },\n  textField3: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    width: 200\n  },\n  textFieldGoals: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 500\n  },\n  textFieldGoals2: {\n    marginLeft: theme.spacing.unit * 8,\n    //marginRight: theme.spacing.unit,\n    // marginTop: theme.spacing.unit,\n    width: 500\n  },\n  menu: {\n    width: 200\n  },\n  checked: {},\n  root2: {\n    //flexGrow: 1,\n    //backgroundColor: theme.palette.background.paper,\n    //marginLeft: theme.spacing.unit * 22,\n    //marginRight: theme.spacing.unit * 22,\n    //marginTop: theme.spacing.unit * 22,\n    width: \"100%\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: Cyan[800]\n  },\n  infoRoot: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nconst titles = [{\n  value: \"\",\n  label: \"\"\n}, {\n  value: \"Dr.\",\n  label: \"Dr.\"\n}, {\n  value: \"Miss\",\n  label: \"Miss\"\n}, {\n  value: \"Mr.\",\n  label: \"Mr.\"\n}, {\n  value: \"Mrs.\",\n  label: \"Mrs.\"\n}, {\n  value: \"Ms.\",\n  label: \"Ms.\"\n}, {\n  value: \"Mx.\",\n  label: \"Mx.\"\n}];\nconst selectedClient = [{\n  value: \"Billy Joe\",\n  label: \"Billy Joe\"\n}, {\n  value: \"Ashley Flowers\",\n  label: \"Ashley Flowers\"\n}, {\n  value: \"John Smith\",\n  label: \"John Smith\"\n}];\nconst clientTypes = [{\n  value: \"Individual\",\n  label: \"Individual\"\n}, {\n  value: \"Facility\",\n  label: \"Facility\"\n}];\nconst sessionTypes = [{\n  value: \"Lessons\",\n  label: \"Lessons\"\n}, {\n  value: \"Therapy\",\n  label: \"Therapy\"\n}];\nconst paymentTypes = [{\n  value: \"Card\",\n  label: \"Card\"\n}, {\n  value: \"Cash\",\n  label: \"Cash\"\n}, {\n  value: \"Check\",\n  label: \"Check\"\n}];\nconst cardTypes = [{\n  value: \"American Express\",\n  label: \"American Express\"\n}, {\n  value: \"Discover\",\n  label: \"Discover\"\n}, {\n  value: \"MasterCard\",\n  label: \"MasterCard\"\n}, {\n  value: \"Visa\",\n  label: \"Visa\"\n}];\n\nclass TopPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clientData: [],\n      therapistData: [],\n      selectedIndex: null,\n      checkedA: true,\n      client: \"Jaren Jones\",\n      open: false,\n      cost: \"\",\n      length: \"\",\n      clientType: \"Individual\",\n      tabValue: 0,\n      //infotabs\n      firstName: \"Jaren\",\n      lastName: \"Jones\",\n      email: \"jjones@mail.com\",\n      title: \"Mr.\",\n      sessionLength: \"\",\n      sessionCost: \"\",\n      sessionType: \"\",\n      currentPassword: \"test123\",\n      confirmPassword: \"test123\",\n      phone: \"123-456-1111\",\n      address: \"123 Maple Street\",\n      primaryLocation: \"Main Office\",\n      bday: \"2/20/1998\",\n      city: \"Plano\",\n      zipCode: \"75023\",\n      st: \"TX\",\n      multiline: \"Controlled\",\n      // CONTACT TAB\n      contactFirstName: \"Jaren\",\n      contactLastName: \"Jones\",\n      contactEmail: \"jjones@mail.com\",\n      contactAddress: \"123 Maple Street\",\n      contactTitle: \"Mr.\",\n      contactPhone: \"123-456-1111\",\n      contactCity: \"Plano\",\n      contactState: \"TX\",\n      contactZip: \"75023\",\n      // multiline: \"Controlled\"\n      // PAYOR TAB\n      nameOnCard: \"Jack A. Jones\",\n      cardNum: \"111122223333\",\n      payorEmail: \"jackjones@mail.com\",\n      payorTitle: \"Mr.\",\n      paymentType: \"Card\",\n      billingPhone: \"123-456-1111\",\n      payorAddress: \"123 Maple Street\",\n      payorCity: \"Plano\",\n      payorZip: \"75023\",\n      payorState: \"TX\",\n      cvv: \"000\",\n      expDate: \"03/17\",\n      cardType: \"Visa\",\n      sameAsContact: false,\n      // GOALS TAB\n      goal1: \"This is my goal\",\n      obj1_1: \"This is my objective\",\n      obj1_2: \"This is my second one\",\n      goal2: \"\",\n      obj2_1: \"\"\n    };\n\n    this.handleChangeChecked = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n\n    this.handleChangeValue = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeTabs = (event, tabValue) => {\n      this.setState({\n        tabValue\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/gettherapists\").then(response => {\n      console.log(\"Got therapistdata data!\");\n      console.log(response.data);\n      this.setState({\n        therapistData: response.data\n      });\n    }).then(response2 => {\n      return axios.get(\"http://localhost:5000/allclients\").then(response2 => {\n        console.log(\"Got client data!\");\n        console.log(response2.data);\n        this.setState({\n          clientData: response2.data\n        });\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Data interval set!\");\n    }\n  }\n  /*\n  reloadPage(prevState) {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  }\n  //}\n  */\n  // never let a process live forever\n  // always kill a process everytime we are done using it\n\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          tabValue = _this$state.tabValue,\n          therapistData = _this$state.therapistData,\n          clientData = _this$state.clientData;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(ClientAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    })), React.createElement(Paper, {\n      className: classes.root,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      row: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.checkedA,\n        onChange: this.handleChangeChecked(\"checkedA\"),\n        value: \"checkedA\",\n        className: classes.marg,\n        classes: {\n          switchBase: classes.colorSwitchBase,\n          checked: classes.colorChecked,\n          bar: classes.colorBar\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }),\n      label: \"Active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedProspect,\n        onChange: this.handleChangeChecked(\"checkedProspect\"),\n        value: \"checkedProspect\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }),\n      label: \"Prospect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      row: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"newClient\",\n      select: true,\n      label: \"Client\",\n      className: classes.textField,\n      value: this.state.client,\n      onChange: this.handleChangeValue(\"client\") //helperText=\"Please select your currency\"\n      ,\n      margin: \"normal\",\n      variant: \"outlined\",\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, clientData.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.client_full_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, option.client_full_name))), React.createElement(TextField, {\n      id: \"standard-select-member\",\n      select: true,\n      label: \"Client Type\",\n      variant: \"outlined\",\n      className: classes.textField2,\n      value: this.state.clientType,\n      onChange: this.handleChangeValue(\"clientType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, clientTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, option.label))))), React.createElement(AppBar, {\n      className: classes.root2,\n      position: \"static\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      value: tabValue,\n      onChange: this.handleChangeTabs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: \"Client Information\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Contact Information\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Payor Information\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Note History\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Message History\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Goals & Objectives\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }))), tabValue === 0 && React.createElement(\"form\", {\n      /* className={classes.container} */\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.infoRoot,\n      elevation: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-title\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.title,\n      onChange: this.handleChangeValue(\"title\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-address\",\n      variant: \"outlined\",\n      label: \"Address\",\n      className: classes.textField,\n      value: this.state.address,\n      onChange: this.handleChangeValue(\"address\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.phone,\n      onChange: this.handleChangeValue(\"phone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-firstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.firstName,\n      onChange: this.handleChangeValue(\"firstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-city-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.city,\n      onChange: this.handleChangeValue(\"city\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.email,\n      onChange: this.handleChangeValue(\"email\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.lastName,\n      onChange: this.handleChangeValue(\"lastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.st,\n      onChange: this.handleChangeValue(\"st\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-select-sessionType\",\n      select: true,\n      label: \"Session Type\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.state.sessionType,\n      onChange: this.handleChangeValue(\"sessionType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, sessionTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-cost\",\n      label: \"Session Cost (dollars)\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.sessionCost,\n      onChange: this.handleChangeValue(\"sessionCost\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-length\",\n      label: \"Session Length (minutes)\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.sessionLength,\n      onChange: this.handleChangeValue(\"sessionLength\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-password-input\",\n      variant: \"outlined\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.currentPassword //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-bday\",\n      variant: \"outlined\",\n      label: \"Birthday\",\n      className: classes.textField,\n      value: this.state.bday,\n      onChange: this.handleChangeValue(\"bday\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-zipCode\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.zipCode,\n      onChange: this.handleChangeValue(\"zipCode\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-confirmPassword-input\",\n      variant: \"outlined\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.confirmPassword //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      row: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\",\n      label: \"Additional Notes\",\n      style: {\n        margin: 8\n      } // className={classes.textField2}\n      ,\n      placeholder: \"Add any additional notes here\",\n      fullWidth: true,\n      multiline: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671\n      },\n      __self: this\n    }, \"Save\"))))\n    /* <ClientInfo />*/\n    , tabValue === 1 && React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.infoRoot,\n      elevation: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-contactTitle\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactTitle,\n      onChange: this.handleChangeValue(\"contactTitle\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706\n      },\n      __self: this\n    }, option.label)))), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-contactAddress\",\n      variant: \"outlined\",\n      label: \"Address\",\n      className: classes.textField,\n      value: this.state.contactAddress,\n      onChange: this.handleChangeValue(\"contactAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-contactZip\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.contactZip,\n      onChange: this.handleChangeValue(\"contactZip\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactFirstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactFirstName,\n      onChange: this.handleChangeValue(\"contactFirstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-contactCity-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.contactCity,\n      onChange: this.handleChangeValue(\"contactCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactEmail\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.contactEmail,\n      onChange: this.handleChangeValue(\"contactEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactLastName,\n      onChange: this.handleChangeValue(\"contactLastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.contactState,\n      onChange: this.handleChangeValue(\"contactState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-contactPhone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.contactPhone,\n      onChange: this.handleChangeValue(\"contactPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822\n      },\n      __self: this\n    }, \"Save\")))), tabValue === 2 && React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834\n      },\n      __self: this\n    }, React.createElement(Paper\n    /* className={classes.root} */\n    , {\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      row: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: classes.marg,\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.sameAsContact,\n        onChange: this.handleChangeChecked(\"sameAsContact\"),\n        value: \"sameAsContact\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840\n        },\n        __self: this\n      }),\n      label: \"Same as contact\"\n      /* same as contact 1 */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838\n      },\n      __self: this\n    })), React.createElement(TextField, {\n      id: \"standard-select-paymentType\",\n      select: true,\n      label: \"Payment Type\",\n      variant: \"outlined\",\n      className: classes.textField3,\n      value: this.state.paymentType,\n      onChange: this.handleChangeValue(\"paymentType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850\n      },\n      __self: this\n    }, paymentTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865\n      },\n      __self: this\n    }, option.label)))), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-payorTitle\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.payorTitle,\n      onChange: this.handleChangeValue(\"payorTitle\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 873\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888\n      },\n      __self: this\n    }, option.label)))), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-cardType\",\n      select: true,\n      label: \"Card Type\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cardType,\n      onChange: this.handleChangeValue(\"cardType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896\n      },\n      __self: this\n    }, cardTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911\n      },\n      __self: this\n    }, option.label)))), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-payorAddress\",\n      variant: \"outlined\",\n      label: \"Billing Address\",\n      className: classes.textField,\n      value: this.state.payorAddress,\n      onChange: this.handleChangeValue(\"payorAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 930\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-nameOnCard\",\n      label: \"Name on Card\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.nameOnCard,\n      onChange: this.handleChangeValue(\"nameOnCard\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 943\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-cardNum\",\n      label: \"Card Number\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cardNum,\n      onChange: this.handleChangeValue(\"cardNum\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 944\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-payorCity-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.payorCity,\n      onChange: this.handleChangeValue(\"payorCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-payorEmail\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.payorEmail,\n      onChange: this.handleChangeValue(\"payorEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 969\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-expDate\",\n      variant: \"outlined\",\n      label: \"Expiration Date\",\n      className: classes.textField,\n      value: this.state.expDate,\n      onChange: this.handleChangeValue(\"expDate\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 982\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.payorState,\n      onChange: this.handleChangeValue(\"payorState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 994\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1005\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Billing Phone Number\",\n      className: classes.textField,\n      value: this.state.billingPhone,\n      onChange: this.handleChangeValue(\"billingPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1006\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1017\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-cvv\",\n      label: \"CVV\",\n      type: \"password\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cvv,\n      onChange: this.handleChangeValue(\"cvv\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1018\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1031\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-payorZip\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.payorZip,\n      onChange: this.handleChangeValue(\"payorZip\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1032\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1043\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"medium\",\n      variant: \"contained\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1044\n      },\n      __self: this\n    }, \"+\"), React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1051\n      },\n      __self: this\n    }, \"Save\")))), tabValue === 3 && React.createElement(NoteHistoryTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1063\n      },\n      __self: this\n    }), tabValue === 4 && React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1065\n      },\n      __self: this\n    }, \"Message History\"), tabValue === 5 && React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068\n      },\n      __self: this\n    }, React.createElement(Paper\n    /* className={classes.root} */\n    , {\n      elevation: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1070\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-goal1\",\n      multiline: true,\n      variant: \"outlined\",\n      label: \"Goal\",\n      className: classes.textFieldGoals,\n      value: this.state.goal1,\n      onChange: this.handleChangeValue(\"goal1\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1076\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-obj1_1\",\n      multiline: true,\n      label: \"Objective\",\n      variant: \"outlined\",\n      className: classes.textFieldGoals2,\n      value: this.state.obj1_1,\n      onChange: this.handleChangeValue(\"obj1_1\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1087\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-obj1_2\",\n      multiline: true,\n      label: \"Objective\" //variant=\"outlined\"\n      ,\n      className: classes.textFieldGoals2,\n      value: this.state.obj1_1,\n      onChange: this.handleChangeValue(\"obj1_2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1097\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-goal2\",\n      multiline: true //variant=\"outlined\"\n      ,\n      label: \"Goal\",\n      className: classes.textFieldGoals,\n      value: this.state.goal2,\n      onChange: this.handleChangeValue(\"goal2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1107\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-obj2\",\n      multiline: true,\n      label: \"Objective\" //variant=\"outlined\"\n      ,\n      className: classes.textFieldGoals2,\n      value: this.state.obj2_1,\n      onChange: this.handleChangeValue(\"obj2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1118\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"medium\",\n      variant: \"contained\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1130\n      },\n      __self: this\n    }, \"+\"), React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1137\n      },\n      __self: this\n    }, \"Save\"))))));\n  }\n\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TopPanel);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/Client/clientPanelTabs.js"],"names":["React","PropTypes","withStyles","Paper","deepPurple","Grid","Avatar","green","red","FormGroup","FormControlLabel","Switch","MenuItem","TextField","Checkbox","AppBar","Tab","Tabs","Button","AssignedClientsTable","TeamMemFilesTable","AssignedClientsActions","PleaseWork3","ClientInfo","ClientContactInfo","ClientPayorInfo","NoteHistoryTableOld","NoteHistoryTable","ClientAvatar","GoalsObjectives","Cyan","Container","axios","styles","theme","root","marginTop","spacing","unit","align","width","height","toggle","paddingRight","marg","marginLeft","marginBottom","purpleAvatar","margin","color","backgroundColor","fontSize","marginRight","colorSwitchBase","colorBar","colorChecked","textField","textField2","textField3","textFieldGoals","textFieldGoals2","menu","checked","root2","borderRadius","shape","infoRoot","titles","value","label","selectedClient","clientTypes","sessionTypes","paymentTypes","cardTypes","TopPanel","Component","state","clientData","therapistData","selectedIndex","checkedA","client","open","cost","length","clientType","tabValue","firstName","lastName","email","title","sessionLength","sessionCost","sessionType","currentPassword","confirmPassword","phone","address","primaryLocation","bday","city","zipCode","st","multiline","contactFirstName","contactLastName","contactEmail","contactAddress","contactTitle","contactPhone","contactCity","contactState","contactZip","nameOnCard","cardNum","payorEmail","payorTitle","paymentType","billingPhone","payorAddress","payorCity","payorZip","payorState","cvv","expDate","cardType","sameAsContact","goal1","obj1_1","obj1_2","goal2","obj2_1","handleChangeChecked","name","event","setState","target","handleChangeValue","handleChangeTabs","componentDidMount","get","then","response","console","log","data","response2","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","render","classes","props","switchBase","bar","checkedProspect","MenuProps","className","map","option","client_full_name","shrink","saveButton","container","button","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport green from \"@material-ui/core/colors/green\";\nimport red from \"@material-ui/core/colors/red\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Button from \"@material-ui/core/Button\";\nimport AssignedClientsTable from \"../Tables/assignedClientsTable\";\n\nimport TeamMemFilesTable from \"../Tables/teamMemFilesTable\";\nimport AssignedClientsActions from \"../Actions/asssignedClientsActions\";\nimport PleaseWork3 from \"../teamMember/teamMemberInfo\";\nimport ClientInfo from \"./clientInfo\";\nimport ClientContactInfo from \"./clientContactInfo\";\nimport ClientPayorInfo from \"./clientPayorInfo\";\nimport NoteHistoryTableOld from \"../Old/clientNoteHistoryTableOld\";\nimport NoteHistoryTable from \"../Tables/noteHistoryTable\";\nimport ClientAvatar from \"./clientAvatarTest\";\nimport GoalsObjectives from \"./goalsObjectives\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport Container from \"@material-ui/core/Container\";\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  root: {\n    //paddingTop: theme.spacing.unit * 1,\n    // paddingBottom: theme.spacing.unit * 1,\n    // paddingLeft: theme.spacing.unit,\n    marginTop: theme.spacing.unit * 15,\n    // marginLeft: theme.spacing.unit * 22,\n    //marginRight: theme.spacing.unit * 22,\n    align: \"center\",\n    width: \"100%\",\n    height: \"120\"\n  },\n\n  toggle: {\n    paddingRight: theme.spacing.unit * 30\n  },\n\n  marg: {\n    marginLeft: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  },\n\n  purpleAvatar: {\n    margin: 10,\n    color: \"#fff\",\n    backgroundColor: deepPurple[500],\n    width: 100,\n    height: 100,\n    fontSize: 40,\n    marginBottom: theme.spacing.unit * -28,\n    marginRight: theme.spacing.unit * 18\n  },\n\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    //marginBottom: theme.spacing.unit,\n    width: 300\n  },\n\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    width: 200\n  },\n\n  textField3: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    width: 200\n  },\n\n  textFieldGoals: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 500\n  },\n\n  textFieldGoals2: {\n    marginLeft: theme.spacing.unit * 8,\n    //marginRight: theme.spacing.unit,\n    // marginTop: theme.spacing.unit,\n    width: 500\n  },\n\n  menu: {\n    width: 200\n  },\n\n  checked: {},\n\n  root2: {\n    //flexGrow: 1,\n    //backgroundColor: theme.palette.background.paper,\n    //marginLeft: theme.spacing.unit * 22,\n    //marginRight: theme.spacing.unit * 22,\n    //marginTop: theme.spacing.unit * 22,\n    width: \"100%\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: Cyan[800]\n  },\n\n  infoRoot: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nconst titles = [\n  {\n    value: \"\",\n    label: \"\"\n  },\n\n  {\n    value: \"Dr.\",\n    label: \"Dr.\"\n  },\n\n  {\n    value: \"Miss\",\n    label: \"Miss\"\n  },\n\n  {\n    value: \"Mr.\",\n    label: \"Mr.\"\n  },\n  {\n    value: \"Mrs.\",\n    label: \"Mrs.\"\n  },\n  {\n    value: \"Ms.\",\n    label: \"Ms.\"\n  },\n  {\n    value: \"Mx.\",\n    label: \"Mx.\"\n  }\n];\n\nconst selectedClient = [\n  {\n    value: \"Billy Joe\",\n    label: \"Billy Joe\"\n  },\n\n  {\n    value: \"Ashley Flowers\",\n    label: \"Ashley Flowers\"\n  },\n  {\n    value: \"John Smith\",\n    label: \"John Smith\"\n  }\n];\n\nconst clientTypes = [\n  {\n    value: \"Individual\",\n    label: \"Individual\"\n  },\n\n  {\n    value: \"Facility\",\n    label: \"Facility\"\n  }\n];\n\nconst sessionTypes = [\n  {\n    value: \"Lessons\",\n    label: \"Lessons\"\n  },\n\n  {\n    value: \"Therapy\",\n    label: \"Therapy\"\n  }\n];\n\nconst paymentTypes = [\n  {\n    value: \"Card\",\n    label: \"Card\"\n  },\n\n  {\n    value: \"Cash\",\n    label: \"Cash\"\n  },\n\n  {\n    value: \"Check\",\n    label: \"Check\"\n  }\n];\n\nconst cardTypes = [\n  {\n    value: \"American Express\",\n    label: \"American Express\"\n  },\n\n  {\n    value: \"Discover\",\n    label: \"Discover\"\n  },\n\n  {\n    value: \"MasterCard\",\n    label: \"MasterCard\"\n  },\n  {\n    value: \"Visa\",\n    label: \"Visa\"\n  }\n];\n\nclass TopPanel extends React.Component {\n  state = {\n    clientData: [],\n    therapistData: [],\n    selectedIndex: null,\n    checkedA: true,\n    client: \"Jaren Jones\",\n    open: false,\n    cost: \"\",\n    length: \"\",\n    clientType: \"Individual\",\n    tabValue: 0,\n    //infotabs\n    firstName: \"Jaren\",\n    lastName: \"Jones\",\n    email: \"jjones@mail.com\",\n    title: \"Mr.\",\n    sessionLength: \"\",\n    sessionCost: \"\",\n    sessionType: \"\",\n    currentPassword: \"test123\",\n    confirmPassword: \"test123\",\n    phone: \"123-456-1111\",\n    address: \"123 Maple Street\",\n    primaryLocation: \"Main Office\",\n    bday: \"2/20/1998\",\n    city: \"Plano\",\n    zipCode: \"75023\",\n    st: \"TX\",\n    multiline: \"Controlled\",\n    // CONTACT TAB\n    contactFirstName: \"Jaren\",\n    contactLastName: \"Jones\",\n    contactEmail: \"jjones@mail.com\",\n    contactAddress: \"123 Maple Street\",\n    contactTitle: \"Mr.\",\n    contactPhone: \"123-456-1111\",\n    contactCity: \"Plano\",\n    contactState: \"TX\",\n    contactZip: \"75023\",\n    // multiline: \"Controlled\"\n    // PAYOR TAB\n    nameOnCard: \"Jack A. Jones\",\n    cardNum: \"111122223333\",\n    payorEmail: \"jackjones@mail.com\",\n    payorTitle: \"Mr.\",\n    paymentType: \"Card\",\n    billingPhone: \"123-456-1111\",\n    payorAddress: \"123 Maple Street\",\n    payorCity: \"Plano\",\n    payorZip: \"75023\",\n    payorState: \"TX\",\n    cvv: \"000\",\n    expDate: \"03/17\",\n    cardType: \"Visa\",\n    sameAsContact: false,\n    // GOALS TAB\n    goal1: \"This is my goal\",\n    obj1_1: \"This is my objective\",\n    obj1_2: \"This is my second one\",\n    goal2: \"\",\n    obj2_1: \"\"\n  };\n\n  handleChangeChecked = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  /* change of client dropdown */\n  handleChangeValue = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChangeTabs = (event, tabValue) => {\n    this.setState({ tabValue });\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/gettherapists\")\n      .then(response => {\n        console.log(\"Got therapistdata data!\");\n        console.log(response.data);\n        this.setState({\n          therapistData: response.data\n        });\n      })\n      .then(response2 => {\n        return axios.get(\"http://localhost:5000/allclients\").then(response2 => {\n          console.log(\"Got client data!\");\n          console.log(response2.data);\n          this.setState({\n            clientData: response2.data\n          });\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Data interval set!\");\n    }\n  }\n  /*\n  reloadPage(prevState) {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  }\n  //}\n  */\n\n  // never let a process live forever\n  // always kill a process everytime we are done using it\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const { tabValue, therapistData, clientData } = this.state;\n\n    return (\n      <div>\n        <Container maxWidth=\"lg\">\n          {/* Avatar */}\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <ClientAvatar />\n          </Grid>\n          <Paper className={classes.root} elevation={1}>\n            <Grid container row justify=\"space-between\">\n              <FormGroup row>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.checkedA}\n                      onChange={this.handleChangeChecked(\"checkedA\")}\n                      value=\"checkedA\"\n                      className={classes.marg}\n                      classes={{\n                        switchBase: classes.colorSwitchBase,\n                        checked: classes.colorChecked,\n                        bar: classes.colorBar\n                      }}\n                    />\n                  }\n                  label=\"Active\"\n                />\n              </FormGroup>\n\n              <FormGroup row>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state.checkedProspect}\n                      onChange={this.handleChangeChecked(\"checkedProspect\")}\n                      value=\"checkedProspect\"\n                      color=\"default\"\n                    />\n                  }\n                  label=\"Prospect\"\n                />\n              </FormGroup>\n            </Grid>\n            {/* client drop down */}\n            <Grid container row justify=\"space-between\">\n              <TextField\n                required\n                id=\"newClient\"\n                select\n                label=\"Client\"\n                className={classes.textField}\n                value={this.state.client}\n                onChange={this.handleChangeValue(\"client\")}\n                //helperText=\"Please select your currency\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {clientData.map(option => (\n                  <MenuItem key={option.value} value={option.client_full_name}>\n                    {option.client_full_name}\n                  </MenuItem>\n                ))}\n              </TextField>\n\n              <TextField\n                id=\"standard-select-member\"\n                select\n                label=\"Client Type\"\n                variant=\"outlined\"\n                className={classes.textField2}\n                value={this.state.clientType}\n                onChange={this.handleChangeValue(\"clientType\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {clientTypes.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n          </Paper>\n\n          <AppBar className={classes.root2} position=\"static\">\n            <Tabs value={tabValue} onChange={this.handleChangeTabs}>\n              <Tab label=\"Client Information\" />\n              <Tab label=\"Contact Information\" />\n              <Tab label=\"Payor Information\" />\n              <Tab label=\"Note History\" />\n              <Tab label=\"Message History\" />\n              <Tab label=\"Goals & Objectives\" />\n            </Tabs>\n          </AppBar>\n\n          {tabValue === 0 && (\n            <form\n              /* className={classes.container} */ noValidate\n              autoComplete=\"off\"\n            >\n              <Paper className={classes.infoRoot} elevation={2}>\n                <Grid container justify=\"center\" alignItems=\"center\">\n                  <TextField\n                    id=\"standard-select-title\"\n                    select\n                    label=\"Title\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.title}\n                    onChange={this.handleChangeValue(\"title\")}\n                    SelectProps={{\n                      MenuProps: {\n                        className: classes.menu\n                      }\n                    }}\n                  >\n                    {titles.map(option => (\n                      <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                  <TextField\n                    id=\"standard-address\"\n                    variant=\"outlined\"\n                    label=\"Address\"\n                    className={classes.textField}\n                    value={this.state.address}\n                    onChange={this.handleChangeValue(\"address\")}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    id=\"standard-phone\"\n                    variant=\"outlined\"\n                    label=\"Phone Number\"\n                    className={classes.textField}\n                    value={this.state.phone}\n                    onChange={this.handleChangeValue(\"phone\")}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    required\n                    id=\"standard-firstName\"\n                    label=\"First Name\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.firstName}\n                    onChange={this.handleChangeValue(\"firstName\")}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    id=\"standard-city-\"\n                    variant=\"outlined\"\n                    label=\"City\"\n                    className={classes.textField}\n                    value={this.state.city}\n                    onChange={this.handleChangeValue(\"city\")}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    required\n                    id=\"standard-email\"\n                    variant=\"outlined\"\n                    label=\"Email\"\n                    className={classes.textField}\n                    value={this.state.email}\n                    onChange={this.handleChangeValue(\"email\")}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    required\n                    id=\"standard-lastNamename\"\n                    label=\"Last Name\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.lastName}\n                    onChange={this.handleChangeValue(\"lastName\")}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    id=\"standard-state\"\n                    variant=\"outlined\"\n                    label=\"State\"\n                    className={classes.textField}\n                    value={this.state.st}\n                    onChange={this.handleChangeValue(\"st\")}\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    id=\"standard-select-sessionType\"\n                    select\n                    label=\"Session Type\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    className={classes.textField}\n                    value={this.state.sessionType}\n                    onChange={this.handleChangeValue(\"sessionType\")}\n                    SelectProps={{\n                      MenuProps: {\n                        className: classes.menu\n                      }\n                    }}\n                  >\n                    {sessionTypes.map(option => (\n                      <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                  <TextField\n                    id=\"standard-cost\"\n                    label=\"Session Cost (dollars)\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.sessionCost}\n                    onChange={this.handleChangeValue(\"sessionCost\")}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    id=\"standard-length\"\n                    label=\"Session Length (minutes)\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.sessionLength}\n                    onChange={this.handleChangeValue(\"sessionLength\")}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    required\n                    id=\"standard-password-input\"\n                    variant=\"outlined\"\n                    label=\"Password\"\n                    className={classes.textField}\n                    type=\"password\"\n                    value={this.state.currentPassword}\n                    //autoComplete=\"current-password\"\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    id=\"standard-bday\"\n                    variant=\"outlined\"\n                    label=\"Birthday\"\n                    className={classes.textField}\n                    value={this.state.bday}\n                    onChange={this.handleChangeValue(\"bday\")}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    id=\"standard-zipCode\"\n                    variant=\"outlined\"\n                    label=\"Zip Code\"\n                    className={classes.textField}\n                    value={this.state.zipCode}\n                    onChange={this.handleChangeValue(\"zipCode\")}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    required\n                    id=\"standard-confirmPassword-input\"\n                    variant=\"outlined\"\n                    label=\"Confirm Password\"\n                    className={classes.textField}\n                    type=\"password\"\n                    value={this.state.confirmPassword}\n                    //autoComplete=\"current-password\"\n                    margin=\"normal\"\n                  />\n                  <Grid container row justify=\"center\">\n                    <TextField\n                      id=\"standard-full-width\"\n                      label=\"Additional Notes\"\n                      style={{ margin: 8 }}\n                      // className={classes.textField2}\n                      placeholder=\"Add any additional notes here\"\n                      fullWidth\n                      multiline\n                      margin=\"normal\"\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                    />\n                  </Grid>\n                  <Button\n                    className={classes.saveButton}\n                    size=\"large\"\n                    variant=\"contained\"\n                  >\n                    Save\n                  </Button>\n                </Grid>\n              </Paper>\n            </form>\n          )\n\n          /* <ClientInfo />*/\n          }\n          {tabValue === 1 && (\n            <form className={classes.container} noValidate autoComplete=\"off\">\n              <Paper className={classes.infoRoot} elevation={2}>\n                {/*  Contact 1 */}\n                <Grid container justify=\"center\" alignItems=\"center\">\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-select-contactTitle\"\n                      select\n                      label=\"Title\"\n                      variant=\"outlined\"\n                      className={classes.textField}\n                      value={this.state.contactTitle}\n                      onChange={this.handleChangeValue(\"contactTitle\")}\n                      SelectProps={{\n                        MenuProps: {\n                          className: classes.menu\n                        }\n                      }}\n                    >\n                      {titles.map(option => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-contactAddress\"\n                      variant=\"outlined\"\n                      label=\"Address\"\n                      className={classes.textField}\n                      value={this.state.contactAddress}\n                      onChange={this.handleChangeValue(\"contactAddress\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-contactZip\"\n                      variant=\"outlined\"\n                      label=\"Zip Code\"\n                      className={classes.textField}\n                      value={this.state.contactZip}\n                      onChange={this.handleChangeValue(\"contactZip\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-contactFirstName\"\n                      label=\"First Name\"\n                      variant=\"outlined\"\n                      className={classes.textField}\n                      value={this.state.contactFirstName}\n                      onChange={this.handleChangeValue(\"contactFirstName\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-contactCity-\"\n                      variant=\"outlined\"\n                      label=\"City\"\n                      className={classes.textField}\n                      value={this.state.contactCity}\n                      onChange={this.handleChangeValue(\"contactCity\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-contactEmail\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      className={classes.textField}\n                      value={this.state.contactEmail}\n                      onChange={this.handleChangeValue(\"contactEmail\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-lastNamename\"\n                      label=\"Last Name\"\n                      variant=\"outlined\"\n                      className={classes.textField}\n                      value={this.state.contactLastName}\n                      onChange={this.handleChangeValue(\"contactLastName\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-state\"\n                      variant=\"outlined\"\n                      label=\"State\"\n                      className={classes.textField}\n                      value={this.state.contactState}\n                      onChange={this.handleChangeValue(\"contactState\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-contactPhone\"\n                      variant=\"outlined\"\n                      label=\"Phone Number\"\n                      className={classes.textField}\n                      value={this.state.contactPhone}\n                      onChange={this.handleChangeValue(\"contactPhone\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container direction=\"row\" justify=\"space-between\">\n                  {/*\n            <Button\n              size=\"medium\"\n              variant=\"contained\"\n              className={classes.button}\n            >\n              Add Additional\n            </Button>\n            */}\n                  <Button\n                    className={classes.saveButton}\n                    size=\"large\"\n                    variant=\"contained\"\n                  >\n                    Save\n                  </Button>\n                </Grid>\n              </Paper>\n            </form>\n          )}\n          {tabValue === 2 && (\n            <form className={classes.container} noValidate autoComplete=\"off\">\n              <Paper /* className={classes.root} */ elevation={1}>\n                <Grid container row justify=\"space-between\">\n                  <FormGroup className={classes.marg} row>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={this.state.sameAsContact}\n                          onChange={this.handleChangeChecked(\"sameAsContact\")}\n                          value=\"sameAsContact\"\n                          color=\"default\"\n                        />\n                      }\n                      label=\"Same as contact\" /* same as contact 1 */\n                    />\n                  </FormGroup>\n                  <TextField\n                    id=\"standard-select-paymentType\"\n                    select\n                    label=\"Payment Type\"\n                    variant=\"outlined\"\n                    className={classes.textField3}\n                    value={this.state.paymentType}\n                    onChange={this.handleChangeValue(\"paymentType\")}\n                    SelectProps={{\n                      MenuProps: {\n                        className: classes.menu\n                      }\n                    }}\n                  >\n                    {paymentTypes.map(option => (\n                      <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid container justify=\"center\" alignItems=\"center\">\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-select-payorTitle\"\n                      select\n                      label=\"Title\"\n                      variant=\"outlined\"\n                      className={classes.textField}\n                      value={this.state.payorTitle}\n                      onChange={this.handleChangeValue(\"payorTitle\")}\n                      SelectProps={{\n                        MenuProps: {\n                          className: classes.menu\n                        }\n                      }}\n                    >\n                      {titles.map(option => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-select-cardType\"\n                      select\n                      label=\"Card Type\"\n                      variant=\"outlined\"\n                      className={classes.textField}\n                      value={this.state.cardType}\n                      onChange={this.handleChangeValue(\"cardType\")}\n                      SelectProps={{\n                        MenuProps: {\n                          className: classes.menu\n                        }\n                      }}\n                    >\n                      {cardTypes.map(option => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-payorAddress\"\n                      variant=\"outlined\"\n                      label=\"Billing Address\"\n                      className={classes.textField}\n                      value={this.state.payorAddress}\n                      onChange={this.handleChangeValue(\"payorAddress\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-nameOnCard\"\n                      label=\"Name on Card\"\n                      variant=\"outlined\"\n                      className={classes.textField}\n                      value={this.state.nameOnCard}\n                      onChange={this.handleChangeValue(\"nameOnCard\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-cardNum\"\n                      label=\"Card Number\"\n                      variant=\"outlined\"\n                      className={classes.textField}\n                      value={this.state.cardNum}\n                      onChange={this.handleChangeValue(\"cardNum\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-payorCity-\"\n                      variant=\"outlined\"\n                      label=\"City\"\n                      className={classes.textField}\n                      value={this.state.payorCity}\n                      onChange={this.handleChangeValue(\"payorCity\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-payorEmail\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      className={classes.textField}\n                      value={this.state.payorEmail}\n                      onChange={this.handleChangeValue(\"payorEmail\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-expDate\"\n                      variant=\"outlined\"\n                      label=\"Expiration Date\"\n                      className={classes.textField}\n                      value={this.state.expDate}\n                      onChange={this.handleChangeValue(\"expDate\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-state\"\n                      variant=\"outlined\"\n                      label=\"State\"\n                      className={classes.textField}\n                      value={this.state.payorState}\n                      onChange={this.handleChangeValue(\"payorState\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-phone\"\n                      variant=\"outlined\"\n                      label=\"Billing Phone Number\"\n                      className={classes.textField}\n                      value={this.state.billingPhone}\n                      onChange={this.handleChangeValue(\"billingPhone\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-cvv\"\n                      label=\"CVV\"\n                      type=\"password\"\n                      variant=\"outlined\"\n                      className={classes.textField}\n                      value={this.state.cvv}\n                      onChange={this.handleChangeValue(\"cvv\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-payorZip\"\n                      variant=\"outlined\"\n                      label=\"Zip Code\"\n                      className={classes.textField}\n                      value={this.state.payorZip}\n                      onChange={this.handleChangeValue(\"payorZip\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container direction=\"row\" justify=\"space-between\">\n                  <Button\n                    size=\"medium\"\n                    variant=\"contained\"\n                    className={classes.button}\n                  >\n                    +\n                  </Button>\n                  <Button\n                    className={classes.saveButton}\n                    size=\"large\"\n                    variant=\"contained\"\n                  >\n                    Save\n                  </Button>\n                </Grid>\n              </Paper>\n            </form>\n          )}\n          {/* Note History */}\n          {tabValue === 3 && <NoteHistoryTable />}\n          {/* Message History */}\n          {tabValue === 4 && <Paper>Message History</Paper>}\n          {/* Goals & Objectives */}\n          {tabValue === 5 && (\n            <form className={classes.container} noValidate autoComplete=\"off\">\n              <Paper /* className={classes.root} */ elevation={2}>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                >\n                  <TextField\n                    id=\"standard-goal1\"\n                    multiline\n                    variant=\"outlined\"\n                    label=\"Goal\"\n                    className={classes.textFieldGoals}\n                    value={this.state.goal1}\n                    onChange={this.handleChangeValue(\"goal1\")}\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    id=\"standard-obj1_1\"\n                    multiline\n                    label=\"Objective\"\n                    variant=\"outlined\"\n                    className={classes.textFieldGoals2}\n                    value={this.state.obj1_1}\n                    onChange={this.handleChangeValue(\"obj1_1\")}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    id=\"standard-obj1_2\"\n                    multiline\n                    label=\"Objective\"\n                    //variant=\"outlined\"\n                    className={classes.textFieldGoals2}\n                    value={this.state.obj1_1}\n                    onChange={this.handleChangeValue(\"obj1_2\")}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    id=\"standard-goal2\"\n                    multiline\n                    //variant=\"outlined\"\n                    label=\"Goal\"\n                    className={classes.textFieldGoals}\n                    value={this.state.goal2}\n                    onChange={this.handleChangeValue(\"goal2\")}\n                    margin=\"normal\"\n                  />\n\n                  <TextField\n                    id=\"standard-obj2\"\n                    multiline\n                    label=\"Objective\"\n                    //variant=\"outlined\"\n                    className={classes.textFieldGoals2}\n                    value={this.state.obj2_1}\n                    onChange={this.handleChangeValue(\"obj2\")}\n                    margin=\"normal\"\n                  />\n                </Grid>\n                <Grid container direction=\"row\" justify=\"space-between\">\n                  <Button\n                    size=\"medium\"\n                    variant=\"contained\"\n                    className={classes.button}\n                  >\n                    +\n                  </Button>\n                  <Button\n                    className={classes.saveButton}\n                    size=\"large\"\n                    variant=\"contained\"\n                  >\n                    Save\n                  </Button>\n                </Grid>\n              </Paper>\n            </form>\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TopPanel);\n"]},"metadata":{},"sourceType":"module"}