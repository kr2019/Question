{"ast":null,"code":"import _objectSpread from \"/Users/kenneth/repos2/mtsaas/mtrepo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/kenneth/repos2/mtsaas/mtrepo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/documentation.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport NoteAddIcon from \"@material-ui/icons/NoteAddOutlined\";\nimport ClientAvatar from \"./clientAvatarTest2\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1) //width: 400\n\n  },\n  textField2: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 198\n  },\n  textField3: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1) //height: 400\n\n  },\n  checkBoxStyle: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  }\n}));\nconst noteTypes = [{\n  value: \"Regular\",\n  label: \"Regular\"\n}, {\n  value: \"SOAP\",\n  label: \"SOAP\"\n}, {\n  value: \"Type 3\",\n  label: \"Type 3\"\n}, {\n  value: \"Type 4\",\n  label: \"Type 4\"\n}];\nconst attendanceTypes = [{\n  value: \"Present\",\n  label: \"Present\"\n}, {\n  value: \"Absent\",\n  label: \"Absent\"\n}, {\n  value: \"Late\",\n  label: \"Late\"\n}];\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }));\n});\nexport default function FullScreenDialog() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState({\n    //name: '',\n    //age: '',\n    //multiline: 'Controlled',\n    //currency: 'EUR',\n    client: \"John Smith\",\n    noteType: \"Regular\",\n    attendanceType: \"Present\",\n    sessionDate: \"4/2/2019\"\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        values = _React$useState4[0],\n        setValues = _React$useState4[1];\n\n  const _React$useState5 = React.useState({\n    checkedPayor: true,\n    checkedFamily: true,\n    checkedTherapist: true,\n    checkedPortal: true\n  }),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        state = _React$useState6[0],\n        setState = _React$useState6[1];\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  const handleChangeCheck = name => event => {\n    setState(_objectSpread({}, state, {\n      [name]: event.target.checked\n    }));\n  };\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(NoteAddIcon, {\n    color: \"primary\",\n    fontSize: \"large\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: handleClose,\n    \"aria-label\": \"Close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(Button, {\n    color: \"inherit\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Save & Send\"))), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(ClientAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-textbox\",\n    label: \"Name\",\n    value: values.client,\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-textbox\",\n    label: \"Date\",\n    value: values.sessionDate,\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    label: \"Note Type\",\n    className: classes.textField2,\n    value: values.noteType,\n    onChange: handleChange(\"noteType\"),\n    SelectProps: {\n      MenuProps: {\n        className: classes.menu\n      }\n    },\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, noteTypes.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, option.label))), React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    label: \"Attendance\",\n    className: classes.textField2,\n    value: values.attendanceType,\n    onChange: handleChange(\"attendanceType\"),\n    SelectProps: {\n      MenuProps: {\n        className: classes.menu\n      }\n    },\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, attendanceTypes.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, option.label)))), React.createElement(TextField, {\n    id: \"standard-full-width\",\n    label: \"Notes\" //style={{ margin: 8 }}\n    ,\n    className: classes.textField3,\n    placeholder: \"Add notes here\",\n    fullWidth: true,\n    variant: \"outlined\",\n    multiline: true,\n    rows: \"12\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }), React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      className: classes.checkBoxStyle,\n      checked: state.checkedPayor,\n      onChange: handleChangeCheck(\"checkedPayor\"),\n      value: \"checkedPayor\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }),\n    label: \"Payor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      className: classes.checkBoxStyle,\n      checked: state.checkedFamily,\n      onChange: handleChangeCheck(\"checkedFamily\"),\n      value: \"checkedFamily\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }),\n    label: \"Family\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      className: classes.checkBoxStyle,\n      checked: state.checkedTherapist,\n      onChange: handleChangeCheck(\"checkedTherapist\"),\n      value: \"checkedTherapist\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }),\n    label: \"Therapist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      className: classes.checkBoxStyle,\n      checked: state.checkedPortal,\n      onChange: handleChangeCheck(\"checkedPortal\"),\n      value: \"checkedPortal\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }),\n    label: \"Send to Portal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/documentation.js"],"names":["React","makeStyles","Button","Dialog","ListItemText","ListItem","List","Divider","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","Grid","TextField","MenuItem","FormGroup","FormControlLabel","Checkbox","NoteAddIcon","ClientAvatar","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","textField","marginRight","textField2","width","textField3","checkBoxStyle","noteTypes","value","label","attendanceTypes","Transition","forwardRef","props","ref","FullScreenDialog","classes","useState","open","setOpen","client","noteType","attendanceType","sessionDate","values","setValues","checkedPayor","checkedFamily","checkedTherapist","checkedPortal","state","setState","handleChange","name","event","target","handleChangeCheck","checked","handleClickOpen","handleClose","MenuProps","className","menu","map","option","shrink"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport NoteAddIcon from \"@material-ui/icons/NoteAddOutlined\";\nimport ClientAvatar from \"./clientAvatarTest2\";\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n    //width: 400\n  },\n  textField2: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 198\n  },\n  textField3: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n    //height: 400\n  },\n  checkBoxStyle: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst noteTypes = [\n  {\n    value: \"Regular\",\n    label: \"Regular\"\n  },\n  {\n    value: \"SOAP\",\n    label: \"SOAP\"\n  },\n  {\n    value: \"Type 3\",\n    label: \"Type 3\"\n  },\n  {\n    value: \"Type 4\",\n    label: \"Type 4\"\n  }\n];\n\nconst attendanceTypes = [\n  {\n    value: \"Present\",\n    label: \"Present\"\n  },\n  {\n    value: \"Absent\",\n    label: \"Absent\"\n  },\n  {\n    value: \"Late\",\n    label: \"Late\"\n  }\n];\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const [values, setValues] = React.useState({\n    //name: '',\n    //age: '',\n    //multiline: 'Controlled',\n    //currency: 'EUR',\n    client: \"John Smith\",\n    noteType: \"Regular\",\n    attendanceType: \"Present\",\n    sessionDate: \"4/2/2019\"\n  });\n\n  const [state, setState] = React.useState({\n    checkedPayor: true,\n    checkedFamily: true,\n    checkedTherapist: true,\n    checkedPortal: true\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleChangeCheck = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <IconButton>\n        <NoteAddIcon\n          color=\"primary\"\n          fontSize=\"large\"\n          onClick={handleClickOpen}\n        />\n      </IconButton>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Notes\n            </Typography>\n            <Button color=\"inherit\" onClick={handleClose}>\n              Save & Send\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <ClientAvatar />\n        </Grid>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <TextField\n            id=\"outlined-textbox\"\n            label=\"Name\"\n            value={values.client}\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"outlined-textbox\"\n            label=\"Date\"\n            value={values.sessionDate}\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n        </Grid>\n\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <TextField\n            id=\"outlined-select-currency\"\n            select\n            label=\"Note Type\"\n            className={classes.textField2}\n            value={values.noteType}\n            onChange={handleChange(\"noteType\")}\n            SelectProps={{\n              MenuProps: {\n                className: classes.menu\n              }\n            }}\n            margin=\"normal\"\n            variant=\"outlined\"\n          >\n            {noteTypes.map(option => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n          <TextField\n            id=\"outlined-select-currency\"\n            select\n            label=\"Attendance\"\n            className={classes.textField2}\n            value={values.attendanceType}\n            onChange={handleChange(\"attendanceType\")}\n            SelectProps={{\n              MenuProps: {\n                className: classes.menu\n              }\n            }}\n            margin=\"normal\"\n            variant=\"outlined\"\n          >\n            {attendanceTypes.map(option => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n\n        <TextField\n          id=\"standard-full-width\"\n          label=\"Notes\"\n          //style={{ margin: 8 }}\n          className={classes.textField3}\n          placeholder=\"Add notes here\"\n          fullWidth\n          variant=\"outlined\"\n          multiline\n          rows=\"12\"\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Checkbox\n                className={classes.checkBoxStyle}\n                checked={state.checkedPayor}\n                onChange={handleChangeCheck(\"checkedPayor\")}\n                value=\"checkedPayor\"\n                color=\"primary\"\n              />\n            }\n            label=\"Payor\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                className={classes.checkBoxStyle}\n                checked={state.checkedFamily}\n                onChange={handleChangeCheck(\"checkedFamily\")}\n                value=\"checkedFamily\"\n                color=\"primary\"\n              />\n            }\n            label=\"Family\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                className={classes.checkBoxStyle}\n                checked={state.checkedTherapist}\n                onChange={handleChangeCheck(\"checkedTherapist\")}\n                value=\"checkedTherapist\"\n                color=\"primary\"\n              />\n            }\n            label=\"Therapist\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                className={classes.checkBoxStyle}\n                checked={state.checkedPortal}\n                onChange={handleChangeCheck(\"checkedPortal\")}\n                value=\"checkedPortal\"\n                color=\"primary\"\n              />\n            }\n            label=\"Send to Portal\"\n          />\n        </FormGroup>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}