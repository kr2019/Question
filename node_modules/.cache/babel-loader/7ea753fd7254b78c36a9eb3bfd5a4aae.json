{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos/MTSaaSRepo/mtsaas/src/accountsTable.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nlet counter = 0;\n\nfunction createData(primaryAccountHolder, client, accountType, phone, email, primaryPayMethod, currentBal, lastPayDate) {\n  counter += 1;\n  return {\n    id: counter,\n    primaryAccountHolder,\n    client,\n    accountType,\n    phone,\n    email,\n    primaryPayMethod,\n    currentBal,\n    lastPayDate\n  };\n}\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [{\n  id: \"primaryAccountHolder\",\n  label: \"Primary Account Holder\"\n}, {\n  id: \"client\",\n  label: \"Client if different from primary\"\n}, {\n  id: \"accountType\",\n  label: \"Account Type\"\n}, {\n  id: \"phone\",\n  label: \"Phone\"\n}, {\n  id: \"email\",\n  label: \"Email\"\n}, {\n  id: \"primaryPayMethod\",\n  label: \"Primary Payment Method\"\n}, {\n  id: \"currentBal\",\n  label: \"Current Balance\"\n}, {\n  id: \"lastPayDate\",\n  label: \"Last Payment Date\"\n}];\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: lightBlue[400],\n    color: theme.palette.common.white,\n    fontSize: 15\n  },\n  body: {\n    fontSize: 12\n  }\n}))(TableCell);\n\nclass EnhancedTableHead extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createSortHandler = property => event => {\n      this.props.onRequestSort(event, property);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy;\n    return React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, rows.map(row => React.createElement(CustomTableCell, {\n      key: row.id,\n      align: \"center\",\n      sortDirection: orderBy === row.id ? order : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(TableSortLabel, {\n      active: orderBy === row.id,\n      direction: order,\n      onClick: this.createSortHandler(row.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, row.label)), this)));\n  }\n\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired //rowCount: PropTypes.number.isRequired,\n\n};\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit * -5,\n    marginRight: theme.spacing.unit * 10,\n    marginBottom: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    //minWidth: 400,\n    width: \"100%\"\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n});\n\nclass EnhancedTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      order: \"\",\n      orderBy: \"\",\n      data: [createData(\"Smith, Mary\", \"Smith, Joe\", \"Family\", \"123-456-7899\", \"mary@mail.com\", \"Cash\", \"$30\", \"2/10/19\"), createData(\"Johnson, Jack\", \"\", \"Individual\", \"123-456-7899\", \"jack@mail.com\", \"Card\", \"$0\", \"3/15/19\"), createData(\"Smith, Mary\", \"Smith, Joe\", \"Family\", \"123-456-7899\", \"mary@mail.com\", \"Cash\", \"$30\", \"2/10/19\"), createData(\"Smith, Mary\", \"Smith, Joe\", \"Family\", \"123-456-7899\", \"mary@mail.com\", \"Cash\", \"$30\", \"2/10/19\"), createData(\"Smith, Mary\", \"Smith, Joe\", \"Family\", \"123-456-7899\", \"mary@mail.com\", \"Cash\", \"$30\", \"2/10/19\"), createData(\"Johnson, Jack\", \"\", \"Individual\", \"123-456-7899\", \"jack@mail.com\", \"Card\", \"$0\", \"3/15/19\"), createData(\"Smith, Mary\", \"Smith, Joe\", \"Family\", \"123-456-7899\", \"mary@mail.com\", \"Cash\", \"$30\", \"2/10/19\"), createData(\"Smith, Mary\", \"Smith, Joe\", \"Family\", \"123-456-7899\", \"mary@mail.com\", \"Cash\", \"$30\", \"2/10/19\")],\n      page: 0,\n      rowsPerPage: 5\n    };\n\n    this.handleRequestSort = (event, property) => {\n      const orderBy = property;\n      let order = \"desc\";\n\n      if (this.state.orderBy === property && this.state.order === \"desc\") {\n        order = \"asc\";\n      }\n\n      this.setState({\n        order,\n        orderBy\n      });\n    };\n\n    this.handleChangePage = (event, page) => {\n      this.setState({\n        page\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n  }\n\n  // isSelected = id => this.state.selected.indexOf(id) !== -1;\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          data = _this$state.data,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n    return React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.tableWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      \"aria-labelledby\": \"tableTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(EnhancedTableHead //numSelected={selected.length}\n    , {\n      order: order,\n      orderBy: orderBy,\n      onRequestSort: this.handleRequestSort,\n      rowCount: data.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, stableSort(data, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(n => {\n      // const isSelected = this.isSelected(n.id);\n      return React.createElement(TableRow, {\n        hover: true,\n        className: classes.row,\n        tabIndex: -1,\n        key: n.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, n.primaryAccountHolder), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, n.client), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, n.accountType), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, n.phone), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, n.email), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, n.primaryPayMethod), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, n.currentBal), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, n.lastPayDate));\n    }), emptyRows > 0 && React.createElement(TableRow, {\n      style: {\n        height: 49 * emptyRows\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      colSpan: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }))))), React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 15, 20],\n      component: \"div\",\n      count: data.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        \"aria-label\": \"Previous Page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"Next Page\"\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }));\n  }\n\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(EnhancedTable);","map":{"version":3,"sources":["/Users/kenneth/repos/MTSaaSRepo/mtsaas/src/accountsTable.js"],"names":["React","classNames","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","FilterListIcon","lighten","lightBlue","counter","createData","primaryAccountHolder","client","accountType","phone","email","primaryPayMethod","currentBal","lastPayDate","id","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","rows","label","CustomTableCell","theme","head","backgroundColor","color","palette","common","white","fontSize","body","EnhancedTableHead","Component","createSortHandler","property","event","props","onRequestSort","render","row","propTypes","func","isRequired","string","styles","root","width","marginTop","spacing","unit","marginLeft","marginRight","marginBottom","overflowX","table","tableWrapper","background","default","EnhancedTable","state","data","page","rowsPerPage","handleRequestSort","setState","handleChangePage","handleChangeRowsPerPage","target","value","classes","emptyRows","Math","min","length","slice","n","height","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { lightBlue } from \"@material-ui/core/colors\";\n\nlet counter = 0;\nfunction createData(\n  primaryAccountHolder,\n  client,\n  accountType,\n  phone,\n  email,\n  primaryPayMethod,\n  currentBal,\n  lastPayDate\n) {\n  counter += 1;\n  return {\n    id: counter,\n    primaryAccountHolder,\n    client,\n    accountType,\n    phone,\n    email,\n    primaryPayMethod,\n    currentBal,\n    lastPayDate\n  };\n}\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [\n  { id: \"primaryAccountHolder\", label: \"Primary Account Holder\" },\n  { id: \"client\", label: \"Client if different from primary\" },\n  { id: \"accountType\", label: \"Account Type\" },\n  { id: \"phone\", label: \"Phone\" },\n  { id: \"email\", label: \"Email\" },\n  { id: \"primaryPayMethod\", label: \"Primary Payment Method\" },\n  { id: \"currentBal\", label: \"Current Balance\" },\n  { id: \"lastPayDate\", label: \"Last Payment Date\" }\n];\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: lightBlue[400],\n    color: theme.palette.common.white,\n    fontSize: 15\n  },\n  body: {\n    fontSize: 12\n  }\n}))(TableCell);\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const { order, orderBy } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          {rows.map(\n            row => (\n              <CustomTableCell\n                key={row.id}\n                align=\"center\"\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <TableSortLabel\n                  active={orderBy === row.id}\n                  direction={order}\n                  onClick={this.createSortHandler(row.id)}\n                >\n                  {row.label}\n                </TableSortLabel>\n              </CustomTableCell>\n            ),\n            this\n          )}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired\n  //rowCount: PropTypes.number.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit * -5,\n    marginRight: theme.spacing.unit * 10,\n    marginBottom: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    //minWidth: 400,\n    width: \"100%\"\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n});\n\nclass EnhancedTable extends React.Component {\n  state = {\n    order: \"\",\n    orderBy: \"\",\n    data: [\n      createData(\n        \"Smith, Mary\",\n        \"Smith, Joe\",\n        \"Family\",\n        \"123-456-7899\",\n        \"mary@mail.com\",\n        \"Cash\",\n        \"$30\",\n        \"2/10/19\"\n      ),\n      createData(\n        \"Johnson, Jack\",\n        \"\",\n        \"Individual\",\n        \"123-456-7899\",\n        \"jack@mail.com\",\n        \"Card\",\n        \"$0\",\n        \"3/15/19\"\n      ),\n      createData(\n        \"Smith, Mary\",\n        \"Smith, Joe\",\n        \"Family\",\n        \"123-456-7899\",\n        \"mary@mail.com\",\n        \"Cash\",\n        \"$30\",\n        \"2/10/19\"\n      ),\n      createData(\n        \"Smith, Mary\",\n        \"Smith, Joe\",\n        \"Family\",\n        \"123-456-7899\",\n        \"mary@mail.com\",\n        \"Cash\",\n        \"$30\",\n        \"2/10/19\"\n      ),\n\n      createData(\n        \"Smith, Mary\",\n        \"Smith, Joe\",\n        \"Family\",\n        \"123-456-7899\",\n        \"mary@mail.com\",\n        \"Cash\",\n        \"$30\",\n        \"2/10/19\"\n      ),\n      createData(\n        \"Johnson, Jack\",\n        \"\",\n        \"Individual\",\n        \"123-456-7899\",\n        \"jack@mail.com\",\n        \"Card\",\n        \"$0\",\n        \"3/15/19\"\n      ),\n      createData(\n        \"Smith, Mary\",\n        \"Smith, Joe\",\n        \"Family\",\n        \"123-456-7899\",\n        \"mary@mail.com\",\n        \"Cash\",\n        \"$30\",\n        \"2/10/19\"\n      ),\n      createData(\n        \"Smith, Mary\",\n        \"Smith, Joe\",\n        \"Family\",\n        \"123-456-7899\",\n        \"mary@mail.com\",\n        \"Cash\",\n        \"$30\",\n        \"2/10/19\"\n      )\n    ],\n    page: 0,\n    rowsPerPage: 5\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = \"desc\";\n\n    if (this.state.orderBy === property && this.state.order === \"desc\") {\n      order = \"asc\";\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  // isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  render() {\n    const { classes } = this.props;\n    const { data, order, orderBy, rowsPerPage, page } = this.state;\n    const emptyRows =\n      rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\n            <EnhancedTableHead\n              //numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={this.handleRequestSort}\n              rowCount={data.length}\n            />\n            <TableBody>\n              {stableSort(data, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(n => {\n                  // const isSelected = this.isSelected(n.id);\n                  return (\n                    <TableRow\n                      hover\n                      className={classes.row}\n                      tabIndex={-1}\n                      key={n.id}\n                    >\n                      <TableCell align=\"center\">\n                        {n.primaryAccountHolder}\n                      </TableCell>\n                      <TableCell align=\"center\">{n.client}</TableCell>\n                      <TableCell align=\"center\">{n.accountType}</TableCell>\n                      <TableCell align=\"center\">{n.phone}</TableCell>\n                      <TableCell align=\"center\">{n.email}</TableCell>\n                      <TableCell align=\"center\">{n.primaryPayMethod}</TableCell>\n                      <TableCell align=\"center\">{n.currentBal}</TableCell>\n                      <TableCell align=\"center\">{n.lastPayDate}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            \"aria-label\": \"Previous Page\"\n          }}\n          nextIconButtonProps={{\n            \"aria-label\": \"Next Page\"\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </Paper>\n    );\n  }\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EnhancedTable);\n"]},"metadata":{},"sourceType":"module"}