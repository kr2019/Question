{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/clientNoteHistoryTableOld.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: lightBlue[400],\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    //the width might have to change to actual number\n    width: \"650\",\n    marginTop: theme.spacing.unit * 5,\n    marginLeft: theme.spacing.unit * 18,\n    marginBottom: theme.spacing.unit * 10,\n    overflowX: \"auto\"\n  },\n  state: {\n    // open: false,\n    //openV: false\n    multiline: \"Controlled\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit //marginRight: theme.spacing.unit,\n\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    //marginRight: theme.spacing.unit,\n    width: 400\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n});\n\nlet id = 0;\n\nfunction createData(noteName, sessionDate, noteDate) {\n  id += 1;\n  return {\n    id,\n    noteName,\n    sessionDate,\n    noteDate\n  };\n}\n\nconst rows = [createData(\"Note Name 1\", \"1/5/19\", \"1/7/19\"), createData(\"Note Name 2\", \"1/12/19\", \"1/13/19\"), createData(\"Note Name 3\", \"1/19/19\", \"1/19/19\"), createData(\"Note Name 4\", \"1/26/19\", \"1/30/19\")];\n\nclass assignedClientsTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      openV: false,\n      sessionDateP: \"1/5/19\",\n      note: \"This is was an amazing session!\",\n      noteName: \"Note 1\"\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleClickOpenV = () => {\n      this.setState({\n        openV: true\n      });\n    };\n\n    this.handleCloseV = () => {\n      this.setState({\n        openV: false\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(CustomTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Note Name\"), React.createElement(CustomTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Session Date\"), React.createElement(CustomTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Note Date\"))), React.createElement(Dialog, {\n      open: this.state.openV,\n      onClose: this.handleCloseV,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Session Notes\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-date\",\n      label: \"Note Title\",\n      variant: \"outlined\",\n      InputProps: {\n        readOnly: true\n      },\n      className: classes.textField,\n      value: this.state.noteName //onChange={this.handleChange(\"noteName\")}\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-payor\",\n      label: \"Session Date\",\n      variant: \"outlined\",\n      InputProps: {\n        readOnly: true\n      },\n      className: classes.textField,\n      value: this.state.sessionDateP // onChange={this.handleChange(\"sessionDateP\")}\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-amount\",\n      label: \"Notes\",\n      variant: \"outlined\",\n      multiline: true,\n      InputProps: {\n        readOnly: true\n      },\n      rows: \"15\",\n      className: classes.textField2,\n      value: this.state.note // onChange={this.handleChange(\"note\")}\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleCloseV,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleCloseV,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, rows.map(row => React.createElement(TableRow, {\n      hover: true,\n      onClick: this.handleClickOpenV,\n      className: classes.row,\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(CustomTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, row.noteName), React.createElement(CustomTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, row.sessionDate), React.createElement(CustomTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, row.noteDate))))));\n  }\n\n}\n\nassignedClientsTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(assignedClientsTable);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/clientNoteHistoryTableOld.js"],"names":["React","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","lightBlue","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","CustomTableCell","theme","head","backgroundColor","color","palette","common","white","body","fontSize","styles","root","width","marginTop","spacing","unit","marginLeft","marginBottom","overflowX","state","multiline","textField","textField2","row","background","default","id","createData","noteName","sessionDate","noteDate","rows","assignedClientsTable","Component","open","openV","sessionDateP","note","handleChange","name","event","setState","target","checked","handleClickOpen","handleClose","handleClickOpenV","handleCloseV","render","classes","props","table","readOnly","map","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,MAAMC,eAAe,GAAGd,UAAU,CAACe,KAAK,KAAK;AAC3CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAEV,SAAS,CAAC,GAAD,CADtB;AAEJW,IAAAA,KAAK,EAAEH,KAAK,CAACI,OAAN,CAAcC,MAAd,CAAqBC;AAFxB,GADqC;AAK3CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AALqC,CAAL,CAAN,CAAV,CAQpBpB,SARoB,CAAxB;;AAUA,MAAMqB,MAAM,GAAGT,KAAK,KAAK;AACvBU,EAAAA,IAAI,EAAE;AACJ;AACAC,IAAAA,KAAK,EAAE,KAFH;AAGJC,IAAAA,SAAS,EAAEZ,KAAK,CAACa,OAAN,CAAcC,IAAd,GAAqB,CAH5B;AAIJC,IAAAA,UAAU,EAAEf,KAAK,CAACa,OAAN,CAAcC,IAAd,GAAqB,EAJ7B;AAKJE,IAAAA,YAAY,EAAEhB,KAAK,CAACa,OAAN,CAAcC,IAAd,GAAqB,EAL/B;AAMJG,IAAAA,SAAS,EAAE;AANP,GADiB;AASvBC,EAAAA,KAAK,EAAE;AACL;AACA;AACAC,IAAAA,SAAS,EAAE;AAHN,GATgB;AAevBC,EAAAA,SAAS,EAAE;AACTL,IAAAA,UAAU,EAAEf,KAAK,CAACa,OAAN,CAAcC,IADjB,CAET;;AAFS,GAfY;AAoBvBO,EAAAA,UAAU,EAAE;AACVN,IAAAA,UAAU,EAAEf,KAAK,CAACa,OAAN,CAAcC,IADhB;AAEV;AACAH,IAAAA,KAAK,EAAE;AAHG,GApBW;AA0BvBW,EAAAA,GAAG,EAAE;AACH,0BAAsB;AACpBpB,MAAAA,eAAe,EAAEF,KAAK,CAACI,OAAN,CAAcmB,UAAd,CAAyBC;AADtB;AADnB;AA1BkB,CAAL,CAApB;;AAiCA,IAAIC,EAAE,GAAG,CAAT;;AACA,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,QAA3C,EAAqD;AACnDJ,EAAAA,EAAE,IAAI,CAAN;AACA,SAAO;AAAEA,IAAAA,EAAF;AAAME,IAAAA,QAAN;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA;AAA7B,GAAP;AACD;;AAED,MAAMC,IAAI,GAAG,CACXJ,UAAU,CAAC,aAAD,EAAgB,QAAhB,EAA0B,QAA1B,CADC,EAEXA,UAAU,CAAC,aAAD,EAAgB,SAAhB,EAA2B,SAA3B,CAFC,EAGXA,UAAU,CAAC,aAAD,EAAgB,SAAhB,EAA2B,SAA3B,CAHC,EAIXA,UAAU,CAAC,aAAD,EAAgB,SAAhB,EAA2B,SAA3B,CAJC,CAAb;;AAOA,MAAMK,oBAAN,SAAmChD,KAAK,CAACiD,SAAzC,CAAmD;AAAA;AAAA;AAAA,SACjDd,KADiD,GACzC;AACNe,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,KAAK,EAAE,KAFD;AAGNC,MAAAA,YAAY,EAAE,QAHR;AAINC,MAAAA,IAAI,EAAE,iCAJA;AAKNT,MAAAA,QAAQ,EAAE;AALJ,KADyC;;AAAA,SAUjDU,YAViD,GAUlCC,IAAI,IAAIC,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQC,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AACD,KAZgD;;AAAA,SAejDC,eAfiD,GAe/B,MAAM;AACtB,WAAKH,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAjBgD;;AAAA,SAoBjDW,WApBiD,GAoBnC,MAAM;AAClB,WAAKJ,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAtBgD;;AAAA,SAyBjDY,gBAzBiD,GAyB9B,MAAM;AACvB,WAAKL,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KA3BgD;;AAAA,SA8BjDY,YA9BiD,GA8BlC,MAAM;AACnB,WAAKN,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAhCgD;AAAA;;AAkCjDa,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAGP,WACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEA,OAAO,CAACtC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEsC,OAAO,CAACE,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CADF,CADF,EASE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWgB,KAAzB;AAAgC,MAAA,OAAO,EAAE,KAAKY,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,eADL;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,UAAU,EAAE;AACVK,QAAAA,QAAQ,EAAE;AADA,OAJd;AAOE,MAAA,SAAS,EAAEH,OAAO,CAAC5B,SAPrB;AAQE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWS,QARpB,CASE;AATF;AAUE,MAAA,MAAM,EAAC,QAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAaE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,UAAU,EAAE;AACVwB,QAAAA,QAAQ,EAAE;AADA,OAJd;AAOE,MAAA,SAAS,EAAEH,OAAO,CAAC5B,SAPrB;AAQE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWiB,YARpB,CASE;AATF;AAUE,MAAA,MAAM,EAAC,QAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAyBE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,iBADL;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,UAAU,EAAE;AACVgB,QAAAA,QAAQ,EAAE;AADA,OALd;AAQE,MAAA,IAAI,EAAC,IARP;AASE,MAAA,SAAS,EAAEH,OAAO,CAAC3B,UATrB;AAUE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWkB,IAVpB,CAWE;AAXF;AAYE,MAAA,MAAM,EAAC,QAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,CAFF,EA0CE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKU,YAAtB;AAAoC,MAAA,KAAK,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKA,YAAtB;AAAoC,MAAA,KAAK,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CA1CF,CATF,EA6DE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhB,IAAI,CAACsB,GAAL,CAAS9B,GAAG,IACX,oBAAC,QAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,OAAO,EAAE,KAAKuB,gBAFhB;AAGE,MAAA,SAAS,EAAEG,OAAO,CAAC1B,GAHrB;AAIE,MAAA,GAAG,EAAEA,GAAG,CAACG,EAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCH,GAAG,CAACK,QAArC,CANF,EAOE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,GAAG,CAACM,WADP,CAPF,EAUE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCN,GAAG,CAACO,QAArC,CAVF,CADD,CADH,CA7DF,CADF,CADF;AAkFD;;AAvHgD;;AA0HnDE,oBAAoB,CAACsB,SAArB,GAAiC;AAC/BL,EAAAA,OAAO,EAAEhE,SAAS,CAACsE,MAAV,CAAiBC;AADK,CAAjC;AAIA,eAAetE,UAAU,CAACwB,MAAD,CAAV,CAAmBsB,oBAAnB,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: lightBlue[400],\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    //the width might have to change to actual number\n    width: \"650\",\n    marginTop: theme.spacing.unit * 5,\n    marginLeft: theme.spacing.unit * 18,\n    marginBottom: theme.spacing.unit * 10,\n    overflowX: \"auto\"\n  },\n  state: {\n    // open: false,\n    //openV: false\n    multiline: \"Controlled\"\n  },\n\n  textField: {\n    marginLeft: theme.spacing.unit\n    //marginRight: theme.spacing.unit,\n  },\n\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    //marginRight: theme.spacing.unit,\n    width: 400\n  },\n\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n});\n\nlet id = 0;\nfunction createData(noteName, sessionDate, noteDate) {\n  id += 1;\n  return { id, noteName, sessionDate, noteDate };\n}\n\nconst rows = [\n  createData(\"Note Name 1\", \"1/5/19\", \"1/7/19\"),\n  createData(\"Note Name 2\", \"1/12/19\", \"1/13/19\"),\n  createData(\"Note Name 3\", \"1/19/19\", \"1/19/19\"),\n  createData(\"Note Name 4\", \"1/26/19\", \"1/30/19\")\n];\n\nclass assignedClientsTable extends React.Component {\n  state = {\n    open: false,\n    openV: false,\n    sessionDateP: \"1/5/19\",\n    note: \"This is was an amazing session!\",\n    noteName: \"Note 1\"\n  };\n\n  /* change of team member dropdown */\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  /* show assign client diaglog box */\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  /* close assign client diaglog box */\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  /* show date range diaglog box */\n  handleClickOpenV = () => {\n    this.setState({ openV: true });\n  };\n\n  /* close date range diaglog box */\n  handleCloseV = () => {\n    this.setState({ openV: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Paper className={classes.root}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <CustomTableCell align=\"center\">Note Name</CustomTableCell>\n              <CustomTableCell align=\"center\">Session Date</CustomTableCell>\n              <CustomTableCell align=\"center\">Note Date</CustomTableCell>\n            </TableRow>\n          </TableHead>\n\n          <Dialog open={this.state.openV} onClose={this.handleCloseV}>\n            <DialogTitle id=\"form-dialog-title\">Session Notes</DialogTitle>\n            <DialogContent>\n              <TextField\n                id=\"standard-date\"\n                label=\"Note Title\"\n                variant=\"outlined\"\n                InputProps={{\n                  readOnly: true\n                }}\n                className={classes.textField}\n                value={this.state.noteName}\n                //onChange={this.handleChange(\"noteName\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-payor\"\n                label=\"Session Date\"\n                variant=\"outlined\"\n                InputProps={{\n                  readOnly: true\n                }}\n                className={classes.textField}\n                value={this.state.sessionDateP}\n                // onChange={this.handleChange(\"sessionDateP\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-amount\"\n                label=\"Notes\"\n                variant=\"outlined\"\n                multiline\n                InputProps={{\n                  readOnly: true\n                }}\n                rows=\"15\"\n                className={classes.textField2}\n                value={this.state.note}\n                // onChange={this.handleChange(\"note\")}\n                margin=\"normal\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleCloseV} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={this.handleCloseV} color=\"primary\">\n                Save\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <TableBody>\n            {rows.map(row => (\n              <TableRow\n                hover\n                onClick={this.handleClickOpenV}\n                className={classes.row}\n                key={row.id}\n              >\n                <CustomTableCell align=\"center\">{row.noteName}</CustomTableCell>\n                <CustomTableCell align=\"center\">\n                  {row.sessionDate}\n                </CustomTableCell>\n                <CustomTableCell align=\"center\">{row.noteDate}</CustomTableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n\nassignedClientsTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(assignedClientsTable);\n"]},"metadata":{},"sourceType":"module"}