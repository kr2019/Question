{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/assignClientActions.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PermIdentity from \"@material-ui/icons/PermIdentity\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  root: {\n    // paddingTop: theme.spacing.unit * 2,\n    //paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 5 // marginLeft: theme.spacing.unit * 33.5,\n    //align: \"center\",\n    // width: \"175\"\n\n  },\n  button: {//margin: theme.spacing.unit,\n    // width: 160\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  dialogTitle: {\n    marginBottom: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n  menu: {\n    width: 200\n  }\n});\n\nconst clients = [{\n  value: \"John Smith\",\n  label: \"John Smith\"\n}, {\n  value: \"Jill Smith\",\n  label: \"Jill Smith\"\n}, {\n  value: \"Ashley Flowers\",\n  label: \"Ashley Flowers\"\n}];\nconst sessionType = [{\n  value: \"Lessons\",\n  label: \"Lessons\"\n}, {\n  value: \"Therapy\",\n  label: \"Therapy\"\n}];\n\nclass AssignedClientActions extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      member: \"Harry Potter\",\n      clientData: [],\n      open: false,\n      clientFirst: \"\",\n      clientLast: \"\",\n      sessionCost: \"\",\n      sessionLength: \"\",\n      sessionType: \"\"\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/clientlist\").then(response => {\n      console.log(\"Got client data!\");\n      console.log(response.data);\n      this.setState({\n        clientData: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Client interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n    const obj = {\n      client: this.state.client,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLength,\n      sessionType: this.state.sessionType\n    };\n    axios.post(\"http://localhost:5000/assignClients/assignclient1\", obj).then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      client: this.state.client,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLength,\n      sessionType: this.state.sessionType\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const clientData = this.state.clientData;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"row-reverse\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.handleClickOpen,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      className: classNames(classes.leftIcon, classes.iconSmall),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), \"Assign Client\"), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Assign Client\"), React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-client\",\n      select: true,\n      label: \"Clients\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.state.clientFirst + this.state.clientLast,\n      onChange: this.handleChange(\"clientFirst\" & \"clientLast\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, clientData.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.first_name + option.last_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, option.first_name + \" \" + option.last_name))), React.createElement(TextField, {\n      id: \"standard-select-sessionType\",\n      select: true,\n      label: \"Session Type\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.state.sessionType,\n      onChange: this.handleChange(\"sessionType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, sessionType.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-cost\",\n      label: \"Session Cost (dollars)\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.sessionCost,\n      onChange: this.handleChange(\"sessionCost\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-length\",\n      label: \"Session Length (minutes)\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.sessionLength,\n      onChange: this.handleChange(\"sessionLength\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: () => {\n        this.onSubmit(this.state.client, this.state.sessionCost, this.state.sessionLength, this.state.sessionType); //this.reloadPage();\n      },\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Save\"))))));\n  }\n\n}\n\nAssignedClientActions.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(AssignedClientActions);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/assignClientActions.js"],"names":["React","PropTypes","withStyles","Paper","Typography","classNames","Button","AddIcon","PermIdentity","MenuItem","TextField","Dialog","DialogActions","DialogContent","DialogTitle","Grid","axios","styles","theme","root","marginTop","spacing","unit","button","leftIcon","marginRight","rightIcon","marginLeft","dialogTitle","marginBottom","iconSmall","fontSize","textField","width","menu","clients","value","label","sessionType","AssignedClientActions","Component","state","member","clientData","open","clientFirst","clientLast","sessionCost","sessionLength","handleChange","name","event","setState","target","handleClickOpen","handleClose","componentDidMount","get","then","response","console","log","data","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","onSubmit","obj","client","post","res","render","classes","props","container","MenuProps","className","map","option","first_name","last_name","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PermIdentity from \"@material-ui/icons/PermIdentity\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  root: {\n    // paddingTop: theme.spacing.unit * 2,\n    //paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 5\n    // marginLeft: theme.spacing.unit * 33.5,\n    //align: \"center\",\n    // width: \"175\"\n  },\n  button: {\n    //margin: theme.spacing.unit,\n    // width: 160\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  dialogTitle: {\n    marginBottom: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n  menu: {\n    width: 200\n  }\n});\n\nconst clients = [\n  {\n    value: \"John Smith\",\n    label: \"John Smith\"\n  },\n\n  {\n    value: \"Jill Smith\",\n    label: \"Jill Smith\"\n  },\n  {\n    value: \"Ashley Flowers\",\n    label: \"Ashley Flowers\"\n  }\n];\n\nconst sessionType = [\n  {\n    value: \"Lessons\",\n    label: \"Lessons\"\n  },\n\n  {\n    value: \"Therapy\",\n    label: \"Therapy\"\n  }\n];\n\nclass AssignedClientActions extends React.Component {\n  state = {\n    member: \"Harry Potter\",\n    clientData: [],\n    open: false,\n    clientFirst: \"\",\n    clientLast: \"\",\n    sessionCost: \"\",\n    sessionLength: \"\",\n    sessionType: \"\"\n  };\n\n  /* change of team member dropdown */\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  /* show assign client diaglog box */\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  /* close assign client diaglog box */\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/clientlist\")\n      .then(response => {\n        console.log(\"Got client data!\");\n        console.log(response.data);\n        this.setState({\n          clientData: response.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Client interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n\n    const obj = {\n      client: this.state.client,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLength,\n      sessionType: this.state.sessionType\n    };\n    axios\n      .post(\"http://localhost:5000/assignClients/assignclient1\", obj)\n      .then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      client: this.state.client,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLength,\n      sessionType: this.state.sessionType\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { clientData } = this.state;\n\n    return (\n      <div>\n        <Grid\n          container\n          direction=\"row-reverse\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Paper className={classes.root} elevation={7}>\n            {/* Assign client button */}\n            <Button\n              variant=\"contained\"\n              onClick={this.handleClickOpen}\n              className={classes.button}\n            >\n              <AddIcon\n                className={classNames(classes.leftIcon, classes.iconSmall)}\n              />\n              Assign Client\n            </Button>\n            <Dialog open={this.state.open} onClose={this.handleClose}>\n              <DialogTitle id=\"form-dialog-title\">Assign Client</DialogTitle>\n              <form className={classes.container} noValidate autoComplete=\"off\">\n                <DialogContent>\n                  <TextField\n                    id=\"standard-select-client\"\n                    select\n                    label=\"Clients\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    className={classes.textField}\n                    value={this.state.clientFirst + this.state.clientLast}\n                    onChange={this.handleChange(\"clientFirst\" & \"clientLast\")}\n                    SelectProps={{\n                      MenuProps: {\n                        className: classes.menu\n                      }\n                    }}\n                  >\n                    {clientData.map(option => (\n                      <MenuItem\n                        key={option.value}\n                        value={option.first_name + option.last_name}\n                      >\n                        {option.first_name + \" \" + option.last_name}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                  <TextField\n                    id=\"standard-select-sessionType\"\n                    select\n                    label=\"Session Type\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    className={classes.textField}\n                    value={this.state.sessionType}\n                    onChange={this.handleChange(\"sessionType\")}\n                    SelectProps={{\n                      MenuProps: {\n                        className: classes.menu\n                      }\n                    }}\n                  >\n                    {sessionType.map(option => (\n                      <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                  <TextField\n                    id=\"standard-cost\"\n                    label=\"Session Cost (dollars)\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.sessionCost}\n                    onChange={this.handleChange(\"sessionCost\")}\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    id=\"standard-length\"\n                    label=\"Session Length (minutes)\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.sessionLength}\n                    onChange={this.handleChange(\"sessionLength\")}\n                    margin=\"normal\"\n                  />\n                </DialogContent>\n              </form>\n              <DialogActions>\n                <Button onClick={this.handleClose} color=\"primary\">\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => {\n                    this.onSubmit(\n                      this.state.client,\n                      this.state.sessionCost,\n                      this.state.sessionLength,\n                      this.state.sessionType\n                    );\n                    //this.reloadPage();\n                  }}\n                  color=\"primary\"\n                >\n                  Save\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Paper>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nAssignedClientActions.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AssignedClientActions);\n"]},"metadata":{},"sourceType":"module"}