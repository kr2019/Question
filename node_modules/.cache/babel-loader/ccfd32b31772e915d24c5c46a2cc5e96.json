{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/Tables/backEndAssignedClientsTable.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport Container from \"@material-ui/core/Container\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ClientPanelTabs from \"../Client/clientPanelTabs\";\nimport { Switch, Link, Route, withRouter, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n/*\nlet counter = 0;\nfunction createData(name, role, email, phone, clients) {\n  counter += 1;\n  return { id: counter, name, role, email, phone, clients };\n}\n*/\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [{\n  id: \"client_first_name\",\n  label: \"First\"\n}, {\n  id: \"client_last_name\",\n  label: \"Last\"\n}, {\n  id: \"phone\",\n  label: \"Phone\"\n}, {\n  id: \"email\",\n  label: \"Email\"\n}, {\n  id: \"facility\",\n  label: \"Facility\" // { id: \"clients\", label: \"Clients\" }\n\n}];\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    //backgroundColor: lightBlue[400],\n    backgroundColor: Cyan[800],\n    color: theme.palette.common.white,\n    fontSize: 15\n  },\n  body: {\n    fontSize: 12\n  }\n}))(TableCell);\n\nclass EnhancedTableHead extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createSortHandler = property => event => {\n      this.props.onRequestSort(event, property);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy;\n    return React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, rows.map(row => React.createElement(CustomTableCell, {\n      key: row.id,\n      align: \"center\",\n      sortDirection: orderBy === row.id ? order : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(TableSortLabel, {\n      active: orderBy === row.id,\n      direction: order,\n      onClick: this.createSortHandler(row.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, row.label)), this)));\n  }\n\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired //rowCount: PropTypes.number.isRequired,\n\n};\n\nconst styles = theme => ({\n  root: {\n    //width: \"60%\",\n    marginTop: theme.spacing.unit * 3,\n    // marginLeft: theme.spacing.unit * 30,\n    overflowX: \"auto\"\n  },\n  table: {//minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  },\n  appBar: {\n    position: \"relative\",\n    backgroundColor: Cyan[800]\n  },\n  flex: {\n    flex: 1\n  }\n});\n\nconst navStyle = {\n  color: \"black\",\n  textDecoration: \"none\"\n};\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }));\n}\n\nclass EnhancedTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      order: \"\",\n      //open: false,\n      orderBy: \"\",\n      clientData: [],\n      selectedIndex: null,\n      page: 0,\n      rowsPerPage: 5\n    };\n\n    this.handleRequestSort = (event, property) => {\n      const orderBy = property;\n      let order = \"desc\";\n\n      if (this.state.orderBy === property && this.state.order === \"desc\") {\n        order = \"asc\";\n      }\n\n      this.setState({\n        order,\n        orderBy\n      });\n    };\n\n    this.handleChangePage = (event, page) => {\n      this.setState({\n        page\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/clientsInfo\").then(response => {\n      console.log(\"Got client data!\");\n      console.log(response.data);\n      this.setState({\n        clientData: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Client interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  // isSelected = id => this.state.selected.indexOf(id) !== -1;\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          clientData = _this$state.clientData,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, clientData.length - page * rowsPerPage);\n    return React.createElement(Container, {\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.tableWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      fullScreen: true,\n      open: this.state.open,\n      onClose: this.handleClose,\n      TransitionComponent: Transition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      className: classes.appBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.handleClose //aria-label=\"Close\"\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"inherit\",\n      className: classes.flex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Client Details\"))), React.createElement(ClientPanelTabs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    })), React.createElement(Table\n    /* className={classes.table} */\n    , {\n      \"aria-labelledby\": \"tableTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(EnhancedTableHead //numSelected={selected.length}\n    , {\n      order: order,\n      orderBy: orderBy,\n      onRequestSort: this.handleRequestSort,\n      rowCount: clientData.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, stableSort(clientData, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(n => {\n      // const isSelected = this.isSelected(n.id);\n      return React.createElement(TableRow, {\n        hover: true,\n        className: classes.row,\n        tabIndex: -1,\n        key: n.id,\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, n.client_first_name), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, n.client_last_name), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, n.phone), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, n.email), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, n.facility));\n    }), emptyRows > 0 && React.createElement(TableRow, {\n      style: {\n        height: 49 * emptyRows\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      colSpan: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }))))), React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 15, 20],\n      component: \"div\",\n      count: clientData.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        \"aria-label\": \"Previous Page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"Next Page\"\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    })));\n  }\n\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(EnhancedTable);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/Tables/backEndAssignedClientsTable.js"],"names":["React","classNames","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","FilterListIcon","lighten","lightBlue","Cyan","Container","Slide","Dialog","AppBar","Button","CloseIcon","ClientPanelTabs","Switch","Link","Route","withRouter","Redirect","axios","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","rows","id","label","CustomTableCell","theme","head","backgroundColor","color","palette","common","white","fontSize","body","EnhancedTableHead","Component","createSortHandler","property","event","props","onRequestSort","render","row","propTypes","func","isRequired","string","styles","root","marginTop","spacing","unit","overflowX","table","tableWrapper","background","default","appBar","position","flex","navStyle","textDecoration","Transition","EnhancedTable","state","clientData","selectedIndex","page","rowsPerPage","handleRequestSort","setState","handleChangePage","handleChangeRowsPerPage","target","value","handleClickOpen","open","handleClose","componentDidMount","get","then","response","console","log","data","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","classes","emptyRows","Math","min","length","slice","n","client_first_name","client_last_name","phone","email","facility","height","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport Container from \"@material-ui/core/Container\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ClientPanelTabs from \"../Client/clientPanelTabs\";\nimport { Switch, Link, Route, withRouter, Redirect } from \"react-router-dom\";\n\nimport axios from \"axios\";\n/*\nlet counter = 0;\nfunction createData(name, role, email, phone, clients) {\n  counter += 1;\n  return { id: counter, name, role, email, phone, clients };\n}\n*/\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [\n  { id: \"client_first_name\", label: \"First\" },\n  { id: \"client_last_name\", label: \"Last\" },\n  { id: \"phone\", label: \"Phone\" },\n  { id: \"email\", label: \"Email\" },\n  { id: \"facility\", label: \"Facility\" }\n  // { id: \"clients\", label: \"Clients\" }\n];\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    //backgroundColor: lightBlue[400],\n    backgroundColor: Cyan[800],\n    color: theme.palette.common.white,\n    fontSize: 15\n  },\n  body: {\n    fontSize: 12\n  }\n}))(TableCell);\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const { order, orderBy } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          {rows.map(\n            row => (\n              <CustomTableCell\n                key={row.id}\n                align=\"center\"\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <TableSortLabel\n                  active={orderBy === row.id}\n                  direction={order}\n                  onClick={this.createSortHandler(row.id)}\n                >\n                  {row.label}\n                </TableSortLabel>\n              </CustomTableCell>\n            ),\n            this\n          )}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired\n  //rowCount: PropTypes.number.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    //width: \"60%\",\n    marginTop: theme.spacing.unit * 3,\n    // marginLeft: theme.spacing.unit * 30,\n    overflowX: \"auto\"\n  },\n  table: {\n    //minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  },\n  appBar: {\n    position: \"relative\",\n    backgroundColor: Cyan[800]\n  },\n  flex: {\n    flex: 1\n  }\n});\n\nconst navStyle = {\n  color: \"black\",\n  textDecoration: \"none\"\n};\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass EnhancedTable extends React.Component {\n  state = {\n    order: \"\",\n    //open: false,\n    orderBy: \"\",\n    clientData: [],\n    selectedIndex: null,\n    page: 0,\n    rowsPerPage: 5\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/clientsInfo\")\n      .then(response => {\n        console.log(\"Got client data!\");\n        console.log(response.data);\n        this.setState({\n          clientData: response.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Client interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = \"desc\";\n\n    if (this.state.orderBy === property && this.state.order === \"desc\") {\n      order = \"asc\";\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  //show client details box;\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  // isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  render() {\n    const { classes } = this.props;\n    const { clientData, order, orderBy, rowsPerPage, page } = this.state;\n    const emptyRows =\n      rowsPerPage -\n      Math.min(rowsPerPage, clientData.length - page * rowsPerPage);\n\n    return (\n      <Container maxWidth=\"lg\">\n        <Paper className={classes.root}>\n          <div className={classes.tableWrapper}>\n            <Dialog\n              fullScreen\n              open={this.state.open}\n              onClose={this.handleClose}\n              TransitionComponent={Transition}\n            >\n              <AppBar className={classes.appBar}>\n                <Toolbar>\n                  <IconButton\n                    color=\"inherit\"\n                    onClick={this.handleClose}\n                    //aria-label=\"Close\"\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                  <Typography\n                    variant=\"h6\"\n                    color=\"inherit\"\n                    className={classes.flex}\n                  >\n                    Client Details\n                  </Typography>\n                  {/*\n                  <Button color=\"inherit\" onClick={this.handleClose}>\n                    save\n                  </Button>\n                 */}\n                </Toolbar>\n              </AppBar>\n              <ClientPanelTabs />\n            </Dialog>\n\n            <Table /* className={classes.table} */ aria-labelledby=\"tableTitle\">\n              <EnhancedTableHead\n                //numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={this.handleRequestSort}\n                rowCount={clientData.length}\n              />\n              <TableBody>\n                {stableSort(clientData, getSorting(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map(n => {\n                    // const isSelected = this.isSelected(n.id);\n                    return (\n                      <TableRow\n                        hover\n                        className={classes.row}\n                        tabIndex={-1}\n                        key={n.id}\n                        onClick={this.handleClickOpen}\n                      >\n                        <TableCell align=\"center\">\n                          {n.client_first_name}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {n.client_last_name}\n                        </TableCell>\n                        <TableCell align=\"center\">{n.phone}</TableCell>\n                        <TableCell align=\"center\">{n.email}</TableCell>\n                        <TableCell align=\"center\">{n.facility}</TableCell>\n                        {/* <TableCell align=\"center\">{n.clients}</TableCell> */}\n                      </TableRow>\n                    );\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: 49 * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 15, 20]}\n            component=\"div\"\n            count={clientData.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"Previous Page\"\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"Next Page\"\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Container>\n    );\n  }\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EnhancedTable);\n"]},"metadata":{},"sourceType":"module"}