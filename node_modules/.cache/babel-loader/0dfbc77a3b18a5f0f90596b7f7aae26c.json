{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/noteTemplatesTable.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\n/*\nlet counter = 0;\nfunction createData(name, role, email, phone, clients) {\n  counter += 1;\n  return { id: counter, name, role, email, phone, clients };\n}\n*/\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [{\n  id: \"template\",\n  label: \"Template\"\n}, {\n  id: \"visibleToTherapist\",\n  label: \"Visible to Therapist\"\n}, {\n  id: \"dateCreated\",\n  label: \"Date Created\" // Prev File\n\n  /*   { id: \"name\", label: \"Name\" },\n  { id: \"phone\", label: \"Phone\" },\n  { id: \"email\", label: \"Email\" },\n  { id: \"therapist\", label: \"Therapist\" },\n  { id: \"facility\", label: \"Facility\" } */\n  // { id: \"clients\", label: \"Clients\" }\n\n}];\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    //backgroundColor: lightBlue[400],\n    backgroundColor: Cyan[800],\n    color: theme.palette.common.white,\n    fontSize: 15\n  },\n  body: {\n    fontSize: 12\n  }\n}))(TableCell);\n\nclass EnhancedTableHead extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createSortHandler = property => event => {\n      this.props.onRequestSort(event, property);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          onSelectAllClick = _this$props.onSelectAllClick,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy,\n          numSelected = _this$props.numSelected,\n          rowCount = _this$props.rowCount;\n    return React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(CustomTableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      indeterminate: numSelected > 0 && numSelected < rowCount,\n      checked: numSelected === rowCount,\n      onChange: onSelectAllClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), rows.map(row => React.createElement(CustomTableCell, {\n      key: row.id,\n      align: \"center\",\n      sortDirection: orderBy === row.id ? order : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(TableSortLabel, {\n      active: orderBy === row.id,\n      direction: order,\n      onClick: this.createSortHandler(row.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, row.label)), this)));\n  }\n\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  // previous file\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired //rowCount: PropTypes.number.isRequired,\n\n};\n\nconst styles = theme => ({\n  root: {\n    //width: \"60%\",\n    marginTop: theme.spacing.unit * 3,\n    // marginLeft: theme.spacing.unit * 30,\n    overflowX: \"auto\"\n  },\n  table: {//minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n});\n\nclass EnhancedTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      order: \"\",\n      orderBy: \"\",\n      memberData: [],\n      page: 0,\n      rowsPerPage: 5,\n      selected: []\n    };\n\n    this.handleSelectAllClick = event => {\n      if (event.target.checked) {\n        this.setState(state => ({\n          selected: state.memberData.map(n => n.id)\n        }));\n        return;\n      }\n\n      this.setState({\n        selected: []\n      });\n    };\n\n    this.handleClick = (event, id) => {\n      const selected = this.state.selected;\n      const selectedIndex = selected.indexOf(id);\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      this.setState({\n        selected: newSelected\n      });\n    };\n\n    this.handleRequestSort = (event, property) => {\n      const orderBy = property;\n      let order = \"desc\";\n\n      if (this.state.orderBy === property && this.state.order === \"desc\") {\n        order = \"asc\";\n      }\n\n      this.setState({\n        order,\n        orderBy\n      });\n    };\n\n    this.handleChangePage = (event, page) => {\n      this.setState({\n        page\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    this.isSelected = id => this.state.selected.indexOf(id) !== -1;\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/templates\").then(response => {\n      console.log(\"Got template data!\");\n      console.log(response.data);\n      this.setState({\n        memberData: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Template interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from template data!\");\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          memberData = _this$state.memberData,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          selected = _this$state.selected;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, memberData.length - page * rowsPerPage);\n    return React.createElement(Container, {\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.tableWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Table\n    /* className={classes.table} */\n    , {\n      \"aria-labelledby\": \"tableTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(EnhancedTableHead, {\n      numSelected: selected.length,\n      order: order,\n      orderBy: orderBy,\n      onRequestSort: this.handleRequestSort,\n      onSelectAllClick: this.handleSelectAllClick,\n      rowCount: memberData.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, stableSort(memberData, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(n => {\n      const isSelected = this.isSelected(n.id);\n      return React.createElement(TableRow, {\n        hover: true,\n        className: classes.row,\n        onClick: event => this.handleClick(event, n.id),\n        tabIndex: -1,\n        key: n.id,\n        selected: isSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: isSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      })), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, n.template_name), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, n.visible), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, n.created));\n    }), emptyRows > 0 && React.createElement(TableRow, {\n      style: {\n        height: 49 * emptyRows\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      colSpan: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }))))), React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 15, 20],\n      component: \"div\",\n      count: memberData.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        \"aria-label\": \"Previous Page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"Next Page\"\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    })));\n  }\n\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(EnhancedTable);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/noteTemplatesTable.js"],"names":["React","classNames","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","FilterListIcon","lighten","lightBlue","Cyan","Container","axios","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","rows","id","label","CustomTableCell","theme","head","backgroundColor","color","palette","common","white","fontSize","body","EnhancedTableHead","Component","createSortHandler","property","event","props","onRequestSort","render","onSelectAllClick","numSelected","rowCount","row","propTypes","number","isRequired","func","string","styles","root","marginTop","spacing","unit","overflowX","table","tableWrapper","background","default","EnhancedTable","state","memberData","page","rowsPerPage","selected","handleSelectAllClick","target","checked","setState","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleRequestSort","handleChangePage","handleChangeRowsPerPage","value","isSelected","componentDidMount","get","then","response","console","log","data","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","classes","emptyRows","Math","min","template_name","visible","created","height","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,OAAT,QAAwB,2CAAxB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA;;;;;;;;AAOA,SAASC,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoBC,OAApB,EAA6B;AAC3B,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AAC3B,WAAO,CAAC,CAAR;AACD;;AACD,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AAC3B,WAAO,CAAP;AACD;;AACD,SAAO,CAAP;AACD;;AAED,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgC;AAC9B,QAAMC,cAAc,GAAGF,KAAK,CAACG,GAAN,CAAU,CAACC,EAAD,EAAKC,KAAL,KAAe,CAACD,EAAD,EAAKC,KAAL,CAAzB,CAAvB;AACAH,EAAAA,cAAc,CAACI,IAAf,CAAoB,CAACV,CAAD,EAAIC,CAAJ,KAAU;AAC5B,UAAMU,KAAK,GAAGN,GAAG,CAACL,CAAC,CAAC,CAAD,CAAF,EAAOC,CAAC,CAAC,CAAD,CAAR,CAAjB;AACA,QAAIU,KAAK,KAAK,CAAd,EAAiB,OAAOA,KAAP;AACjB,WAAOX,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAf;AACD,GAJD;AAKA,SAAOK,cAAc,CAACC,GAAf,CAAmBC,EAAE,IAAIA,EAAE,CAAC,CAAD,CAA3B,CAAP;AACD;;AAED,SAASI,UAAT,CAAoBD,KAApB,EAA2BT,OAA3B,EAAoC;AAClC,SAAOS,KAAK,KAAK,MAAV,GACH,CAACX,CAAD,EAAIC,CAAJ,KAAUF,IAAI,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CADX,GAEH,CAACF,CAAD,EAAIC,CAAJ,KAAU,CAACF,IAAI,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAFnB;AAGD;;AAED,MAAMW,IAAI,GAAG,CACX;AAAEC,EAAAA,EAAE,EAAE,UAAN;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CADW,EAEX;AAAED,EAAAA,EAAE,EAAE,oBAAN;AAA4BC,EAAAA,KAAK,EAAE;AAAnC,CAFW,EAGX;AAAED,EAAAA,EAAE,EAAE,aAAN;AAAqBC,EAAAA,KAAK,EAAE,cAA5B,CACA;;AACA;;;;;AAKA;;AAPA,CAHW,CAAb;AAaA,MAAMC,eAAe,GAAGtC,UAAU,CAACuC,KAAK,KAAK;AAC3CC,EAAAA,IAAI,EAAE;AACJ;AACAC,IAAAA,eAAe,EAAEvB,IAAI,CAAC,GAAD,CAFjB;AAGJwB,IAAAA,KAAK,EAAEH,KAAK,CAACI,OAAN,CAAcC,MAAd,CAAqBC,KAHxB;AAIJC,IAAAA,QAAQ,EAAE;AAJN,GADqC;AAO3CC,EAAAA,IAAI,EAAE;AACJD,IAAAA,QAAQ,EAAE;AADN;AAPqC,CAAL,CAAN,CAAV,CAUpB3C,SAVoB,CAAxB;;AAYA,MAAM6C,iBAAN,SAAgCnD,KAAK,CAACoD,SAAtC,CAAgD;AAAA;AAAA;;AAAA,SAC9CC,iBAD8C,GAC1BC,QAAQ,IAAIC,KAAK,IAAI;AACvC,WAAKC,KAAL,CAAWC,aAAX,CAAyBF,KAAzB,EAAgCD,QAAhC;AACD,KAH6C;AAAA;;AAK9CI,EAAAA,MAAM,GAAG;AAAA,wBAOH,KAAKF,KAPF;AAAA,UAELG,gBAFK,eAELA,gBAFK;AAAA,UAGLvB,KAHK,eAGLA,KAHK;AAAA,UAILT,OAJK,eAILA,OAJK;AAAA,UAKLiC,WALK,eAKLA,WALK;AAAA,UAMLC,QANK,eAMLA,QANK;AASP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,aAAa,EAAED,WAAW,GAAG,CAAd,IAAmBA,WAAW,GAAGC,QADlD;AAEE,MAAA,OAAO,EAAED,WAAW,KAAKC,QAF3B;AAGE,MAAA,QAAQ,EAAEF,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAQGrB,IAAI,CAACN,GAAL,CACC8B,GAAG,IACD,oBAAC,eAAD;AACE,MAAA,GAAG,EAAEA,GAAG,CAACvB,EADX;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,aAAa,EAAEZ,OAAO,KAAKmC,GAAG,CAACvB,EAAhB,GAAqBH,KAArB,GAA6B,KAH9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,cAAD;AACE,MAAA,MAAM,EAAET,OAAO,KAAKmC,GAAG,CAACvB,EAD1B;AAEE,MAAA,SAAS,EAAEH,KAFb;AAGE,MAAA,OAAO,EAAE,KAAKiB,iBAAL,CAAuBS,GAAG,CAACvB,EAA3B,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGuB,GAAG,CAACtB,KALP,CALF,CAFH,EAgBC,IAhBD,CARH,CADF,CADF;AA+BD;;AA7C6C;;AAgDhDW,iBAAiB,CAACY,SAAlB,GAA8B;AAC5BH,EAAAA,WAAW,EAAE1D,SAAS,CAAC8D,MAAV,CAAiBC,UADF;AAE5BN,EAAAA,gBAAgB,EAAEzD,SAAS,CAACgE,IAAV,CAAeD,UAFL;AAG5BJ,EAAAA,QAAQ,EAAE3D,SAAS,CAAC8D,MAAV,CAAiBC,UAHC;AAI5B;AACAR,EAAAA,aAAa,EAAEvD,SAAS,CAACgE,IAAV,CAAeD,UALF;AAM5B7B,EAAAA,KAAK,EAAElC,SAAS,CAACiE,MAAV,CAAiBF,UANI;AAO5BtC,EAAAA,OAAO,EAAEzB,SAAS,CAACiE,MAAV,CAAiBF,UAPE,CAQ5B;;AAR4B,CAA9B;;AAWA,MAAMG,MAAM,GAAG1B,KAAK,KAAK;AACvB2B,EAAAA,IAAI,EAAE;AACJ;AACAC,IAAAA,SAAS,EAAE5B,KAAK,CAAC6B,OAAN,CAAcC,IAAd,GAAqB,CAF5B;AAGJ;AACAC,IAAAA,SAAS,EAAE;AAJP,GADiB;AAOvBC,EAAAA,KAAK,EAAE,CACL;AADK,GAPgB;AAUvBC,EAAAA,YAAY,EAAE;AACZF,IAAAA,SAAS,EAAE;AADC,GAVS;AAavBX,EAAAA,GAAG,EAAE;AACH,0BAAsB;AACpBlB,MAAAA,eAAe,EAAEF,KAAK,CAACI,OAAN,CAAc8B,UAAd,CAAyBC;AADtB;AADnB;AAbkB,CAAL,CAApB;;AAoBA,MAAMC,aAAN,SAA4B9E,KAAK,CAACoD,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC1C2B,KAD0C,GAClC;AACN3C,MAAAA,KAAK,EAAE,EADD;AAENT,MAAAA,OAAO,EAAE,EAFH;AAGNqD,MAAAA,UAAU,EAAE,EAHN;AAINC,MAAAA,IAAI,EAAE,CAJA;AAKNC,MAAAA,WAAW,EAAE,CALP;AAMNC,MAAAA,QAAQ,EAAE;AANJ,KADkC;;AAAA,SAsC1CC,oBAtC0C,GAsCnB7B,KAAK,IAAI;AAC9B,UAAIA,KAAK,CAAC8B,MAAN,CAAaC,OAAjB,EAA0B;AACxB,aAAKC,QAAL,CAAcR,KAAK,KAAK;AAAEI,UAAAA,QAAQ,EAAEJ,KAAK,CAACC,UAAN,CAAiBhD,GAAjB,CAAqBwD,CAAC,IAAIA,CAAC,CAACjD,EAA5B;AAAZ,SAAL,CAAnB;AACA;AACD;;AACD,WAAKgD,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KA5CyC;;AAAA,SA8C1CM,WA9C0C,GA8C5B,CAAClC,KAAD,EAAQhB,EAAR,KAAe;AAAA,YACnB4C,QADmB,GACN,KAAKJ,KADC,CACnBI,QADmB;AAE3B,YAAMO,aAAa,GAAGP,QAAQ,CAACQ,OAAT,CAAiBpD,EAAjB,CAAtB;AACA,UAAIqD,WAAW,GAAG,EAAlB;;AAEA,UAAIF,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBE,QAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBV,QAAnB,EAA6B5C,EAA7B,CAAd;AACD,OAFD,MAEO,IAAImD,aAAa,KAAK,CAAtB,EAAyB;AAC9BE,QAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBV,QAAQ,CAACW,KAAT,CAAe,CAAf,CAAnB,CAAd;AACD,OAFM,MAEA,IAAIJ,aAAa,KAAKP,QAAQ,CAACY,MAAT,GAAkB,CAAxC,EAA2C;AAChDH,QAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBV,QAAQ,CAACW,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAnB,CAAd;AACD,OAFM,MAEA,IAAIJ,aAAa,GAAG,CAApB,EAAuB;AAC5BE,QAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CACZV,QAAQ,CAACW,KAAT,CAAe,CAAf,EAAkBJ,aAAlB,CADY,EAEZP,QAAQ,CAACW,KAAT,CAAeJ,aAAa,GAAG,CAA/B,CAFY,CAAd;AAID;;AAED,WAAKH,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAES;AAAZ,OAAd;AACD,KAjEyC;;AAAA,SAqE1CI,iBArE0C,GAqEtB,CAACzC,KAAD,EAAQD,QAAR,KAAqB;AACvC,YAAM3B,OAAO,GAAG2B,QAAhB;AACA,UAAIlB,KAAK,GAAG,MAAZ;;AAEA,UAAI,KAAK2C,KAAL,CAAWpD,OAAX,KAAuB2B,QAAvB,IAAmC,KAAKyB,KAAL,CAAW3C,KAAX,KAAqB,MAA5D,EAAoE;AAClEA,QAAAA,KAAK,GAAG,KAAR;AACD;;AAED,WAAKmD,QAAL,CAAc;AAAEnD,QAAAA,KAAF;AAAST,QAAAA;AAAT,OAAd;AACD,KA9EyC;;AAAA,SAgF1CsE,gBAhF0C,GAgFvB,CAAC1C,KAAD,EAAQ0B,IAAR,KAAiB;AAClC,WAAKM,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAlFyC;;AAAA,SAoF1CiB,uBApF0C,GAoFhB3C,KAAK,IAAI;AACjC,WAAKgC,QAAL,CAAc;AAAEL,QAAAA,WAAW,EAAE3B,KAAK,CAAC8B,MAAN,CAAac;AAA5B,OAAd;AACD,KAtFyC;;AAAA,SAwF1CC,UAxF0C,GAwF7B7D,EAAE,IAAI,KAAKwC,KAAL,CAAWI,QAAX,CAAoBQ,OAApB,CAA4BpD,EAA5B,MAAoC,CAAC,CAxFd;AAAA;;AAU1C8D,EAAAA,iBAAiB,GAAG;AAClB9E,IAAAA,KAAK,CACF+E,GADH,CACO,iCADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,WAAKpB,QAAL,CAAc;AACZP,QAAAA,UAAU,EAAEwB,QAAQ,CAACG;AADT,OAAd;AAGD,KARH,EASGC,KATH,CASS,UAASC,KAAT,EAAgB;AACrBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,KAXH;;AAYA,QAAI,CAAC,KAAK9B,KAAL,CAAW+B,aAAhB,EAA+B;AAC7B,UAAIC,QAAQ,GAAGC,WAAW,CAAC,KAAKC,aAAN,EAAqB,IAArB,CAA1B;AACA,WAAK1B,QAAL,CAAc;AAAEuB,QAAAA,aAAa,EAAEC;AAAjB,OAAd;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;AACF;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKnC,KAAL,CAAW+B,aAAf,EAA8B;AAC5BK,MAAAA,aAAa,CAAC,KAAKpC,KAAL,CAAW+B,aAAZ,CAAb;AACA,WAAKvB,QAAL,CAAc;AAAEuB,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD;AACF;;AAsDDhD,EAAAA,MAAM,GAAG;AAAA,UACC0D,OADD,GACa,KAAK5D,KADlB,CACC4D,OADD;AAAA,wBASH,KAAKrC,KATF;AAAA,UAGLC,UAHK,eAGLA,UAHK;AAAA,UAIL5C,KAJK,eAILA,KAJK;AAAA,UAKLT,OALK,eAKLA,OALK;AAAA,UAMLuD,WANK,eAMLA,WANK;AAAA,UAOLD,IAPK,eAOLA,IAPK;AAAA,UAQLE,QARK,eAQLA,QARK;AAUP,UAAMkC,SAAS,GACbnC,WAAW,GACXoC,IAAI,CAACC,GAAL,CAASrC,WAAT,EAAsBF,UAAU,CAACe,MAAX,GAAoBd,IAAI,GAAGC,WAAjD,CAFF;AAIA,WACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEkC,OAAO,CAAC/C,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAE+C,OAAO,CAACzC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC;AAAM;AAAP;AAAuC,yBAAgB,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AACE,MAAA,WAAW,EAAEQ,QAAQ,CAACY,MADxB;AAEE,MAAA,KAAK,EAAE3D,KAFT;AAGE,MAAA,OAAO,EAAET,OAHX;AAIE,MAAA,aAAa,EAAE,KAAKqE,iBAJtB;AAKE,MAAA,gBAAgB,EAAE,KAAKZ,oBALzB;AAME,MAAA,QAAQ,EAAEJ,UAAU,CAACe,MANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGnE,UAAU,CAACoD,UAAD,EAAa3C,UAAU,CAACD,KAAD,EAAQT,OAAR,CAAvB,CAAV,CACEmE,KADF,CACQb,IAAI,GAAGC,WADf,EAC4BD,IAAI,GAAGC,WAAP,GAAqBA,WADjD,EAEElD,GAFF,CAEMwD,CAAC,IAAI;AACR,YAAMY,UAAU,GAAG,KAAKA,UAAL,CAAgBZ,CAAC,CAACjD,EAAlB,CAAnB;AACA,aACE,oBAAC,QAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,SAAS,EAAE6E,OAAO,CAACtD,GAFrB;AAGE,QAAA,OAAO,EAAEP,KAAK,IAAI,KAAKkC,WAAL,CAAiBlC,KAAjB,EAAwBiC,CAAC,CAACjD,EAA1B,CAHpB;AAIE,QAAA,QAAQ,EAAE,CAAC,CAJb;AAKE,QAAA,GAAG,EAAEiD,CAAC,CAACjD,EALT;AAME,QAAA,QAAQ,EAAE6D,UANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CARF,EAWE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BZ,CAAC,CAACgC,aAA7B,CAXF,EAYE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BhC,CAAC,CAACiC,OAA7B,CAZF,EAaE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BjC,CAAC,CAACkC,OAA7B,CAbF,CADF;AAiBD,KArBF,CADH,EAuBGL,SAAS,GAAG,CAAZ,IACC,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEM,QAAAA,MAAM,EAAE,KAAKN;AAAf,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAxBJ,CATF,CADF,CADF,EA0CE,oBAAC,eAAD;AACE,MAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,CADtB;AAEE,MAAA,SAAS,EAAC,KAFZ;AAGE,MAAA,KAAK,EAAErC,UAAU,CAACe,MAHpB;AAIE,MAAA,WAAW,EAAEb,WAJf;AAKE,MAAA,IAAI,EAAED,IALR;AAME,MAAA,mBAAmB,EAAE;AACnB,sBAAc;AADK,OANvB;AASE,MAAA,mBAAmB,EAAE;AACnB,sBAAc;AADK,OATvB;AAYE,MAAA,YAAY,EAAE,KAAKgB,gBAZrB;AAaE,MAAA,mBAAmB,EAAE,KAAKC,uBAb5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CF,CADF,CADF;AA8DD;;AAtKyC;;AAyK5CpB,aAAa,CAACf,SAAd,GAA0B;AACxBqD,EAAAA,OAAO,EAAElH,SAAS,CAAC0H,MAAV,CAAiB3D;AADF,CAA1B;AAIA,eAAe9D,UAAU,CAACiE,MAAD,CAAV,CAAmBU,aAAnB,CAAf","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport Container from \"@material-ui/core/Container\";\n\nimport axios from \"axios\";\n/*\nlet counter = 0;\nfunction createData(name, role, email, phone, clients) {\n  counter += 1;\n  return { id: counter, name, role, email, phone, clients };\n}\n*/\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [\n  { id: \"template\", label: \"Template\" },\n  { id: \"visibleToTherapist\", label: \"Visible to Therapist\" },\n  { id: \"dateCreated\", label: \"Date Created\" }\n  // Prev File\n  /*   { id: \"name\", label: \"Name\" },\n  { id: \"phone\", label: \"Phone\" },\n  { id: \"email\", label: \"Email\" },\n  { id: \"therapist\", label: \"Therapist\" },\n  { id: \"facility\", label: \"Facility\" } */\n  // { id: \"clients\", label: \"Clients\" }\n];\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    //backgroundColor: lightBlue[400],\n    backgroundColor: Cyan[800],\n    color: theme.palette.common.white,\n    fontSize: 15\n  },\n  body: {\n    fontSize: 12\n  }\n}))(TableCell);\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const {\n      onSelectAllClick,\n      order,\n      orderBy,\n      numSelected,\n      rowCount\n    } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <CustomTableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={numSelected === rowCount}\n              onChange={onSelectAllClick}\n            />\n          </CustomTableCell>\n          {rows.map(\n            row => (\n              <CustomTableCell\n                key={row.id}\n                align=\"center\"\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <TableSortLabel\n                  active={orderBy === row.id}\n                  direction={order}\n                  onClick={this.createSortHandler(row.id)}\n                >\n                  {row.label}\n                </TableSortLabel>\n              </CustomTableCell>\n            ),\n            this\n          )}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  // previous file\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired\n  //rowCount: PropTypes.number.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    //width: \"60%\",\n    marginTop: theme.spacing.unit * 3,\n    // marginLeft: theme.spacing.unit * 30,\n    overflowX: \"auto\"\n  },\n  table: {\n    //minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n});\n\nclass EnhancedTable extends React.Component {\n  state = {\n    order: \"\",\n    orderBy: \"\",\n    memberData: [],\n    page: 0,\n    rowsPerPage: 5,\n    selected: []\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/templates\")\n      .then(response => {\n        console.log(\"Got template data!\");\n        console.log(response.data);\n        this.setState({\n          memberData: response.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Template interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from template data!\");\n    }\n  }\n\n  handleSelectAllClick = event => {\n    if (event.target.checked) {\n      this.setState(state => ({ selected: state.memberData.map(n => n.id) }));\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    this.setState({ selected: newSelected });\n  };\n\n  // prev file -->\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = \"desc\";\n\n    if (this.state.orderBy === property && this.state.order === \"desc\") {\n      order = \"asc\";\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  render() {\n    const { classes } = this.props;\n    const {\n      memberData,\n      order,\n      orderBy,\n      rowsPerPage,\n      page,\n      selected\n    } = this.state;\n    const emptyRows =\n      rowsPerPage -\n      Math.min(rowsPerPage, memberData.length - page * rowsPerPage);\n\n    return (\n      <Container maxWidth=\"lg\">\n        <Paper className={classes.root}>\n          <div className={classes.tableWrapper}>\n            <Table /* className={classes.table} */ aria-labelledby=\"tableTitle\">\n              <EnhancedTableHead\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={this.handleRequestSort}\n                onSelectAllClick={this.handleSelectAllClick}\n                rowCount={memberData.length}\n              />\n              <TableBody>\n                {stableSort(memberData, getSorting(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map(n => {\n                    const isSelected = this.isSelected(n.id);\n                    return (\n                      <TableRow\n                        hover\n                        className={classes.row}\n                        onClick={event => this.handleClick(event, n.id)}\n                        tabIndex={-1}\n                        key={n.id}\n                        selected={isSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isSelected} />\n                        </TableCell>\n                        <TableCell align=\"center\">{n.template_name}</TableCell>\n                        <TableCell align=\"center\">{n.visible}</TableCell>\n                        <TableCell align=\"center\">{n.created}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: 49 * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 15, 20]}\n            component=\"div\"\n            count={memberData.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"Previous Page\"\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"Next Page\"\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Container>\n    );\n  }\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EnhancedTable);\n"]},"metadata":{},"sourceType":"module"}