{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/newTeamMemberConsolidate.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport red from \"@material-ui/core/colors/red\";\nimport green from \"@material-ui/core/colors/green\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n  textField2: {\n    // marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing(20),\n    width: 300\n  },\n  textField3: {\n    marginLeft: theme.spacing(24),\n    //marginBottom: theme.spacing(5),\n    // marginRight: theme.spacing(20),\n    width: 300\n  },\n  textFieldNotes: {\n    //marginLeft: theme.spacing.unit,\n    //marginRight: theme.spacing.unit,\n    width: 850\n  },\n  marg: {\n    marginRight: theme.spacing(44) // marginBottom: theme.spacing(5)\n\n  },\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    paddingTop: theme.spacing.unit,\n    marginTop: theme.spacing(2),\n    paddingBottom: theme.spacing.unit * 2\n  },\n  rootTitle: {\n    width: \"100%\",\n    marginTop: theme.spacing(-1),\n    marginBottom: theme.spacing(2),\n    backgroundColor: Cyan[800],\n    color: theme.palette.getContrastText(\"#00838f\") //paddingTop: theme.spacing.unit,\n    //paddingBottom: theme.spacing.unit * 2\n\n  },\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  menu2: {\n    width: 200\n  },\n  button: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  title: {\n    align: \"center\" //marginTop: theme.spacing(1),\n    //marginBottom: theme.spacing(1)\n\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: 20\n  },\n  saveButton: {\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n    /* this is text color */\n    color: theme.palette.getContrastText(\"#b2dfdb\"),\n    backgroundColor: \"#b2dfdb\",\n    \"&:hover\": {\n      backgroundColor: \"#80cbc4\"\n    }\n  }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#b2dfdb\"\n    }\n  }\n});\nconst titles = [{\n  value: null,\n  label: \"\"\n}, {\n  value: \"Dr.\",\n  label: \"Dr.\"\n}, {\n  value: \"Miss\",\n  label: \"Miss\"\n}, {\n  value: \"Mr.\",\n  label: \"Mr.\"\n}, {\n  value: \"Mrs.\",\n  label: \"Mrs.\"\n}, {\n  value: \"Ms.\",\n  label: \"Ms.\"\n}, {\n  value: \"Mx.\",\n  label: \"Mx.\"\n}];\nconst roles = [{\n  value: \"Therapist\",\n  label: \"Therapist\"\n}, {\n  value: \"Administrator\",\n  label: \"Administrator\"\n}];\n\nclass TopPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkedActive: false,\n      newMemberFirstName: null,\n      newMemberLastName: null,\n      newMemberRole: null,\n      newMemberEmail: null,\n      newMemberTitle: null,\n      newMemberCurrentPassword: null,\n      newMemberConfirmPassword: null,\n      newMemberPhone: null,\n      newMemberAddress: null,\n      newMemberPrimaryLocation: null,\n      newMemberNpi: null,\n      newMemberCity: null,\n      newMemberState: null,\n      newMemberZipCode: null,\n      newMemberNotes: null,\n      newMemberBday: null,\n      multiline: \"Controlled\" // privliges\n\n      /*\n      checkedAdmin: false,\n      checkedThera: true,\n      checkedIntern: false,\n      invoice: false,\n      allCalendar: false,\n      payment: true,\n      editOtherSched: false,\n      viewOtherSched: false,\n      editOtherInfo: false,\n      viewOtherInfo: false,\n      addClient: true,\n      recordAttendance: true,\n      viewNote: true,\n      viewClient: false,\n      kpis: true,\n      viewReport: false,\n      viewCalendar: true,\n      viewOwnClient: true\n      */\n\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange2 = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeChecked = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n  }\n\n  /*\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/members\")\n      .then(response => {\n        console.log(\"Got member data!\");\n        console.log(response.data);\n        this.setState({\n          memberData: response.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Client interval set!\");\n    }\n  }\n  */\n  // multiple get method\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/members\").then(response => {\n      console.log(\"Got member data!\");\n      console.log(response.data);\n      this.setState({\n        memberData: response.data\n      });\n    })\n    /* multiple get\n    .then(response2 => {\n    return axios\n     .get(\"http://localhost:5000/allclients\") // using response.data\n     .then(response2 => {\n       console.log(\"Got client data!\");\n       console.log(response2.data);\n       this.setState({\n         clientData: response2.data\n       });\n     });\n    }) */\n    .catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Data interval set!\");\n    }\n  }\n  /* async request style\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/members\")\n      .then(response => {\n        console.log(\"Got member data!\");\n        console.log(response.data);\n        this.setState({\n          memberData: response.data\n        });\n      })\n      .then(async () => {\n        const response2 = await axios\n          .get(\"http://localhost:5000/allclients\") // using response.data\n          ;\n        console.log(\"Got client data!\");\n        console.log(response2.data);\n        this.setState({\n          clientData: response2.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n     if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Data interval set!\");\n    }\n  }\n   componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from team data!\");\n    }\n  }\n    */\n\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n    const memberObj = {\n      //title: this.state.title,\n      //FIX THIS\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      role: this.state.role,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode,\n      notes: this.state.notes\n    };\n    /* \n    const clientObj = {\n      client: this.state.client,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLength,\n      sessionType: this.state.sessionType\n    };\n    */\n\n    axios.post(\"http://localhost:5000/members/registermember\", memberObj) // .then(res => console.log(res.data));\n\n    /* this will clear everything after saving+closing */\n    .then(response => {\n      this.setState({\n        memberObj\n      });\n    });\n    /* multiple post \n      .then(post2 => {\n        return axios\n          .post(\"http://localhost:5000/assignClients/assignclient1\", clientObj) // using response.data\n          .then(post2 => {\n            this.setState({\n              clientObj\n            });\n          });\n      });\n      */\n  }\n\n  /*\n   reloadPage() {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  }\n  */\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(Container, {\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.rootTitle,\n      elevation: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, \"Team Member Information\")), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      row: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      className: classes.marg,\n      control: React.createElement(Switch, {\n        checked: this.state.checkedActive,\n        onChange: this.handleChangeChecked(\"checkedActive\"),\n        value: \"checkedActive\" // marginLeft=\"theme.spacing(2)\"\n\n        /*\n        classes={{\n        switchBase: \"#1de9b6\",\n        checked: \"#1de9b6\",\n        bar: \"#1de9b6\"\n        }}*/\n        ,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }),\n      label: \"Active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }))), React.createElement(TextField, {\n      id: \"role\",\n      select: true,\n      label: \"Role\",\n      variant: \"outlined\",\n      className: classes.textField3,\n      value: this.state.newMemberRole,\n      onChange: this.handleChange(\"newMemberRole\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, roles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, option.label)))), React.createElement(TextField, {\n      id: \"standard-select-title\",\n      select: true,\n      label: \"Title\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.newMemberTitle,\n      onChange: this.handleChange(\"newMemberTitle\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, option.label))), React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-firstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      color: theme,\n      className: classes.textField,\n      value: this.state.newMemberFirstName,\n      onChange: this.handleChange(\"newMemberFirstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    })), React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.newMemberLastName,\n      onChange: this.handleChange(\"newMemberLastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.newMemberEmail,\n      onChange: this.handleChange(\"newMemberEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-password-input\",\n      variant: \"outlined\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.newMemberCurrentPassword,\n      onChange: this.handleChange(\"newMemberCurrentPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-confirmPassword-input\",\n      variant: \"outlined\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.newMemberConfirmPassword,\n      onChange: this.handleChange(\"newMemberConfirmPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-address\",\n      variant: \"outlined\",\n      label: \"Address\",\n      className: classes.textField,\n      value: this.state.newMemberAddress,\n      onChange: this.handleChange(\"newMemberAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-city-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.newMemberCity,\n      onChange: this.handleChange(\"newMemberCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.newMemberState,\n      onChange: this.handleChange(\"newMemberState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-zipCode\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.newMemberZipCode,\n      onChange: this.handleChange(\"newMemberZipCode\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.newMemberPhone,\n      onChange: this.handleChange(\"newMemberPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-bday\",\n      variant: \"outlined\",\n      label: \"Birthday\",\n      className: classes.textField,\n      value: this.state.newMemberBday,\n      onChange: this.handleChange(\"newMemberBday\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-npi\",\n      variant: \"outlined\",\n      label: \"NPI Number\",\n      className: classes.textField,\n      value: this.state.newMemberNpi,\n      onChange: this.handleChange(\"newMemberNpi\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-primary-location\",\n      variant: \"outlined\",\n      label: \"Primary Location\",\n      className: classes.textField,\n      value: this.state.newMemberPrimaryLocation,\n      onChange: this.handleChange(\"newMemberPrimaryLocation\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }), React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\",\n      label: \"Additional Notes\",\n      value: this.state.newMemberNotes,\n      style: {\n        margin: 8\n      },\n      className: classes.textFieldNotes,\n      onChange: this.handleChange(\"newMemberNotes\"),\n      placeholder: \"Add any additional notes here\",\n      fullWidth: true,\n      multiline: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      onClick: () => {\n        this.onSubmit(this.state.checkedActive, this.state.checkedAdmin, this.state.checkedThera, this.state.checkedIntern, this.state.firstName, this.state.lastName, this.state.role, this.state.email, this.state.title, this.state.currentPassword, this.state.confirmPassword, this.state.phone, this.state.address, this.state.primaryLocation, this.state.npi, this.state.city, this.state.zipCode, this.state.notes // client\n\n        /*\n        this.state.client,\n        this.state.sessionCost,\n        this.state.sessionLength,\n        this.state.sessionType\n        */\n        ); //this.reloadPage();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TopPanel);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/newTeamMemberConsolidate.js"],"names":["React","PropTypes","withStyles","createMuiTheme","MuiThemeProvider","Paper","Grid","MenuItem","TextField","Button","Container","FormGroup","FormControlLabel","Switch","Checkbox","red","green","Cyan","Typography","AddIcon","axios","styles","theme","container","display","flexWrap","colorSwitchBase","color","backgroundColor","colorBar","colorChecked","textField","marginLeft","spacing","unit","marginRight","width","textField2","textField3","textFieldNotes","marg","menu","root","paddingTop","marginTop","paddingBottom","rootTitle","marginBottom","palette","getContrastText","container2","menu2","button","title","align","icon","fontSize","saveButton","primary","main","titles","value","label","roles","TopPanel","Component","state","checkedActive","newMemberFirstName","newMemberLastName","newMemberRole","newMemberEmail","newMemberTitle","newMemberCurrentPassword","newMemberConfirmPassword","newMemberPhone","newMemberAddress","newMemberPrimaryLocation","newMemberNpi","newMemberCity","newMemberState","newMemberZipCode","newMemberNotes","newMemberBday","multiline","handleChange","name","event","setState","target","handleChange2","handleChangeChecked","checked","componentDidMount","get","then","response","console","log","data","memberData","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","onSubmit","memberObj","firstName","lastName","email","role","currentPassword","confirmPassword","phone","address","primaryLocation","npi","city","zipCode","notes","post","render","classes","props","MenuProps","className","map","option","margin","shrink","checkedAdmin","checkedThera","checkedIntern","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  withStyles,\n  createMuiTheme,\n  MuiThemeProvider\n} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport red from \"@material-ui/core/colors/red\";\nimport green from \"@material-ui/core/colors/green\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n\n  textField2: {\n    // marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing(20),\n    width: 300\n  },\n\n  textField3: {\n    marginLeft: theme.spacing(24),\n    //marginBottom: theme.spacing(5),\n    // marginRight: theme.spacing(20),\n    width: 300\n  },\n\n  textFieldNotes: {\n    //marginLeft: theme.spacing.unit,\n    //marginRight: theme.spacing.unit,\n    width: 850\n  },\n\n  marg: {\n    marginRight: theme.spacing(44)\n    // marginBottom: theme.spacing(5)\n  },\n\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    paddingTop: theme.spacing.unit,\n    marginTop: theme.spacing(2),\n    paddingBottom: theme.spacing.unit * 2\n  },\n\n  rootTitle: {\n    width: \"100%\",\n    marginTop: theme.spacing(-1),\n    marginBottom: theme.spacing(2),\n    backgroundColor: Cyan[800],\n    color: theme.palette.getContrastText(\"#00838f\")\n\n    //paddingTop: theme.spacing.unit,\n    //paddingBottom: theme.spacing.unit * 2\n  },\n\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n\n  menu2: {\n    width: 200\n  },\n  button: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  title: {\n    align: \"center\"\n    //marginTop: theme.spacing(1),\n    //marginBottom: theme.spacing(1)\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: 20\n  },\n\n  saveButton: {\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    /* this is text color */ color: theme.palette.getContrastText(\"#b2dfdb\"),\n    backgroundColor: \"#b2dfdb\",\n    \"&:hover\": {\n      backgroundColor: \"#80cbc4\"\n    }\n  }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#b2dfdb\" }\n  }\n});\n\nconst titles = [\n  {\n    value: null,\n    label: \"\"\n  },\n\n  {\n    value: \"Dr.\",\n    label: \"Dr.\"\n  },\n\n  {\n    value: \"Miss\",\n    label: \"Miss\"\n  },\n\n  {\n    value: \"Mr.\",\n    label: \"Mr.\"\n  },\n  {\n    value: \"Mrs.\",\n    label: \"Mrs.\"\n  },\n  {\n    value: \"Ms.\",\n    label: \"Ms.\"\n  },\n  {\n    value: \"Mx.\",\n    label: \"Mx.\"\n  }\n];\n\nconst roles = [\n  {\n    value: \"Therapist\",\n    label: \"Therapist\"\n  },\n\n  {\n    value: \"Administrator\",\n    label: \"Administrator\"\n  }\n];\n\nclass TopPanel extends React.Component {\n  state = {\n    checkedActive: false,\n    newMemberFirstName: null,\n    newMemberLastName: null,\n    newMemberRole: null,\n    newMemberEmail: null,\n    newMemberTitle: null,\n    newMemberCurrentPassword: null,\n    newMemberConfirmPassword: null,\n    newMemberPhone: null,\n    newMemberAddress: null,\n    newMemberPrimaryLocation: null,\n    newMemberNpi: null,\n    newMemberCity: null,\n    newMemberState: null,\n    newMemberZipCode: null,\n    newMemberNotes: null,\n    newMemberBday: null,\n    multiline: \"Controlled\"\n    // privliges\n    /*\n    checkedAdmin: false,\n    checkedThera: true,\n    checkedIntern: false,\n    invoice: false,\n    allCalendar: false,\n    payment: true,\n    editOtherSched: false,\n    viewOtherSched: false,\n    editOtherInfo: false,\n    viewOtherInfo: false,\n    addClient: true,\n    recordAttendance: true,\n    viewNote: true,\n    viewClient: false,\n    kpis: true,\n    viewReport: false,\n    viewCalendar: true,\n    viewOwnClient: true\n    */\n  };\n  /*\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/members\")\n      .then(response => {\n        console.log(\"Got member data!\");\n        console.log(response.data);\n        this.setState({\n          memberData: response.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Client interval set!\");\n    }\n  }\n*/\n  // multiple get method\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/members\")\n      .then(response => {\n        console.log(\"Got member data!\");\n        console.log(response.data);\n        this.setState({\n          memberData: response.data\n        });\n      }) /* multiple get\n      .then(response2 => {\n        return axios\n          .get(\"http://localhost:5000/allclients\") // using response.data\n          .then(response2 => {\n            console.log(\"Got client data!\");\n            console.log(response2.data);\n            this.setState({\n              clientData: response2.data\n            });\n          });\n      }) */\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  /* async request style\n\n componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/members\")\n      .then(response => {\n        console.log(\"Got member data!\");\n        console.log(response.data);\n        this.setState({\n          memberData: response.data\n        });\n      })\n      .then(async () => {\n        const response2 = await axios\n          .get(\"http://localhost:5000/allclients\") // using response.data\n          ;\n        console.log(\"Got client data!\");\n        console.log(response2.data);\n        this.setState({\n          clientData: response2.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from team data!\");\n    }\n  }\n\t\n  */\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n\n    const memberObj = {\n      //title: this.state.title,\n\n      //FIX THIS\n\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      role: this.state.role,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode,\n      notes: this.state.notes\n    };\n    /* \n    const clientObj = {\n      client: this.state.client,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLength,\n      sessionType: this.state.sessionType\n    };\n    */\n    axios\n      .post(\"http://localhost:5000/members/registermember\", memberObj)\n      // .then(res => console.log(res.data));\n      /* this will clear everything after saving+closing */\n      .then(response => {\n        this.setState({\n          memberObj\n        });\n      });\n    /* multiple post \n      .then(post2 => {\n        return axios\n          .post(\"http://localhost:5000/assignClients/assignclient1\", clientObj) // using response.data\n          .then(post2 => {\n            this.setState({\n              clientObj\n            });\n          });\n      });\n      */\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChange2 = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChangeChecked = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n  /*\n\n  reloadPage() {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  }\n*/\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Container maxWidth=\"lg\">\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          <Paper className={classes.root} elevation={1}>\n            <Paper className={classes.rootTitle} elevation={0}>\n              <Typography className={classes.title} align=\"center\" variant=\"h5\">\n                Team Member Information\n              </Typography>\n            </Paper>\n\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid container row justify=\"center\" alignItems=\"center\">\n                <MuiThemeProvider theme={theme}>\n                  <FormGroup row>\n                    <FormControlLabel\n                      className={classes.marg}\n                      control={\n                        <Switch\n                          checked={this.state.checkedActive}\n                          onChange={this.handleChangeChecked(\"checkedActive\")}\n                          value=\"checkedActive\"\n                          // marginLeft=\"theme.spacing(2)\"\n\n                          /*\n                        classes={{\n                          switchBase: \"#1de9b6\",\n                          checked: \"#1de9b6\",\n                          bar: \"#1de9b6\"\n                        }}*/\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Active\"\n                    />\n                  </FormGroup>\n                </MuiThemeProvider>\n\n                <TextField\n                  id=\"role\"\n                  select\n                  label=\"Role\"\n                  variant=\"outlined\"\n                  className={classes.textField3}\n                  value={this.state.newMemberRole}\n                  onChange={this.handleChange(\"newMemberRole\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {roles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n\n              <TextField\n                id=\"standard-select-title\"\n                select\n                label=\"Title\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.newMemberTitle}\n                onChange={this.handleChange(\"newMemberTitle\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {titles.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n\n              <MuiThemeProvider theme={theme}>\n                <TextField\n                  required\n                  id=\"standard-firstName\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  color={theme}\n                  className={classes.textField}\n                  value={this.state.newMemberFirstName}\n                  onChange={this.handleChange(\"newMemberFirstName\")}\n                  margin=\"normal\"\n                />\n              </MuiThemeProvider>\n              <TextField\n                required\n                id=\"standard-lastNamename\"\n                label=\"Last Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.newMemberLastName}\n                onChange={this.handleChange(\"newMemberLastName\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-email\"\n                variant=\"outlined\"\n                label=\"Email\"\n                className={classes.textField}\n                value={this.state.newMemberEmail}\n                onChange={this.handleChange(\"newMemberEmail\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-password-input\"\n                variant=\"outlined\"\n                label=\"Password\"\n                className={classes.textField}\n                type=\"password\"\n                value={this.state.newMemberCurrentPassword}\n                onChange={this.handleChange(\"newMemberCurrentPassword\")}\n                //autoComplete=\"current-password\"\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-confirmPassword-input\"\n                variant=\"outlined\"\n                label=\"Confirm Password\"\n                className={classes.textField}\n                type=\"password\"\n                value={this.state.newMemberConfirmPassword}\n                onChange={this.handleChange(\"newMemberConfirmPassword\")}\n                //autoComplete=\"current-password\"\n                margin=\"normal\"\n              />\n\n              <TextField\n                id=\"standard-address\"\n                variant=\"outlined\"\n                label=\"Address\"\n                className={classes.textField}\n                value={this.state.newMemberAddress}\n                onChange={this.handleChange(\"newMemberAddress\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-city-\"\n                variant=\"outlined\"\n                label=\"City\"\n                className={classes.textField}\n                value={this.state.newMemberCity}\n                onChange={this.handleChange(\"newMemberCity\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-state\"\n                variant=\"outlined\"\n                label=\"State\"\n                className={classes.textField}\n                value={this.state.newMemberState}\n                onChange={this.handleChange(\"newMemberState\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-zipCode\"\n                variant=\"outlined\"\n                label=\"Zip Code\"\n                className={classes.textField}\n                value={this.state.newMemberZipCode}\n                onChange={this.handleChange(\"newMemberZipCode\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-phone\"\n                variant=\"outlined\"\n                label=\"Phone Number\"\n                className={classes.textField}\n                value={this.state.newMemberPhone}\n                onChange={this.handleChange(\"newMemberPhone\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-bday\"\n                variant=\"outlined\"\n                label=\"Birthday\"\n                className={classes.textField}\n                value={this.state.newMemberBday}\n                onChange={this.handleChange(\"newMemberBday\")}\n                margin=\"normal\"\n              />\n\n              <TextField\n                id=\"standard-npi\"\n                variant=\"outlined\"\n                label=\"NPI Number\"\n                className={classes.textField}\n                value={this.state.newMemberNpi}\n                onChange={this.handleChange(\"newMemberNpi\")}\n                margin=\"normal\"\n              />\n\n              <TextField\n                id=\"standard-primary-location\"\n                variant=\"outlined\"\n                label=\"Primary Location\"\n                className={classes.textField}\n                value={this.state.newMemberPrimaryLocation}\n                onChange={this.handleChange(\"newMemberPrimaryLocation\")}\n                margin=\"normal\"\n              />\n\n              <MuiThemeProvider theme={theme}>\n                <TextField\n                  id=\"standard-full-width\"\n                  label=\"Additional Notes\"\n                  value={this.state.newMemberNotes}\n                  style={{ margin: 8 }}\n                  className={classes.textFieldNotes}\n                  onChange={this.handleChange(\"newMemberNotes\")}\n                  placeholder=\"Add any additional notes here\"\n                  fullWidth\n                  multiline\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                />\n              </MuiThemeProvider>\n            </Grid>\n\n            <Grid container direction=\"row\" justify=\"flex-end\">\n              <Button\n                className={classes.saveButton}\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.onSubmit(\n                    this.state.checkedActive,\n                    this.state.checkedAdmin,\n                    this.state.checkedThera,\n                    this.state.checkedIntern,\n                    this.state.firstName,\n                    this.state.lastName,\n                    this.state.role,\n                    this.state.email,\n                    this.state.title,\n                    this.state.currentPassword,\n                    this.state.confirmPassword,\n                    this.state.phone,\n                    this.state.address,\n                    this.state.primaryLocation,\n                    this.state.npi,\n                    this.state.city,\n                    this.state.zipCode,\n                    this.state.notes\n                    // client\n                    /*\n                    this.state.client,\n                    this.state.sessionCost,\n                    this.state.sessionLength,\n                    this.state.sessionType\n                    */\n                  );\n                  //this.reloadPage();\n                }}\n              >\n                Save\n              </Button>\n            </Grid>\n            {/* Assign client button */}\n            {/*\n            <Grid container direction=\"row\" justify=\"center\">\n              <Button\n                className={classes.saveButton}\n                size=\"large\"\n                variant=\"contained\"\n              >\n                <AddIcon className={classes.icon} />\n                Assign Client\n              </Button>\n            </Grid>\n            */}\n          </Paper>\n        </form>\n      </Container>\n    );\n  }\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TopPanel);\n"]},"metadata":{},"sourceType":"module"}