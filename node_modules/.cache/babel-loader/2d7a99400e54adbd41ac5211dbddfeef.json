{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/Documents/AlkinTest/mtsaas/src/noteHistoryTable.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nlet counter = 0;\n\nfunction createData(note, sessionDate, noteDate) {\n  counter += 1;\n  return {\n    id: counter,\n    note,\n    sessionDate,\n    noteDate\n  };\n}\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [{\n  id: \"note\",\n  label: \"Note\"\n}, {\n  id: \"sessionDate\",\n  label: \"Session Date\"\n}, {\n  id: \"noteDate\",\n  label: \"Note Date\"\n}];\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: lightBlue[400],\n    color: theme.palette.common.white,\n    fontSize: 15\n  },\n  body: {\n    fontSize: 12\n  }\n}))(TableCell);\n\nclass EnhancedTableHead extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createSortHandler = property => event => {\n      this.props.onRequestSort(event, property);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy;\n    return React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, rows.map(row => React.createElement(CustomTableCell, {\n      key: row.id,\n      align: \"center\",\n      sortDirection: orderBy === row.id ? order : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(TableSortLabel, {\n      active: orderBy === row.id,\n      direction: order,\n      onClick: this.createSortHandler(row.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, row.label)), this)));\n  }\n\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired //rowCount: PropTypes.number.isRequired,\n\n};\n\nconst styles = theme => ({\n  root: {\n    width: \"600\",\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit * 45,\n    marginBottom: theme.spacing.unit * 10,\n    overflowX: \"auto\"\n  },\n  table: {//minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  },\n  textField: {\n    marginLeft: theme.spacing.unit //marginRight: theme.spacing.unit,\n\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    //marginRight: theme.spacing.unit,\n    width: 400\n  }\n});\n\nclass EnhancedTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      order: \"\",\n      orderBy: \"\",\n      data: [createData(\"Note 1\", \"1/5/19\", \"1/7/19\"), createData(\"Note 2\", \"1/6/19\", \"1/8/19\"), createData(\"Note 3\", \"1/7/19\", \"1/10/19\"), createData(\"Note 4\", \"1/8/19\", \"1/11/19\"), createData(\"Note 5\", \"1/9/19\", \"1/12/19\"), createData(\"Note 6\", \"1/10/19\", \"1/13/19\"), createData(\"Note 7\", \"1/11/19\", \"1/14/19\"), createData(\"Note 8\", \"1/12/19\", \"1/15/19\"), createData(\"Note 9\", \"1/13/19\", \"1/16/19\")],\n      page: 0,\n      rowsPerPage: 5,\n      open: false,\n      openV: false,\n      sessionDateP: \"1/5/19\",\n      noteInput: \"This is was an amazing session!\",\n      noteName: \"Note 1\"\n    };\n\n    this.handleRequestSort = (event, property) => {\n      const orderBy = property;\n      let order = \"desc\";\n\n      if (this.state.orderBy === property && this.state.order === \"desc\") {\n        order = \"asc\";\n      }\n\n      this.setState({\n        order,\n        orderBy\n      });\n    };\n\n    this.handleChangePage = (event, page) => {\n      this.setState({\n        page\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n\n    this.handleClickOpenV = () => {\n      this.setState({\n        openV: true\n      });\n    };\n\n    this.handleCloseV = () => {\n      this.setState({\n        openV: false\n      });\n    };\n  }\n\n  // isSelected = id => this.state.selected.indexOf(id) !== -1;\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          data = _this$state.data,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n    return React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.tableWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      \"aria-labelledby\": \"tableTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(EnhancedTableHead //numSelected={selected.length}\n    , {\n      order: order,\n      orderBy: orderBy,\n      onRequestSort: this.handleRequestSort,\n      rowCount: data.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(Dialog, {\n      open: this.state.openV,\n      onClose: this.handleCloseV,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Session Notes\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-date\",\n      label: \"Note Title\",\n      variant: \"outlined\",\n      InputProps: {\n        readOnly: true\n      },\n      className: classes.textField,\n      value: this.state.noteName //onChange={this.handleChange(\"noteName\")}\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-payor\",\n      label: \"Session Date\",\n      variant: \"outlined\",\n      InputProps: {\n        readOnly: true\n      },\n      className: classes.textField,\n      value: this.state.sessionDateP // onChange={this.handleChange(\"sessionDateP\")}\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-amount\",\n      label: \"Notes\",\n      variant: \"outlined\",\n      multiline: true,\n      InputProps: {\n        readOnly: true\n      },\n      rows: \"15\",\n      className: classes.textField2,\n      value: this.state.noteInput //onChange={this.handleChange(\"note\")}\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleCloseV,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleCloseV,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, stableSort(data, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(n => {\n      // const isSelected = this.isSelected(n.id);\n      return React.createElement(TableRow, {\n        hover: true,\n        className: classes.row,\n        onClick: this.handleClickOpenV,\n        tabIndex: -1,\n        key: n.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, n.note), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, n.sessionDate), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, n.noteDate));\n    }), emptyRows > 0 && React.createElement(TableRow, {\n      style: {\n        height: 49 * emptyRows\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      colSpan: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }))))), React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 15, 20],\n      component: \"div\",\n      count: data.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        \"aria-label\": \"Previous Page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"Next Page\"\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }));\n  }\n\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(EnhancedTable);","map":{"version":3,"sources":["/Users/kenneth/Documents/AlkinTest/mtsaas/src/noteHistoryTable.js"],"names":["React","classNames","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Paper","lightBlue","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","counter","createData","note","sessionDate","noteDate","id","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","rows","label","CustomTableCell","theme","head","backgroundColor","color","palette","common","white","fontSize","body","EnhancedTableHead","Component","createSortHandler","property","event","props","onRequestSort","render","row","propTypes","func","isRequired","string","styles","root","width","marginTop","spacing","unit","marginLeft","marginBottom","overflowX","table","tableWrapper","background","default","textField","textField2","EnhancedTable","state","data","page","rowsPerPage","open","openV","sessionDateP","noteInput","noteName","handleRequestSort","setState","handleChangePage","handleChangeRowsPerPage","target","value","handleChange","name","checked","handleClickOpenV","handleCloseV","classes","emptyRows","Math","min","length","readOnly","slice","n","height","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nlet counter = 0;\nfunction createData(note, sessionDate, noteDate) {\n  counter += 1;\n  return { id: counter, note, sessionDate, noteDate };\n}\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [\n  { id: \"note\", label: \"Note\" },\n  { id: \"sessionDate\", label: \"Session Date\" },\n  { id: \"noteDate\", label: \"Note Date\" }\n];\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: lightBlue[400],\n    color: theme.palette.common.white,\n    fontSize: 15\n  },\n  body: {\n    fontSize: 12\n  }\n}))(TableCell);\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const { order, orderBy } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          {rows.map(\n            row => (\n              <CustomTableCell\n                key={row.id}\n                align=\"center\"\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <TableSortLabel\n                  active={orderBy === row.id}\n                  direction={order}\n                  onClick={this.createSortHandler(row.id)}\n                >\n                  {row.label}\n                </TableSortLabel>\n              </CustomTableCell>\n            ),\n            this\n          )}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired\n  //rowCount: PropTypes.number.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    width: \"600\",\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit * 45,\n    marginBottom: theme.spacing.unit * 10,\n    overflowX: \"auto\"\n  },\n  table: {\n    //minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  },\n\n  textField: {\n    marginLeft: theme.spacing.unit\n    //marginRight: theme.spacing.unit,\n  },\n\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    //marginRight: theme.spacing.unit,\n    width: 400\n  }\n});\n\nclass EnhancedTable extends React.Component {\n  state = {\n    order: \"\",\n    orderBy: \"\",\n    data: [\n      createData(\"Note 1\", \"1/5/19\", \"1/7/19\"),\n      createData(\"Note 2\", \"1/6/19\", \"1/8/19\"),\n      createData(\"Note 3\", \"1/7/19\", \"1/10/19\"),\n      createData(\"Note 4\", \"1/8/19\", \"1/11/19\"),\n      createData(\"Note 5\", \"1/9/19\", \"1/12/19\"),\n      createData(\"Note 6\", \"1/10/19\", \"1/13/19\"),\n      createData(\"Note 7\", \"1/11/19\", \"1/14/19\"),\n      createData(\"Note 8\", \"1/12/19\", \"1/15/19\"),\n      createData(\"Note 9\", \"1/13/19\", \"1/16/19\")\n    ],\n    page: 0,\n    rowsPerPage: 5,\n    open: false,\n    openV: false,\n    sessionDateP: \"1/5/19\",\n    noteInput: \"This is was an amazing session!\",\n    noteName: \"Note 1\"\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = \"desc\";\n\n    if (this.state.orderBy === property && this.state.order === \"desc\") {\n      order = \"asc\";\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  /* show date range diaglog box */\n  handleClickOpenV = () => {\n    this.setState({ openV: true });\n  };\n\n  /* close date range diaglog box */\n  handleCloseV = () => {\n    this.setState({ openV: false });\n  };\n\n  // isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  render() {\n    const { classes } = this.props;\n    const { data, order, orderBy, rowsPerPage, page } = this.state;\n    const emptyRows =\n      rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\n            <EnhancedTableHead\n              //numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={this.handleRequestSort}\n              rowCount={data.length}\n            />\n\n            <Dialog open={this.state.openV} onClose={this.handleCloseV}>\n              <DialogTitle id=\"form-dialog-title\">Session Notes</DialogTitle>\n              <DialogContent>\n                <TextField\n                  id=\"standard-date\"\n                  label=\"Note Title\"\n                  variant=\"outlined\"\n                  InputProps={{\n                    readOnly: true\n                  }}\n                  className={classes.textField}\n                  value={this.state.noteName}\n                  //onChange={this.handleChange(\"noteName\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-payor\"\n                  label=\"Session Date\"\n                  variant=\"outlined\"\n                  InputProps={{\n                    readOnly: true\n                  }}\n                  className={classes.textField}\n                  value={this.state.sessionDateP}\n                  // onChange={this.handleChange(\"sessionDateP\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-amount\"\n                  label=\"Notes\"\n                  variant=\"outlined\"\n                  multiline\n                  InputProps={{\n                    readOnly: true\n                  }}\n                  rows=\"15\"\n                  className={classes.textField2}\n                  value={this.state.noteInput}\n                  //onChange={this.handleChange(\"note\")}\n                  margin=\"normal\"\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleCloseV} color=\"primary\">\n                  Cancel\n                </Button>\n                <Button onClick={this.handleCloseV} color=\"primary\">\n                  Save\n                </Button>\n              </DialogActions>\n            </Dialog>\n\n            <TableBody>\n              {stableSort(data, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(n => {\n                  // const isSelected = this.isSelected(n.id);\n                  return (\n                    <TableRow\n                      hover\n                      className={classes.row}\n                      onClick={this.handleClickOpenV}\n                      tabIndex={-1}\n                      key={n.id}\n                    >\n                      <TableCell align=\"center\">{n.note}</TableCell>\n                      <TableCell align=\"center\">{n.sessionDate}</TableCell>\n                      <TableCell align=\"center\">{n.noteDate}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            \"aria-label\": \"Previous Page\"\n          }}\n          nextIconButtonProps={{\n            \"aria-label\": \"Next Page\"\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </Paper>\n    );\n  }\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EnhancedTable);\n"]},"metadata":{},"sourceType":"module"}