{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/panelTabs/memberPanelTabs.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport green from \"@material-ui/core/colors/green\";\nimport red from \"@material-ui/core/colors/red\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport AssignedClientsTable from \"../Tables/backEndAssignedClientsTable\";\nimport TeamMemFilesTable from \"../Tables/teamMemFilesTable\";\nimport AssignedClientsActions from \"../Actions/asssignedClientsActions\";\nimport TeamMemberInfo from \"../teamMember/teamMemberInfo\";\nimport MemberUploadAction from \"../Actions/memberUploadAction\";\nimport AdminPrivliges from \"../teamMember/adminPrivliges\";\nimport TherapistPrivliges from \"../teamMember/therapistPrivliges\";\nimport MemberAvatar from \"../teamMember/memberAvatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport classNames from \"classnames\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  root: {\n    //paddingTop: theme.spacing.unit * 1,\n    // paddingBottom: theme.spacing.unit * 1,\n    // paddingLeft: theme.spacing.unit,\n    //marginTop: theme.spacing.unit * 15,\n    //marginLeft: theme.spacing.unit * 22,\n    //marginRight: theme.spacing.unit * 22\n    align: \"center\",\n    //width: \"66%\",\n    height: \"130\"\n  },\n  toggle: {\n    paddingRight: theme.spacing.unit * 30\n  },\n  marg: {\n    marginLeft: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  },\n  purpleAvatar: {\n    margin: 10,\n    color: \"#fff\",\n    backgroundColor: deepPurple[500],\n    width: 100,\n    height: 100,\n    fontSize: 40,\n    marginBottom: theme.spacing.unit * -28,\n    marginRight: theme.spacing.unit * 18\n  },\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    width: 300\n  },\n  menu: {\n    width: 200\n  },\n  checked: {},\n  root2: {\n    width: \"100%\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: Cyan[800]\n  },\n  infoRoot: {\n    marginBottom: theme.spacing.unit * 2\n  },\n  assignRoot: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 5,\n    //marginLeft: theme.spacing.unit * 33.5,\n    // align: \"center\",\n    width: \"14.5%\"\n  },\n  assignButton: {\n    marginTop: theme.spacing(4),\n    margin: theme.spacing.unit,\n    width: 160\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  }\n});\n\nconst members = [{\n  value: \"Jane Doe\",\n  label: \"Jane Doe\"\n}, {\n  value: \"Hermione Granger\",\n  label: \"Hermione Granger\"\n}, {\n  value: \"Harry Potter\",\n  label: \"Harry Potter\"\n}];\nconst titles = [{\n  value: \"\",\n  label: \"\"\n}, {\n  value: \"Dr.\",\n  label: \"Dr.\"\n}, {\n  value: \"Miss\",\n  label: \"Miss\"\n}, {\n  value: \"Mr.\",\n  label: \"Mr.\"\n}, {\n  value: \"Mrs.\",\n  label: \"Mrs.\"\n}, {\n  value: \"Ms.\",\n  label: \"Ms.\"\n}, {\n  value: \"Mx.\",\n  label: \"Mx.\"\n}];\n\nclass TopPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkedA: true,\n      member: \"Harry Potter\",\n      therapistData: [],\n      clientData: [],\n      open: false,\n      cost: \"\",\n      length: \"\",\n      type: \"\",\n      checkedAdmin: true,\n      checkedThera: true,\n      checkedIntern: false,\n      tabValue: 0,\n      //client info\n      firstName: \"Harry\",\n      lastName: \"Potter\",\n      email: \"harry@hogwarts.com\",\n      title: \"Mr.\",\n      currentPassword: \"test123\",\n      confirmPassword: \"test123\",\n      phone: \"123-456-1111\",\n      address: \"713 Hogwarts Lane\",\n      primaryLocation: \"Diagon Alley\",\n      npi: \"731890\",\n      city: \"London\",\n      zipCode: \"77777\",\n      multiline: \"Controlled\",\n      // assigned clients\n      client: \"\",\n      assignOpen: false,\n      // privliges\n      invoice: false,\n      allCalendar: false,\n      payment: true,\n      editOtherSched: false,\n      viewOtherSched: false,\n      editOtherInfo: false,\n      viewOtherInfo: false,\n      addClient: true,\n      recordAttendance: true,\n      viewNote: true,\n      viewClient: false,\n      kpis: true,\n      viewReport: false,\n      viewCalendar: true,\n      viewOwnClient: true\n    };\n\n    this.handleChangeValue = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeChecked = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n\n    this.handleChangeTab = (event, tabValue) => {\n      this.setState({\n        tabValue\n      });\n    };\n\n    this.handleClickClientOpen = () => {\n      this.setState({\n        assignOpen: true\n      });\n    };\n\n    this.handleClientClose = () => {\n      this.setState({\n        assignOpen: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/members\").then(response => {\n      console.log(\"Got therapist data data!\");\n      console.log(response.data);\n      this.setState({\n        therapistData: response.data\n      });\n    }).then(response2 => {\n      return axios.get(\"http://localhost:5000/allclients\").then(response2 => {\n        console.log(\"Got client data!\");\n        console.log(response2.data);\n        this.setState({\n          clientData: response2.data\n        });\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Data interval set!\");\n    }\n  } // kills a process everytime we are done using it\n\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n  /* change of team member dropdown */\n\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          tabValue = _this$state.tabValue,\n          clientData = _this$state.clientData,\n          therapistData = _this$state.therapistData;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(MemberAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    })), React.createElement(Paper\n    /* className={classes.root} */\n    , {\n      elevation: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.checkedA,\n        onChange: this.handleChangeChecked(\"checkedA\"),\n        value: \"checkedA\",\n        marginLeft: \"theme.spacing.unit * 20\",\n        className: classes.marg\n        /*\n        classes={{\n          switchBase: classes.colorSwitchBase,\n          checked: classes.colorChecked,\n          bar: classes.colorBar\n        }} */\n        ,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }),\n      label: \"Active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      row: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-member\",\n      select: true,\n      label: \"Team Member\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.member,\n      onChange: this.handleChangeValue(\"member\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, therapistData.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.member_full_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, option.member_full_name))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedAdmin,\n        onChange: this.handleChangeChecked(\"checkedAdmin\"),\n        value: \"checkedAdmin\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }),\n      label: \"Administrator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedThera,\n        onChange: this.handleChangeChecked(\"checkedThera\"),\n        value: \"checkedThera\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }),\n      label: \"Therapist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedIntern,\n        onChange: this.handleChangeChecked(\"checkedIntern\"),\n        value: \"checkedIntern\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }),\n      label: \"Intern\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    })))), React.createElement(AppBar, {\n      className: classes.root2,\n      position: \"static\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      value: tabValue,\n      onChange: this.handleChangeTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: \"Team Member Information\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Assigned Clients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Message History\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Member Files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Privileges \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }))), tabValue === 0 && React.createElement(\"form\", {\n      /* className={classes.container} */\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.infoRoot,\n      elevation: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-title\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.title,\n      onChange: this.handleChangeValue(\"title\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, option.label)))), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.phone,\n      onChange: this.handleChangeValue(\"phone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-firstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.firstName,\n      onChange: this.handleChangeValue(\"firstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.email,\n      onChange: this.handleChangeValue(\"email\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.lastName,\n      onChange: this.handleChangeValue(\"lastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-address\",\n      variant: \"outlined\",\n      label: \"Address\",\n      className: classes.textField,\n      value: this.state.address,\n      onChange: this.handleChangeValue(\"address\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-password-input\",\n      variant: \"outlined\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.currentPassword //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-city-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.city,\n      onChange: this.handleChangeValue(\"city\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-confirmPassword-input\",\n      variant: \"outlined\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.confirmPassword //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-zipCode\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.zipCode,\n      onChange: this.handleChangeValue(\"zipCode\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-npi\",\n      variant: \"outlined\",\n      label: \"NPI Number\",\n      className: classes.textField,\n      value: this.state.npi,\n      onChange: this.handleChangeValue(\"npi\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-primary-location\",\n      variant: \"outlined\",\n      label: \"Primary Location\",\n      className: classes.textField,\n      value: this.state.primaryLocation,\n      onChange: this.handleChangeValue(\"primaryLocation\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    })), React.createElement(TextField, {\n      id: \"standard-full-width\",\n      label: \"Additional Notes\",\n      style: {\n        margin: 8\n      },\n      className: classes.textField2,\n      placeholder: \"Add any additional notes here\",\n      fullWidth: true,\n      multiline: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, \"Save\")))), tabValue === 1 && React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.handleClickClientOpen,\n      className: classes.assignButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      className: classNames(classes.leftIcon\n      /*classes.iconSmall*/\n      ),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594\n      },\n      __self: this\n    }), \"Assign Client\"), React.createElement(Dialog, {\n      open: this.state.assignOpen,\n      onClose: this.handleClientClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603\n      },\n      __self: this\n    }, \"Assign Client\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-client\",\n      select: true,\n      label: \"Clients\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.state.client,\n      onChange: this.handleChangeValue(\"client\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, clientData.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.client_full_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }, option.client_full_name)))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClientClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleClientClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }, \"Assign\")))), tabValue === 1 && React.createElement(AssignedClientsTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641\n      },\n      __self: this\n    }), tabValue === 2 && React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642\n      },\n      __self: this\n    }, \"Message History\"), tabValue === 3 && React.createElement(MemberUploadAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643\n      },\n      __self: this\n    }), tabValue === 3 && React.createElement(TeamMemFilesTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }), tabValue === 4 && React.createElement(Paper, {\n      className: classes.infoRoot,\n      elevation: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.invoice,\n        onChange: this.handleChangeChecked(\"invoice\"),\n        value: \"invoice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651\n        },\n        __self: this\n      }),\n      label: \"Invoices/Billing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.allCalendar,\n        onChange: this.handleChangeChecked(\"allCalendar\"),\n        value: \"allCalendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661\n        },\n        __self: this\n      }),\n      label: \"Calendar of everyone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        disabled: true,\n        checked: this.state.payment,\n        onChange: this.handleChangeChecked(\"payment\"),\n        value: \"payment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671\n        },\n        __self: this\n      }),\n      label: \"Take payment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.editOtherSched,\n        onChange: this.handleChangeChecked(\"editOtherSched\"),\n        value: \"editOtherSched\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682\n        },\n        __self: this\n      }),\n      label: \"Edit other therapist schedule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.viewOtherSched,\n        onChange: this.handleChangeChecked(\"viewOtherSched\"),\n        value: \"viewOtherSched\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        },\n        __self: this\n      }),\n      label: \"View other therapist schedule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.editOtherInfo,\n        onChange: this.handleChangeChecked(\"editOtherInfo\"),\n        value: \"editOtherInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702\n        },\n        __self: this\n      }),\n      label: \"Edit other therapist/client info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.viewOtherInfo,\n        onChange: this.handleChangeChecked(\"viewOtherInfo\"),\n        value: \"viewOtherInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713\n        },\n        __self: this\n      }),\n      label: \"View other therapist/client info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        disabled: true,\n        checked: this.state.addClient,\n        onChange: this.handleChangeChecked(\"addClient\"),\n        value: \"addClient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      }),\n      label: \"Add client\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        disabled: true,\n        checked: this.state.recordAttendance,\n        onChange: this.handleChangeChecked(\"recordAttendance\"),\n        value: \"recordAttendance\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734\n        },\n        __self: this\n      }),\n      label: \"Record Attendance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        disabled: true,\n        checked: this.state.viewNote,\n        onChange: this.handleChangeChecked(\"viewNote\"),\n        value: \"viewNote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745\n        },\n        __self: this\n      }),\n      label: \"View note history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.viewClient,\n        onChange: this.handleChangeChecked(\"viewClient\"),\n        value: \"viewClient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      }),\n      label: \"View other clients vs. own clients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        disabled: true,\n        checked: this.state.kpis,\n        onChange: this.handleChangeChecked(\"kpis\"),\n        value: \"kpis\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766\n        },\n        __self: this\n      }),\n      label: \"KPIs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.viewReport,\n        onChange: this.handleChangeChecked(\"viewReport\"),\n        value: \"jason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777\n        },\n        __self: this\n      }),\n      label: \"View/create reports\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        disabled: true,\n        checked: this.state.viewCalendar,\n        onChange: this.handleChangeChecked(\"viewCalendar\"),\n        value: \"viewCalendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787\n        },\n        __self: this\n      }),\n      label: \"View own calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        disabled: true,\n        checked: this.state.viewOwnClient,\n        onChange: this.handleChangeChecked(\"viewOwnClient\"),\n        value: \"viewOwnClient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798\n        },\n        __self: this\n      }),\n      label: \"View own clients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TopPanel);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/panelTabs/memberPanelTabs.js"],"names":["React","PropTypes","withStyles","Paper","deepPurple","Grid","Avatar","green","red","FormGroup","FormControlLabel","Switch","MenuItem","TextField","Checkbox","AppBar","Tab","Tabs","AssignedClientsTable","TeamMemFilesTable","AssignedClientsActions","TeamMemberInfo","MemberUploadAction","AdminPrivliges","TherapistPrivliges","MemberAvatar","Button","Box","Container","Cyan","Dialog","DialogActions","DialogContent","DialogTitle","AddIcon","classNames","axios","styles","theme","root","align","height","toggle","paddingRight","spacing","unit","marg","marginLeft","marginBottom","purpleAvatar","margin","color","backgroundColor","width","fontSize","marginRight","colorSwitchBase","colorBar","colorChecked","textField","menu","checked","root2","borderRadius","shape","infoRoot","assignRoot","paddingTop","paddingBottom","marginTop","assignButton","leftIcon","members","value","label","titles","TopPanel","Component","state","checkedA","member","therapistData","clientData","open","cost","length","type","checkedAdmin","checkedThera","checkedIntern","tabValue","firstName","lastName","email","title","currentPassword","confirmPassword","phone","address","primaryLocation","npi","city","zipCode","multiline","client","assignOpen","invoice","allCalendar","payment","editOtherSched","viewOtherSched","editOtherInfo","viewOtherInfo","addClient","recordAttendance","viewNote","viewClient","kpis","viewReport","viewCalendar","viewOwnClient","handleChangeValue","name","event","setState","target","handleChangeChecked","handleChangeTab","handleClickClientOpen","handleClientClose","componentDidMount","get","then","response","console","log","data","response2","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","render","classes","props","MenuProps","className","map","option","member_full_name","textField2","shrink","saveButton","client_full_name","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport green from \"@material-ui/core/colors/green\";\nimport red from \"@material-ui/core/colors/red\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport AssignedClientsTable from \"../Tables/backEndAssignedClientsTable\";\nimport TeamMemFilesTable from \"../Tables/teamMemFilesTable\";\nimport AssignedClientsActions from \"../Actions/asssignedClientsActions\";\nimport TeamMemberInfo from \"../teamMember/teamMemberInfo\";\nimport MemberUploadAction from \"../Actions/memberUploadAction\";\nimport AdminPrivliges from \"../teamMember/adminPrivliges\";\nimport TherapistPrivliges from \"../teamMember/therapistPrivliges\";\nimport MemberAvatar from \"../teamMember/memberAvatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport classNames from \"classnames\";\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  root: {\n    //paddingTop: theme.spacing.unit * 1,\n    // paddingBottom: theme.spacing.unit * 1,\n    // paddingLeft: theme.spacing.unit,\n    //marginTop: theme.spacing.unit * 15,\n    //marginLeft: theme.spacing.unit * 22,\n    //marginRight: theme.spacing.unit * 22\n\n    align: \"center\",\n    //width: \"66%\",\n    height: \"130\"\n  },\n\n  toggle: {\n    paddingRight: theme.spacing.unit * 30\n  },\n\n  marg: {\n    marginLeft: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  },\n\n  purpleAvatar: {\n    margin: 10,\n    color: \"#fff\",\n    backgroundColor: deepPurple[500],\n    width: 100,\n    height: 100,\n    fontSize: 40,\n    marginBottom: theme.spacing.unit * -28,\n    marginRight: theme.spacing.unit * 18\n  },\n\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    width: 300\n  },\n  menu: {\n    width: 200\n  },\n\n  checked: {},\n\n  root2: {\n    width: \"100%\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: Cyan[800]\n  },\n  infoRoot: {\n    marginBottom: theme.spacing.unit * 2\n  },\n  assignRoot: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 5,\n    //marginLeft: theme.spacing.unit * 33.5,\n    // align: \"center\",\n    width: \"14.5%\"\n  },\n\n  assignButton: {\n    marginTop: theme.spacing(4),\n    margin: theme.spacing.unit,\n    width: 160\n  },\n\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  }\n});\n\nconst members = [\n  {\n    value: \"Jane Doe\",\n    label: \"Jane Doe\"\n  },\n\n  {\n    value: \"Hermione Granger\",\n    label: \"Hermione Granger\"\n  },\n  {\n    value: \"Harry Potter\",\n    label: \"Harry Potter\"\n  }\n];\n\nconst titles = [\n  {\n    value: \"\",\n    label: \"\"\n  },\n\n  {\n    value: \"Dr.\",\n    label: \"Dr.\"\n  },\n\n  {\n    value: \"Miss\",\n    label: \"Miss\"\n  },\n\n  {\n    value: \"Mr.\",\n    label: \"Mr.\"\n  },\n  {\n    value: \"Mrs.\",\n    label: \"Mrs.\"\n  },\n  {\n    value: \"Ms.\",\n    label: \"Ms.\"\n  },\n  {\n    value: \"Mx.\",\n    label: \"Mx.\"\n  }\n];\n\nclass TopPanel extends React.Component {\n  state = {\n    checkedA: true,\n    member: \"Harry Potter\",\n    therapistData: [],\n    clientData: [],\n    open: false,\n    cost: \"\",\n    length: \"\",\n    type: \"\",\n    checkedAdmin: true,\n    checkedThera: true,\n    checkedIntern: false,\n    tabValue: 0,\n    //client info\n    firstName: \"Harry\",\n    lastName: \"Potter\",\n    email: \"harry@hogwarts.com\",\n    title: \"Mr.\",\n    currentPassword: \"test123\",\n    confirmPassword: \"test123\",\n    phone: \"123-456-1111\",\n    address: \"713 Hogwarts Lane\",\n    primaryLocation: \"Diagon Alley\",\n    npi: \"731890\",\n    city: \"London\",\n    zipCode: \"77777\",\n    multiline: \"Controlled\",\n    // assigned clients\n    client: \"\",\n    assignOpen: false,\n    // privliges\n    invoice: false,\n    allCalendar: false,\n    payment: true,\n    editOtherSched: false,\n    viewOtherSched: false,\n    editOtherInfo: false,\n    viewOtherInfo: false,\n    addClient: true,\n    recordAttendance: true,\n    viewNote: true,\n    viewClient: false,\n    kpis: true,\n    viewReport: false,\n    viewCalendar: true,\n    viewOwnClient: true\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/members\")\n      .then(response => {\n        console.log(\"Got therapist data data!\");\n        console.log(response.data);\n        this.setState({\n          therapistData: response.data\n        });\n      })\n      .then(response2 => {\n        return axios.get(\"http://localhost:5000/allclients\").then(response2 => {\n          console.log(\"Got client data!\");\n          console.log(response2.data);\n          this.setState({\n            clientData: response2.data\n          });\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  // kills a process everytime we are done using it\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  /* change of team member dropdown */\n  handleChangeValue = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  // change of check boxes\n  handleChangeChecked = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  handleChangeTab = (event, tabValue) => {\n    this.setState({ tabValue });\n  };\n\n  //show client details box;\n  handleClickClientOpen = () => {\n    this.setState({ assignOpen: true });\n  };\n\n  handleClientClose = () => {\n    this.setState({ assignOpen: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { tabValue, clientData, therapistData } = this.state;\n\n    return (\n      <div>\n        <Container maxWidth=\"lg\">\n          {/* Avatar */}\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <MemberAvatar />\n          </Grid>\n          <Paper /* className={classes.root} */ elevation={2}>\n            <FormGroup row>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={this.state.checkedA}\n                    onChange={this.handleChangeChecked(\"checkedA\")}\n                    value=\"checkedA\"\n                    marginLeft=\"theme.spacing.unit * 20\"\n                    className={classes.marg}\n                    /*\n                    classes={{\n                      switchBase: classes.colorSwitchBase,\n                      checked: classes.colorChecked,\n                      bar: classes.colorBar\n                    }} */\n                    color=\"primary\"\n                  />\n                }\n                label=\"Active\"\n              />\n            </FormGroup>\n\n            {/* member drop down */}\n            <Grid container row justify=\"space-between\">\n              <TextField\n                id=\"standard-select-member\"\n                select\n                label=\"Team Member\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.member}\n                onChange={this.handleChangeValue(\"member\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {therapistData.map(option => (\n                  <MenuItem key={option.value} value={option.member_full_name}>\n                    {option.member_full_name}\n                  </MenuItem>\n                ))}\n              </TextField>\n\n              <FormGroup row>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state.checkedAdmin}\n                      onChange={this.handleChangeChecked(\"checkedAdmin\")}\n                      value=\"checkedAdmin\"\n                      color=\"default\"\n                    />\n                  }\n                  label=\"Administrator\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state.checkedThera}\n                      onChange={this.handleChangeChecked(\"checkedThera\")}\n                      value=\"checkedThera\"\n                      color=\"default\"\n                    />\n                  }\n                  label=\"Therapist\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state.checkedIntern}\n                      onChange={this.handleChangeChecked(\"checkedIntern\")}\n                      value=\"checkedIntern\"\n                      color=\"default\"\n                    />\n                  }\n                  label=\"Intern\"\n                />\n              </FormGroup>\n            </Grid>\n          </Paper>\n\n          <AppBar className={classes.root2} position=\"static\">\n            <Tabs value={tabValue} onChange={this.handleChangeTab}>\n              <Tab label=\"Team Member Information\" />\n              <Tab label=\"Assigned Clients\" />\n              <Tab label=\"Message History\" />\n              <Tab label=\"Member Files\" />\n              <Tab label=\"Privileges \" />\n            </Tabs>\n          </AppBar>\n\n          {tabValue === 0 && (\n            <form\n              /* className={classes.container} */ noValidate\n              autoComplete=\"off\"\n            >\n              <Paper className={classes.infoRoot} elevation={2}>\n                <Grid container justify=\"center\" alignItems=\"center\">\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-select-title\"\n                      select\n                      label=\"Title\"\n                      variant=\"outlined\"\n                      className={classes.textField}\n                      value={this.state.title}\n                      onChange={this.handleChangeValue(\"title\")}\n                      SelectProps={{\n                        MenuProps: {\n                          className: classes.menu\n                        }\n                      }}\n                    >\n                      {titles.map(option => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-phone\"\n                      variant=\"outlined\"\n                      label=\"Phone Number\"\n                      className={classes.textField}\n                      value={this.state.phone}\n                      onChange={this.handleChangeValue(\"phone\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-firstName\"\n                      label=\"First Name\"\n                      variant=\"outlined\"\n                      className={classes.textField}\n                      value={this.state.firstName}\n                      onChange={this.handleChangeValue(\"firstName\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-email\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      className={classes.textField}\n                      value={this.state.email}\n                      onChange={this.handleChangeValue(\"email\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-lastNamename\"\n                      label=\"Last Name\"\n                      variant=\"outlined\"\n                      className={classes.textField}\n                      value={this.state.lastName}\n                      onChange={this.handleChangeValue(\"lastName\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-address\"\n                      variant=\"outlined\"\n                      label=\"Address\"\n                      className={classes.textField}\n                      value={this.state.address}\n                      onChange={this.handleChangeValue(\"address\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-password-input\"\n                      variant=\"outlined\"\n                      label=\"Password\"\n                      className={classes.textField}\n                      type=\"password\"\n                      value={this.state.currentPassword}\n                      //autoComplete=\"current-password\"\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-city-\"\n                      variant=\"outlined\"\n                      label=\"City\"\n                      className={classes.textField}\n                      value={this.state.city}\n                      onChange={this.handleChangeValue(\"city\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      required\n                      id=\"standard-confirmPassword-input\"\n                      variant=\"outlined\"\n                      label=\"Confirm Password\"\n                      className={classes.textField}\n                      type=\"password\"\n                      value={this.state.confirmPassword}\n                      //autoComplete=\"current-password\"\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-zipCode\"\n                      variant=\"outlined\"\n                      label=\"Zip Code\"\n                      className={classes.textField}\n                      value={this.state.zipCode}\n                      onChange={this.handleChangeValue(\"zipCode\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-npi\"\n                      variant=\"outlined\"\n                      label=\"NPI Number\"\n                      className={classes.textField}\n                      value={this.state.npi}\n                      onChange={this.handleChangeValue(\"npi\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n                  <Grid direction=\"column\">\n                    <TextField\n                      id=\"standard-primary-location\"\n                      variant=\"outlined\"\n                      label=\"Primary Location\"\n                      className={classes.textField}\n                      value={this.state.primaryLocation}\n                      onChange={this.handleChangeValue(\"primaryLocation\")}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <TextField\n                    id=\"standard-full-width\"\n                    label=\"Additional Notes\"\n                    style={{ margin: 8 }}\n                    className={classes.textField2}\n                    placeholder=\"Add any additional notes here\"\n                    fullWidth\n                    multiline\n                    margin=\"normal\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                  />\n                </Grid>\n                <Grid container direction=\"row\" justify=\"flex-end\">\n                  <Button\n                    className={classes.saveButton}\n                    size=\"large\"\n                    variant=\"contained\"\n                  >\n                    Save\n                  </Button>\n                </Grid>\n              </Paper>\n            </form>\n          )}\n          {tabValue === 1 && (\n            <Grid container justify=\"center\" alignItems=\"center\">\n              {/* Assign client button */}\n              <Button\n                variant=\"contained\"\n                onClick={this.handleClickClientOpen}\n                className={classes.assignButton}\n              >\n                <AddIcon\n                  className={classNames(classes.leftIcon /*classes.iconSmall*/)}\n                />\n                Assign Client\n              </Button>\n              <Dialog\n                open={this.state.assignOpen}\n                onClose={this.handleClientClose}\n              >\n                <DialogTitle id=\"form-dialog-title\">Assign Client</DialogTitle>\n                <DialogContent>\n                  <TextField\n                    id=\"standard-select-client\"\n                    select\n                    label=\"Clients\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    className={classes.textField}\n                    value={this.state.client}\n                    onChange={this.handleChangeValue(\"client\")}\n                    SelectProps={{\n                      MenuProps: {\n                        className: classes.menu\n                      }\n                    }}\n                  >\n                    {clientData.map(option => (\n                      <MenuItem\n                        key={option.value}\n                        value={option.client_full_name}\n                      >\n                        {option.client_full_name}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={this.handleClientClose} color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button onClick={this.handleClientClose} color=\"primary\">\n                    Assign\n                  </Button>\n                </DialogActions>\n              </Dialog>\n            </Grid>\n          )}\n          {tabValue === 1 && <AssignedClientsTable />}\n          {tabValue === 2 && <Paper>Message History</Paper>}\n          {tabValue === 3 && <MemberUploadAction />}\n          {tabValue === 3 && <TeamMemFilesTable />}\n          {tabValue === 4 && (\n            <Paper className={classes.infoRoot} elevation={2}>\n              <Grid container justify=\"flex-start\" alignItems=\"flex-start\">\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.invoice}\n                        onChange={this.handleChangeChecked(\"invoice\")}\n                        value=\"invoice\"\n                      />\n                    }\n                    label=\"Invoices/Billing\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.allCalendar}\n                        onChange={this.handleChangeChecked(\"allCalendar\")}\n                        value=\"allCalendar\"\n                      />\n                    }\n                    label=\"Calendar of everyone\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        disabled\n                        checked={this.state.payment}\n                        onChange={this.handleChangeChecked(\"payment\")}\n                        value=\"payment\"\n                      />\n                    }\n                    label=\"Take payment\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.editOtherSched}\n                        onChange={this.handleChangeChecked(\"editOtherSched\")}\n                        value=\"editOtherSched\"\n                      />\n                    }\n                    label=\"Edit other therapist schedule\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.viewOtherSched}\n                        onChange={this.handleChangeChecked(\"viewOtherSched\")}\n                        value=\"viewOtherSched\"\n                      />\n                    }\n                    label=\"View other therapist schedule\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.editOtherInfo}\n                        onChange={this.handleChangeChecked(\"editOtherInfo\")}\n                        value=\"editOtherInfo\"\n                      />\n                    }\n                    label=\"Edit other therapist/client info\"\n                  />\n\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.viewOtherInfo}\n                        onChange={this.handleChangeChecked(\"viewOtherInfo\")}\n                        value=\"viewOtherInfo\"\n                      />\n                    }\n                    label=\"View other therapist/client info\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        disabled\n                        checked={this.state.addClient}\n                        onChange={this.handleChangeChecked(\"addClient\")}\n                        value=\"addClient\"\n                      />\n                    }\n                    label=\"Add client\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        disabled\n                        checked={this.state.recordAttendance}\n                        onChange={this.handleChangeChecked(\"recordAttendance\")}\n                        value=\"recordAttendance\"\n                      />\n                    }\n                    label=\"Record Attendance\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        disabled\n                        checked={this.state.viewNote}\n                        onChange={this.handleChangeChecked(\"viewNote\")}\n                        value=\"viewNote\"\n                      />\n                    }\n                    label=\"View note history\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.viewClient}\n                        onChange={this.handleChangeChecked(\"viewClient\")}\n                        value=\"viewClient\"\n                      />\n                    }\n                    label=\"View other clients vs. own clients\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        disabled\n                        checked={this.state.kpis}\n                        onChange={this.handleChangeChecked(\"kpis\")}\n                        value=\"kpis\"\n                      />\n                    }\n                    label=\"KPIs\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.viewReport}\n                        onChange={this.handleChangeChecked(\"viewReport\")}\n                        value=\"jason\"\n                      />\n                    }\n                    label=\"View/create reports\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        disabled\n                        checked={this.state.viewCalendar}\n                        onChange={this.handleChangeChecked(\"viewCalendar\")}\n                        value=\"viewCalendar\"\n                      />\n                    }\n                    label=\"View own calendar\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        disabled\n                        checked={this.state.viewOwnClient}\n                        onChange={this.handleChangeChecked(\"viewOwnClient\")}\n                        value=\"viewOwnClient\"\n                      />\n                    }\n                    label=\"View own clients\"\n                  />\n                </FormGroup>\n              </Grid>\n            </Paper>\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TopPanel);\n"]},"metadata":{},"sourceType":"module"}