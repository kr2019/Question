{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/newClientConsolidate.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport red from \"@material-ui/core/colors/red\";\nimport Teal from \"@material-ui/core/colors/teal\";\nimport green from \"@material-ui/core/colors/green\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiSwitch from \"@material-ui/core/Switch\"; // putting commmnent to change push comment\n\nimport { Switch, Link, Route, withRouter, Redirect } from \"react-router-dom\"; //\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    // paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  rootTitle: {\n    width: \"100%\" //paddingTop: theme.spacing.unit,\n    //paddingBottom: theme.spacing.unit * 2\n\n  },\n  marg: {\n    marginLeft: theme.spacing(20),\n    marginBottom: theme.spacing(1)\n  },\n  switchBase: {\n    color: green[300],\n    \"&$checked\": {\n      color: green[500]\n    },\n    \"&$checked + $track\": {\n      backgroundColor: green[500]\n    }\n  },\n  checked: {},\n  track: {},\n  colorSwitchBase: {\n    color: green[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    // marginBottom: theme.spacing(10),\n    width: 850\n  },\n  textField3: {\n    // marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing(20),\n    width: 300\n  },\n  title: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3)\n  },\n  title2: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  },\n  menu2: {\n    width: 200\n  },\n  root2: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  root3: {\n    width: \"5%\"\n  },\n  divider: {\n    backgroundColor: \"#1de9b6\"\n  },\n  saveButton: {\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n    /* this is text color */\n    color: theme.palette.getContrastText(\"#1de9b6\"),\n    backgroundColor: \"#1de9b6\",\n    \"&:hover\": {\n      backgroundColor: \"#00bfa5\"\n    }\n  }\n});\n\nconst titles = [{\n  value: \"\",\n  label: \"\"\n}, {\n  value: \"Dr.\",\n  label: \"Dr.\"\n}, {\n  value: \"Miss\",\n  label: \"Miss\"\n}, {\n  value: \"Mr.\",\n  label: \"Mr.\"\n}, {\n  value: \"Mrs.\",\n  label: \"Mrs.\"\n}, {\n  value: \"Ms.\",\n  label: \"Ms.\"\n}, {\n  value: \"Mx.\",\n  label: \"Mx.\"\n}];\nconst clientTypes = [{\n  value: \"Individual\",\n  label: \"Individual\"\n}, {\n  value: \"Facility\",\n  label: \"Facility\"\n}];\nconst sessionTypes = [{\n  value: \"Lessons\",\n  label: \"Lessons\"\n}, {\n  value: \"Therapy\",\n  label: \"Therapy\"\n}];\nconst paymentTypes = [{\n  value: \"Card\",\n  label: \"Card\"\n}, {\n  value: \"Cash\",\n  label: \"Cash\"\n}, {\n  value: \"Check\",\n  label: \"Check\"\n}];\nconst cardTypes = [{\n  value: \"American Express\",\n  label: \"American Express\"\n}, {\n  value: \"Discover\",\n  label: \"Discover\"\n}, {\n  value: \"MasterCard\",\n  label: \"MasterCard\"\n}, {\n  value: \"Visa\",\n  label: \"Visa\"\n}];\nconst navStyle = {\n  color: \"black\",\n  textDecoration: \"none\"\n};\n\nclass TopPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //client info state\n      clientType: \"\",\n      clientFirstName: \"\",\n      clientLastName: \"\",\n      clientEmail: \"\",\n      clientTitle: \"\",\n      clientCurrentPassword: \"\",\n      clientConfirmPassword: \"\",\n      sessionType: \"\",\n      sessionCost: \"\",\n      sessionLegnth: \"\",\n      clientPhone: \"\",\n      clientAddress: \"\",\n      clientBday: \"\",\n      clientState: \"\",\n      clientCity: \"\",\n      clientZipCode: \"\",\n      clientStreetAddress: \"\",\n      clientNotes: \"\",\n      multiline: \"Controlled\",\n      //contact info state\n      contactFirstName: \"\",\n      contactLastName: \"\",\n      contactEmail: \"\",\n      contactTitle: \"\",\n      contactPhone: \"\",\n      contactAddress: \"\",\n      contactCity: \"\",\n      contactState: \"\",\n      contactZip: \"\",\n      // contact 2 info state\n      contactFirstName2: null,\n      contactLastName2: null,\n      contactEmail2: null,\n      contactTitle2: null,\n      contactPhone2: null,\n      contactAddress2: null,\n      contactCity2: null,\n      contactState2: null,\n      contactZip2: null,\n      // contact 3 info state\n      contactFirstName3: null,\n      contactLastName3: null,\n      contactEmail3: null,\n      contactTitle3: null,\n      contactPhone3: null,\n      contactAddress3: null,\n      contactCity3: null,\n      contactState3: null,\n      contactZip3: null,\n      //payor info state\n      billingFirstName: \"\",\n      billingLastName: \"\",\n      nameOnCard: \"\",\n      cardNum: \"\",\n      payorEmail: \"\",\n      payorTitle: \"\",\n      paymentType: \"Cash\",\n      billingPhone: \"\",\n      billingAddress: \"\",\n      billingCity: \"\",\n      billingZip: \"\",\n      billingState: \"\",\n      cvv: \"\",\n      expDate: \"\",\n      cardType: \"\",\n      sameAsContact: false,\n      //toDashboard: false,\n      navigate: false,\n      //intervalIsSet: \"\"\n      therapistData: [],\n      therapist: \"\",\n      // condition\n      checkedContact2: false,\n      checkedContact3: false\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange2 = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeCheck2 = name => event => {\n      this.setState({\n        [name]: event.target.checked,\n        //this will set the values to blank once the window is closed\n        contactFirstName2: null,\n        contactLastName2: null,\n        contactEmail2: null,\n        contactTitle2: null,\n        contactPhone2: null,\n        contactAddress2: null,\n        contactCity2: null,\n        contactState2: null,\n        contactZip2: null,\n        // contact 3,\n        checkedContact3: false,\n        contactFirstName3: null,\n        contactLastName3: null,\n        contactEmail3: null,\n        contactTitle3: null,\n        contactPhone3: null,\n        contactAddress3: null,\n        contactCity3: null,\n        contactState3: null,\n        contactZip3: null\n      });\n    };\n\n    this.handleChangeCheck3 = name => event => {\n      this.setState({\n        [name]: event.target.checked,\n        //this will set the values to blank once the window is closed\n        contactFirstName3: null,\n        contactLastName3: null,\n        contactEmail3: null,\n        contactTitle3: null,\n        contactPhone3: null,\n        contactAddress3: null,\n        contactCity3: null,\n        contactState3: null,\n        contactZip3: null\n      });\n    };\n\n    this.handleChangeCheck = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n\n    this.toggleShow = () => {\n      this.setState(state => ({\n        isShow: !state.isShow\n      }));\n    };\n  }\n\n  /*\n  reloadPage() {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  }\n  */\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/allclients\").then(response => {\n      console.log(\"Got client data!\");\n      console.log(response.data);\n      this.setState({\n        clientData: response.data\n      });\n    }).then(response2 => {\n      return axios.get(\"http://localhost:5000/gettherapists\") // this is not using the sequelize method\n      .then(response2 => {\n        console.log(\"Got therapist data!\");\n        console.log(response2.data);\n        this.setState({\n          therapistData: response2.data\n        });\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n    const clientObj = {\n      // client info\n      checkedActive: false,\n      clientType: this.state.clientType,\n      clientFirstName: this.state.clientFirstName,\n      clientLastName: this.state.clientLastName,\n      clientEmail: this.state.clientEmail,\n      clientTitle: this.state.clientTitle,\n      clientCurrentPassword: this.state.clientCurrentPassword,\n      clientConfirmPassword: this.state.clientConfirmPassword,\n      clientPhone: this.state.clientPhone,\n      clientAddress: this.state.clientAddress,\n      sessionType: this.state.sessionType,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLegnth,\n      clientBday: this.state.clientBday,\n      clientState: this.state.clientState,\n      clientCity: this.state.clientCity,\n      clientZipCode: this.state.clientZipCode,\n      clientStreetAddress: this.state.clientStreetAddress,\n      clientNotes: this.state.clientNotes,\n      // contact info\n      contactFirstName: this.state.contactFirstName,\n      contactLastName: this.state.contactLastName,\n      contactEmail: this.state.contactEmail,\n      contactTitle: this.state.contactTitle,\n      contactPhone: this.state.contactPhone,\n      contactAddress: this.state.contactAddress,\n      contactCity: this.state.contactCity,\n      contactState: this.state.contactState,\n      contactZip: this.state.contactZip,\n      // contact 2 info\n      contactFirstName2: this.state.contactFirstName2,\n      contactLastName2: this.state.contactLastName2,\n      contactEmail2: this.state.contactEmail2,\n      contactTitle2: this.state.contactTitle2,\n      contactPhone2: this.state.contactPhone2,\n      contactAddress2: this.state.contactAddress2,\n      contactCity2: this.state.contactCity2,\n      contactState2: this.state.contactState2,\n      contactZip2: this.state.contactZip2,\n      // contact 3 info\n      contactFirstName3: this.state.contactFirstName3,\n      contactLastName3: this.state.contactLastName3,\n      contactEmail3: this.state.contactEmail3,\n      contactTitle3: this.state.contactTitle3,\n      contactPhone3: this.state.contactPhone3,\n      contactAddress3: this.state.contactAddress3,\n      contactCity3: this.state.contactCity3,\n      contactState3: this.state.contactState3,\n      contactZip3: this.state.contactZip3,\n      // payor info\n      billingFirstName: this.state.billingFirstName,\n      billingLastName: this.state.billingLastName,\n      nameOnCard: this.state.nameOnCard,\n      cardNum: this.state.cardNum,\n      payorEmail: this.state.payorEmail,\n      payorTitle: this.state.payorTitle,\n      paymentType: this.state.paymentType,\n      billingPhone: this.state.billingPhone,\n      billingAddress: this.state.billingAddress,\n      billingCity: this.state.billingCity,\n      billingZip: this.state.billingZip,\n      billingState: this.state.billingState,\n      cvv: this.state.cvv,\n      expDate: this.state.expDate,\n      cardType: this.state.cardType\n    };\n    axios.post(\"http://localhost:5000/clients/registerclient\", clientObj).then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      //client info\n      clientObj\n    });\n  }\n\n  /*\n  handleSubmit = (user) => {\n    saveUser(user)\n      .then(() => this.setState(() => ({\n        toDashboard: true\n      })))\n  }\n  */\n\n  /*\n  setLocation() {\n    this.props.history.push(\"/clients\");\n  } */\n  render() {\n    const classes = this.props.classes;\n    const therapistData = this.state.therapistData;\n    /*\n    if (this.state.toDashboard === true) {\n        return <Redirect to='/dashboard' />\n      }\n    */\n\n    /*\n     const { navigate } = this.state;\n     // here is the important part\n    if (navigate) {\n      return <Redirect to=\"/clients\" push={true} />;\n    }\n    */\n\n    return React.createElement(Container, {\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.rootTitle,\n      elevation: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, \"Client Information\")), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      row: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(MuiSwitch, {\n        checked: this.state.checkedActive,\n        onChange: this.handleChangeCheck(\"checkedActive\"),\n        value: \"checkedActive\" //marginLeft=\"theme.spacing.unit * 20\"\n        ,\n        className: classes.marg\n        /*\n        classes={{\n          switchBase: classes.colorSwitchBase,\n          checked: classes.checked,\n          bar: classes.track\n        }}*/\n        ,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }),\n      label: \"Active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    })), React.createElement(TextField, {\n      id: \"standard-select-clientType\",\n      select: true,\n      label: \"Client Type\",\n      variant: \"outlined\",\n      className: classes.textField3,\n      value: this.state.clientType,\n      onChange: this.handleChange(\"clientType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, clientTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }, option.label)))), React.createElement(TextField, {\n      id: \"standard-select-title\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.clientTitle,\n      onChange: this.handleChange(\"clientTitle\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      required: true,\n      id: \"standard-firstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.clientFirstName,\n      onChange: this.handleChange(\"clientFirstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.clientLastName,\n      onChange: this.handleChange(\"clientLastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.clientEmail,\n      onChange: this.handleChange(\"clientEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-password-input\",\n      variant: \"outlined\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.clientCurrentPassword,\n      onChange: this.handleChange(\"clientCurrentPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-confirmPassword-input\",\n      variant: \"outlined\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange(\"confirmPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-select-sessionType\",\n      select: true,\n      label: \"Session Type\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.state.sessionType,\n      onChange: this.handleChange(\"sessionType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }, sessionTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-cost\",\n      label: \"Session Cost (dollars)\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.sessionCost,\n      onChange: this.handleChange(\"sessionCost\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-length\",\n      label: \"Session Length (minutes)\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.sessionLength,\n      onChange: this.handleChange(\"sessionLength\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-select-therapist\",\n      select: true,\n      label: \"Therapist\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.state.therapist,\n      onChange: this.handleChange(\"therapist\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704\n      },\n      __self: this\n    }, therapistData.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.member_full_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720\n      },\n      __self: this\n    }, option.member_full_name))), React.createElement(TextField, {\n      id: \"standard-address\",\n      variant: \"outlined\",\n      label: \"Address\",\n      className: classes.textField,\n      value: this.state.clientAddress,\n      onChange: this.handleChange(\"clientAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-city-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.clientCity,\n      onChange: this.handleChange(\"clientCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.clientState,\n      onChange: this.handleChange(\"clientState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-zipCode\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.clientZipCode,\n      onChange: this.handleChange(\"clientZipCode\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.clientPhone,\n      onChange: this.handleChange(\"clientPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-bday\",\n      variant: \"outlined\",\n      label: \"Birthday\",\n      className: classes.textField,\n      value: this.state.clientBday,\n      onChange: this.handleChange(\"clientBday\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\",\n      label: \"\",\n      style: {\n        margin: 8\n      },\n      className: classes.textField2,\n      value: this.state.clientNotes,\n      onChange: this.handleChange(\"clientNotes\"),\n      placeholder: \"Add any additional notes here\",\n      fullWidth: true,\n      multiline: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781\n      },\n      __self: this\n    })), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      className: classes.divider,\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: classes.rootTitle,\n      elevation: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801\n      },\n      __self: this\n    }, \"Contact Information\"))), React.createElement(TextField, {\n      id: \"standard-select-contactTitle\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactTitle,\n      onChange: this.handleChange(\"contactTitle\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 827\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactFirstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactFirstName,\n      onChange: this.handleChange(\"contactFirstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactLastName,\n      onChange: this.handleChange(\"contactLastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactAddress\",\n      variant: \"outlined\",\n      label: \"Street Address\",\n      className: classes.textField,\n      value: this.state.contactAddress,\n      onChange: this.handleChange(\"contactAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactCity-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.contactCity,\n      onChange: this.handleChange(\"contactCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.contactState,\n      onChange: this.handleChange(\"contactState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactZip\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.contactZip,\n      onChange: this.handleChange(\"contactZip\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactEmail\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.contactEmail,\n      onChange: this.handleChange(\"contactEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactPhone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.contactPhone,\n      onChange: this.handleChange(\"contactPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 898\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedContact2,\n        onChange: this.handleChangeCheck2(\"checkedContact2\"),\n        value: \"checkedContact2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 911\n        },\n        __self: this\n      }),\n      label: \"Add second contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909\n      },\n      __self: this\n    }))), this.state.checkedContact2 ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 923\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925\n      },\n      __self: this\n    }, \"Contact 2 Information\")) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-select-contactTitle2\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactTitle2,\n      onChange: this.handleChange(\"contactTitle2\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 951\n      },\n      __self: this\n    }, option.label))) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactFirstName2\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactFirstName2,\n      onChange: this.handleChange(\"contactFirstName2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 959\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename2\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactLastName2,\n      onChange: this.handleChange(\"contactLastName2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 971\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-contactAddress2\",\n      variant: \"outlined\",\n      label: \"Street Address\",\n      className: classes.textField,\n      value: this.state.contactAddress2,\n      onChange: this.handleChange(\"contactAddress2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 984\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-contactCity-2\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.contactCity2,\n      onChange: this.handleChange(\"contactCity2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 995\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-state2\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.contactState2,\n      onChange: this.handleChange(\"contactState2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1007\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-contactZip2\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.contactZip2,\n      onChange: this.handleChange(\"contactZip2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1018\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactEmail2\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.contactEmail2,\n      onChange: this.handleChange(\"contactEmail2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1030\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-contactPhone2\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.contactPhone2,\n      onChange: this.handleChange(\"contactPhone2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1054\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1055\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedContact3,\n        onChange: this.handleChangeCheck3(\"checkedContact3\"),\n        value: \"checkedContact3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1058\n        },\n        __self: this\n      }),\n      label: \"Add third contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056\n      },\n      __self: this\n    }))) : null, this.state.checkedContact3 ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1072\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1073\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1074\n      },\n      __self: this\n    }, \"Contact 3 Information\")) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-select-contactTitle3\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactTitle3,\n      onChange: this.handleChange(\"contactTitle3\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1100\n      },\n      __self: this\n    }, option.label))) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactFirstName3\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactFirstName3,\n      onChange: this.handleChange(\"contactFirstName3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1108\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename3\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactLastName3,\n      onChange: this.handleChange(\"contactLastName3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1120\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-contactAddress3\",\n      variant: \"outlined\",\n      label: \"Street Address\",\n      className: classes.textField,\n      value: this.state.contactAddress3,\n      onChange: this.handleChange(\"contactAddress3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1133\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-contactCity-3\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.contactCity3,\n      onChange: this.handleChange(\"contactCity3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1144\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-state3\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.contactState3,\n      onChange: this.handleChange(\"contactState3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1156\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-contactZip3\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.contactZip3,\n      onChange: this.handleChange(\"contactZip3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1167\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactEmail3\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.contactEmail3,\n      onChange: this.handleChange(\"contactEmail3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1179\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-contactPhone3\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.contactPhone3,\n      onChange: this.handleChange(\"contactPhone3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1191\n      },\n      __self: this\n    }) : null, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1229\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1230\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.title2,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1231\n      },\n      __self: this\n    }, \"Payor Information\")), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1239\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"billingFirstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.billingFirstName,\n      onChange: this.handleChange(\"billingFirstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1240\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"billingLastName\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.billingLastName,\n      onChange: this.handleChange(\"billingLastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1250\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-select-paymentType\",\n      select: true,\n      label: \"Payment Type\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.paymentType,\n      onChange: this.handleChange(\"paymentType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1260\n      },\n      __self: this\n    }, paymentTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1275\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-select-cardType\",\n      select: true,\n      label: \"Card Type\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cardType,\n      onChange: this.handleChange(\"cardType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1281\n      },\n      __self: this\n    }, cardTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1296\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      required: true,\n      id: \"standard-nameOnCard\",\n      label: \"Name on Card\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.nameOnCard,\n      onChange: this.handleChange(\"nameOnCard\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1326\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-billingAddress\",\n      variant: \"outlined\",\n      label: \"Billing Street Address\",\n      className: classes.textField,\n      value: this.state.billingAddress,\n      onChange: this.handleChange(\"billingAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1337\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-cardNum\",\n      label: \"Card Number\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cardNum,\n      onChange: this.handleChange(\"cardNum\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1347\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-billingCity-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.billingCity,\n      onChange: this.handleChange(\"billingCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1358\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-payorEmail\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.payorEmail,\n      onChange: this.handleChange(\"payorEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1368\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-expDate\",\n      variant: \"outlined\",\n      label: \"Expiration Date\",\n      className: classes.textField,\n      value: this.state.expDate,\n      onChange: this.handleChange(\"expDate\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1379\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.billingState,\n      onChange: this.handleChange(\"billingState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1389\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.billingPhone,\n      onChange: this.handleChange(\"billingPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1399\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-cvv\",\n      label: \"CVV\",\n      type: \"password\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cvv,\n      onChange: this.handleChange(\"cvv\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1409\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-billingZip\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.billingZip,\n      onChange: this.handleChange(\"billingZip\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1421\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1443\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      onClick: () => {\n        this.onSubmit( // client info\n        this.state.clientType, this.state.clientFirstName, this.state.clientLastName, this.state.clientEmail, this.state.clientTitle, this.state.clientCurrentPassword, this.state.clientConfirmPassword, this.state.sessionType, this.state.sessionCost, this.state.sessionLegnth, this.state.clientPhone, this.state.clientAddress, this.state.clientBday, this.state.clientCity, this.state.clientState, this.state.clientZipCode, this.state.clientStreetAddress, this.state.contactNotes, // contact info\n        this.state.contactFirstName, this.state.contactLastName, this.state.contactEmail, this.state.contactTitle, this.state.contactPhone, this.state.contactAddress, this.state.contactCity, this.state.contactState, this.state.contactZip, // contact 2 info\n        this.state.contactFirstName2, this.state.contactLastName2, this.state.contactEmail2, this.state.contactTitle2, this.state.contactPhone2, this.state.contactAddress2, this.state.contactCity2, this.state.contactState2, this.state.contactZip2, // contact 3 info\n        this.state.contactFirstName3, this.state.contactLastName3, this.state.contactEmail3, this.state.contactTitle3, this.state.contactPhone3, this.state.contactAddress3, this.state.contactCity3, this.state.contactState3, this.state.contactZip3, // payor info\n        this.state.billingFirstName, this.state.billingLastName, this.state.nameOnCard, this.state.cardNum, this.state.payorEmail, this.state.payorTitle, this.state.paymentType, this.state.billingPhone, this.state.billingAddress, this.state.billingCity, this.state.billingZip, this.state.billingState, this.state.cvv, this.state.expDate, this.state.cardType); //this.setLocation();\n        //this.setState({ navigate: true });\n        // this.reloadPage();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1444\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TopPanel);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/newClientConsolidate.js"],"names":["React","PropTypes","withStyles","Paper","Grid","MenuItem","TextField","Button","FormGroup","FormControlLabel","Checkbox","Container","Typography","red","Teal","green","Divider","MuiSwitch","Switch","Link","Route","withRouter","Redirect","axios","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","width","menu","root","paddingBottom","rootTitle","marg","marginBottom","switchBase","color","backgroundColor","checked","track","colorSwitchBase","colorBar","colorChecked","container2","textField2","textField3","title","align","marginTop","title2","menu2","root2","root3","divider","saveButton","palette","getContrastText","titles","value","label","clientTypes","sessionTypes","paymentTypes","cardTypes","navStyle","textDecoration","TopPanel","Component","state","clientType","clientFirstName","clientLastName","clientEmail","clientTitle","clientCurrentPassword","clientConfirmPassword","sessionType","sessionCost","sessionLegnth","clientPhone","clientAddress","clientBday","clientState","clientCity","clientZipCode","clientStreetAddress","clientNotes","multiline","contactFirstName","contactLastName","contactEmail","contactTitle","contactPhone","contactAddress","contactCity","contactState","contactZip","contactFirstName2","contactLastName2","contactEmail2","contactTitle2","contactPhone2","contactAddress2","contactCity2","contactState2","contactZip2","contactFirstName3","contactLastName3","contactEmail3","contactTitle3","contactPhone3","contactAddress3","contactCity3","contactState3","contactZip3","billingFirstName","billingLastName","nameOnCard","cardNum","payorEmail","payorTitle","paymentType","billingPhone","billingAddress","billingCity","billingZip","billingState","cvv","expDate","cardType","sameAsContact","navigate","therapistData","therapist","checkedContact2","checkedContact3","handleChange","name","event","setState","target","handleChange2","handleChangeCheck2","handleChangeCheck3","handleChangeCheck","toggleShow","isShow","componentDidMount","get","then","response","console","log","data","clientData","response2","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","onSubmit","clientObj","checkedActive","sessionLength","post","res","render","classes","props","MenuProps","className","map","option","confirmPassword","member_full_name","margin","shrink","contactNotes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport red from \"@material-ui/core/colors/red\";\nimport Teal from \"@material-ui/core/colors/teal\";\nimport green from \"@material-ui/core/colors/green\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiSwitch from \"@material-ui/core/Switch\";\n// putting commmnent to change push comment\nimport { Switch, Link, Route, withRouter, Redirect } from \"react-router-dom\";\n\n//\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    // paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  rootTitle: {\n    width: \"100%\"\n\n    //paddingTop: theme.spacing.unit,\n    //paddingBottom: theme.spacing.unit * 2\n  },\n\n  marg: {\n    marginLeft: theme.spacing(20),\n    marginBottom: theme.spacing(1)\n  },\n\n  switchBase: {\n    color: green[300],\n    \"&$checked\": {\n      color: green[500]\n    },\n    \"&$checked + $track\": {\n      backgroundColor: green[500]\n    }\n  },\n  checked: {},\n  track: {},\n\n  colorSwitchBase: {\n    color: green[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    // marginBottom: theme.spacing(10),\n    width: 850\n  },\n\n  textField3: {\n    // marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing(20),\n    width: 300\n  },\n\n  title: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3)\n  },\n  title2: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  },\n\n  menu2: {\n    width: 200\n  },\n  root2: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n\n  root3: {\n    width: \"5%\"\n  },\n\n  divider: {\n    backgroundColor: \"#1de9b6\"\n  },\n\n  saveButton: {\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    /* this is text color */ color: theme.palette.getContrastText(\"#1de9b6\"),\n    backgroundColor: \"#1de9b6\",\n    \"&:hover\": {\n      backgroundColor: \"#00bfa5\"\n    }\n  }\n});\n\nconst titles = [\n  {\n    value: \"\",\n    label: \"\"\n  },\n\n  {\n    value: \"Dr.\",\n    label: \"Dr.\"\n  },\n\n  {\n    value: \"Miss\",\n    label: \"Miss\"\n  },\n\n  {\n    value: \"Mr.\",\n    label: \"Mr.\"\n  },\n  {\n    value: \"Mrs.\",\n    label: \"Mrs.\"\n  },\n  {\n    value: \"Ms.\",\n    label: \"Ms.\"\n  },\n  {\n    value: \"Mx.\",\n    label: \"Mx.\"\n  }\n];\n\nconst clientTypes = [\n  {\n    value: \"Individual\",\n    label: \"Individual\"\n  },\n\n  {\n    value: \"Facility\",\n    label: \"Facility\"\n  }\n];\n\nconst sessionTypes = [\n  {\n    value: \"Lessons\",\n    label: \"Lessons\"\n  },\n\n  {\n    value: \"Therapy\",\n    label: \"Therapy\"\n  }\n];\n\nconst paymentTypes = [\n  {\n    value: \"Card\",\n    label: \"Card\"\n  },\n\n  {\n    value: \"Cash\",\n    label: \"Cash\"\n  },\n\n  {\n    value: \"Check\",\n    label: \"Check\"\n  }\n];\n\nconst cardTypes = [\n  {\n    value: \"American Express\",\n    label: \"American Express\"\n  },\n\n  {\n    value: \"Discover\",\n    label: \"Discover\"\n  },\n\n  {\n    value: \"MasterCard\",\n    label: \"MasterCard\"\n  },\n  {\n    value: \"Visa\",\n    label: \"Visa\"\n  }\n];\n\nconst navStyle = {\n  color: \"black\",\n  textDecoration: \"none\"\n};\n\nclass TopPanel extends React.Component {\n  state = {\n    //client info state\n    clientType: \"\",\n    clientFirstName: \"\",\n    clientLastName: \"\",\n    clientEmail: \"\",\n    clientTitle: \"\",\n    clientCurrentPassword: \"\",\n    clientConfirmPassword: \"\",\n    sessionType: \"\",\n    sessionCost: \"\",\n    sessionLegnth: \"\",\n    clientPhone: \"\",\n    clientAddress: \"\",\n    clientBday: \"\",\n    clientState: \"\",\n    clientCity: \"\",\n    clientZipCode: \"\",\n    clientStreetAddress: \"\",\n    clientNotes: \"\",\n    multiline: \"Controlled\",\n    //contact info state\n    contactFirstName: \"\",\n    contactLastName: \"\",\n    contactEmail: \"\",\n    contactTitle: \"\",\n    contactPhone: \"\",\n    contactAddress: \"\",\n    contactCity: \"\",\n    contactState: \"\",\n    contactZip: \"\",\n    // contact 2 info state\n    contactFirstName2: null,\n    contactLastName2: null,\n    contactEmail2: null,\n    contactTitle2: null,\n    contactPhone2: null,\n    contactAddress2: null,\n    contactCity2: null,\n    contactState2: null,\n    contactZip2: null,\n    // contact 3 info state\n    contactFirstName3: null,\n    contactLastName3: null,\n    contactEmail3: null,\n    contactTitle3: null,\n    contactPhone3: null,\n    contactAddress3: null,\n    contactCity3: null,\n    contactState3: null,\n    contactZip3: null,\n    //payor info state\n    billingFirstName: \"\",\n    billingLastName: \"\",\n    nameOnCard: \"\",\n    cardNum: \"\",\n    payorEmail: \"\",\n    payorTitle: \"\",\n    paymentType: \"Cash\",\n    billingPhone: \"\",\n    billingAddress: \"\",\n    billingCity: \"\",\n    billingZip: \"\",\n    billingState: \"\",\n    cvv: \"\",\n    expDate: \"\",\n    cardType: \"\",\n    sameAsContact: false,\n    //toDashboard: false,\n    navigate: false,\n    //intervalIsSet: \"\"\n    therapistData: [],\n    therapist: \"\",\n    // condition\n    checkedContact2: false,\n    checkedContact3: false\n  };\n  /*\n  reloadPage() {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  }\n*/\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/allclients\")\n      .then(response => {\n        console.log(\"Got client data!\");\n        console.log(response.data);\n        this.setState({\n          clientData: response.data\n        });\n      })\n      .then(response2 => {\n        return axios\n          .get(\"http://localhost:5000/gettherapists\") // this is not using the sequelize method\n          .then(response2 => {\n            console.log(\"Got therapist data!\");\n            console.log(response2.data);\n            this.setState({\n              therapistData: response2.data\n            });\n          });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n\n    const clientObj = {\n      // client info\n      checkedActive: false,\n      clientType: this.state.clientType,\n      clientFirstName: this.state.clientFirstName,\n      clientLastName: this.state.clientLastName,\n      clientEmail: this.state.clientEmail,\n      clientTitle: this.state.clientTitle,\n      clientCurrentPassword: this.state.clientCurrentPassword,\n      clientConfirmPassword: this.state.clientConfirmPassword,\n      clientPhone: this.state.clientPhone,\n      clientAddress: this.state.clientAddress,\n      sessionType: this.state.sessionType,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLegnth,\n      clientBday: this.state.clientBday,\n      clientState: this.state.clientState,\n      clientCity: this.state.clientCity,\n      clientZipCode: this.state.clientZipCode,\n      clientStreetAddress: this.state.clientStreetAddress,\n      clientNotes: this.state.clientNotes,\n      // contact info\n      contactFirstName: this.state.contactFirstName,\n      contactLastName: this.state.contactLastName,\n      contactEmail: this.state.contactEmail,\n      contactTitle: this.state.contactTitle,\n      contactPhone: this.state.contactPhone,\n      contactAddress: this.state.contactAddress,\n      contactCity: this.state.contactCity,\n      contactState: this.state.contactState,\n      contactZip: this.state.contactZip,\n      // contact 2 info\n      contactFirstName2: this.state.contactFirstName2,\n      contactLastName2: this.state.contactLastName2,\n      contactEmail2: this.state.contactEmail2,\n      contactTitle2: this.state.contactTitle2,\n      contactPhone2: this.state.contactPhone2,\n      contactAddress2: this.state.contactAddress2,\n      contactCity2: this.state.contactCity2,\n      contactState2: this.state.contactState2,\n      contactZip2: this.state.contactZip2,\n      // contact 3 info\n      contactFirstName3: this.state.contactFirstName3,\n      contactLastName3: this.state.contactLastName3,\n      contactEmail3: this.state.contactEmail3,\n      contactTitle3: this.state.contactTitle3,\n      contactPhone3: this.state.contactPhone3,\n      contactAddress3: this.state.contactAddress3,\n      contactCity3: this.state.contactCity3,\n      contactState3: this.state.contactState3,\n      contactZip3: this.state.contactZip3,\n      // payor info\n      billingFirstName: this.state.billingFirstName,\n      billingLastName: this.state.billingLastName,\n      nameOnCard: this.state.nameOnCard,\n      cardNum: this.state.cardNum,\n      payorEmail: this.state.payorEmail,\n      payorTitle: this.state.payorTitle,\n      paymentType: this.state.paymentType,\n      billingPhone: this.state.billingPhone,\n      billingAddress: this.state.billingAddress,\n      billingCity: this.state.billingCity,\n      billingZip: this.state.billingZip,\n      billingState: this.state.billingState,\n      cvv: this.state.cvv,\n      expDate: this.state.expDate,\n      cardType: this.state.cardType\n    };\n    axios\n      .post(\"http://localhost:5000/clients/registerclient\", clientObj)\n      .then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      //client info\n      clientObj\n    });\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChange2 = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChangeCheck2 = name => event => {\n    this.setState({\n      [name]: event.target.checked,\n      //this will set the values to blank once the window is closed\n      contactFirstName2: null,\n      contactLastName2: null,\n      contactEmail2: null,\n      contactTitle2: null,\n      contactPhone2: null,\n      contactAddress2: null,\n      contactCity2: null,\n      contactState2: null,\n      contactZip2: null,\n      // contact 3,\n      checkedContact3: false,\n      contactFirstName3: null,\n      contactLastName3: null,\n      contactEmail3: null,\n      contactTitle3: null,\n      contactPhone3: null,\n      contactAddress3: null,\n      contactCity3: null,\n      contactState3: null,\n      contactZip3: null\n    });\n  };\n\n  handleChangeCheck3 = name => event => {\n    this.setState({\n      [name]: event.target.checked,\n      //this will set the values to blank once the window is closed\n      contactFirstName3: null,\n      contactLastName3: null,\n      contactEmail3: null,\n      contactTitle3: null,\n      contactPhone3: null,\n      contactAddress3: null,\n      contactCity3: null,\n      contactState3: null,\n      contactZip3: null\n    });\n  };\n\n  handleChangeCheck = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n  toggleShow = () => {\n    this.setState(state => ({ isShow: !state.isShow }));\n  };\n\n  /*\n  handleSubmit = (user) => {\n    saveUser(user)\n      .then(() => this.setState(() => ({\n        toDashboard: true\n      })))\n  }\n  */\n  /*\n  setLocation() {\n    this.props.history.push(\"/clients\");\n  } */\n\n  render() {\n    const { classes } = this.props;\n    const { therapistData } = this.state;\n    /*\n    if (this.state.toDashboard === true) {\n        return <Redirect to='/dashboard' />\n      }\n  */\n    /*\n\n    const { navigate } = this.state;\n\n    // here is the important part\n    if (navigate) {\n      return <Redirect to=\"/clients\" push={true} />;\n    }\n    */\n\n    return (\n      <Container maxWidth=\"lg\">\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          <Paper className={classes.root} elevation={1}>\n            <Paper className={classes.rootTitle} elevation={2}>\n              <Typography className={classes.title} align=\"center\" variant=\"h5\">\n                Client Information\n              </Typography>\n            </Paper>\n\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid container row justify=\"space-between\">\n                <FormGroup row>\n                  <FormControlLabel\n                    control={\n                      <MuiSwitch\n                        checked={this.state.checkedActive}\n                        onChange={this.handleChangeCheck(\"checkedActive\")}\n                        value=\"checkedActive\"\n                        //marginLeft=\"theme.spacing.unit * 20\"\n                        className={classes.marg}\n                        /*\n                        classes={{\n                          switchBase: classes.colorSwitchBase,\n                          checked: classes.checked,\n                          bar: classes.track\n                        }}*/\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Active\"\n                  />\n                </FormGroup>\n\n                <TextField\n                  id=\"standard-select-clientType\"\n                  select\n                  label=\"Client Type\"\n                  variant=\"outlined\"\n                  className={classes.textField3}\n                  value={this.state.clientType}\n                  onChange={this.handleChange(\"clientType\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {clientTypes.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n\n              <TextField\n                id=\"standard-select-title\"\n                select\n                label=\"Title\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.clientTitle}\n                onChange={this.handleChange(\"clientTitle\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {titles.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                required\n                id=\"standard-firstName\"\n                label=\"First Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.clientFirstName}\n                onChange={this.handleChange(\"clientFirstName\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-lastNamename\"\n                label=\"Last Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.clientLastName}\n                onChange={this.handleChange(\"clientLastName\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-email\"\n                variant=\"outlined\"\n                label=\"Email\"\n                className={classes.textField}\n                value={this.state.clientEmail}\n                onChange={this.handleChange(\"clientEmail\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-password-input\"\n                variant=\"outlined\"\n                label=\"Password\"\n                className={classes.textField}\n                type=\"password\"\n                value={this.state.clientCurrentPassword}\n                onChange={this.handleChange(\"clientCurrentPassword\")}\n                //autoComplete=\"current-password\"\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-confirmPassword-input\"\n                variant=\"outlined\"\n                label=\"Confirm Password\"\n                className={classes.textField}\n                type=\"password\"\n                value={this.state.confirmPassword}\n                onChange={this.handleChange(\"confirmPassword\")}\n                //autoComplete=\"current-password\"\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-select-sessionType\"\n                select\n                label=\"Session Type\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                className={classes.textField}\n                value={this.state.sessionType}\n                onChange={this.handleChange(\"sessionType\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {sessionTypes.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                id=\"standard-cost\"\n                label=\"Session Cost (dollars)\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.sessionCost}\n                onChange={this.handleChange(\"sessionCost\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-length\"\n                label=\"Session Length (minutes)\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.sessionLength}\n                onChange={this.handleChange(\"sessionLength\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-select-therapist\"\n                select\n                label=\"Therapist\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                className={classes.textField}\n                value={this.state.therapist}\n                onChange={this.handleChange(\"therapist\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {therapistData.map(option => (\n                  <MenuItem key={option.value} value={option.member_full_name}>\n                    {option.member_full_name}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                id=\"standard-address\"\n                variant=\"outlined\"\n                label=\"Address\"\n                className={classes.textField}\n                value={this.state.clientAddress}\n                onChange={this.handleChange(\"clientAddress\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-city-\"\n                variant=\"outlined\"\n                label=\"City\"\n                className={classes.textField}\n                value={this.state.clientCity}\n                onChange={this.handleChange(\"clientCity\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-state\"\n                variant=\"outlined\"\n                label=\"State\"\n                className={classes.textField}\n                value={this.state.clientState}\n                onChange={this.handleChange(\"clientState\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-zipCode\"\n                variant=\"outlined\"\n                label=\"Zip Code\"\n                className={classes.textField}\n                value={this.state.clientZipCode}\n                onChange={this.handleChange(\"clientZipCode\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-phone\"\n                variant=\"outlined\"\n                label=\"Phone Number\"\n                className={classes.textField}\n                value={this.state.clientPhone}\n                onChange={this.handleChange(\"clientPhone\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-bday\"\n                variant=\"outlined\"\n                label=\"Birthday\"\n                className={classes.textField}\n                value={this.state.clientBday}\n                onChange={this.handleChange(\"clientBday\")}\n                margin=\"normal\"\n              />\n\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <TextField\n                  id=\"standard-full-width\"\n                  label=\"\"\n                  style={{ margin: 8 }}\n                  className={classes.textField2}\n                  value={this.state.clientNotes}\n                  onChange={this.handleChange(\"clientNotes\")}\n                  placeholder=\"Add any additional notes here\"\n                  fullWidth\n                  multiline\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                />\n              </Grid>\n\n              <Container>\n                <Divider className={classes.divider} variant=\"middle\" />\n                <Paper className={classes.rootTitle} elevation={2}>\n                  <Typography\n                    className={classes.title}\n                    align=\"center\"\n                    variant=\"h5\"\n                  >\n                    Contact Information\n                  </Typography>\n                </Paper>\n              </Container>\n\n              {/* Contact Info*/}\n              <TextField\n                id=\"standard-select-contactTitle\"\n                select\n                label=\"Title\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.contactTitle}\n                onChange={this.handleChange(\"contactTitle\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {titles.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                required\n                id=\"standard-contactFirstName\"\n                label=\"First Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.contactFirstName}\n                onChange={this.handleChange(\"contactFirstName\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-lastNamename\"\n                label=\"Last Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.contactLastName}\n                onChange={this.handleChange(\"contactLastName\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-contactAddress\"\n                variant=\"outlined\"\n                label=\"Street Address\"\n                className={classes.textField}\n                value={this.state.contactAddress}\n                onChange={this.handleChange(\"contactAddress\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-contactCity-\"\n                variant=\"outlined\"\n                label=\"City\"\n                className={classes.textField}\n                value={this.state.contactCity}\n                onChange={this.handleChange(\"contactCity\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-state\"\n                variant=\"outlined\"\n                label=\"State\"\n                className={classes.textField}\n                value={this.state.contactState}\n                onChange={this.handleChange(\"contactState\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-contactZip\"\n                variant=\"outlined\"\n                label=\"Zip Code\"\n                className={classes.textField}\n                value={this.state.contactZip}\n                onChange={this.handleChange(\"contactZip\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-contactEmail\"\n                variant=\"outlined\"\n                label=\"Email\"\n                className={classes.textField}\n                value={this.state.contactEmail}\n                onChange={this.handleChange(\"contactEmail\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-contactPhone\"\n                variant=\"outlined\"\n                label=\"Phone Number\"\n                className={classes.textField}\n                value={this.state.contactPhone}\n                onChange={this.handleChange(\"contactPhone\")}\n                margin=\"normal\"\n              />\n              <Container>\n                <FormGroup row>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.checkedContact2}\n                        onChange={this.handleChangeCheck2(\"checkedContact2\")}\n                        value=\"checkedContact2\"\n                      />\n                    }\n                    label=\"Add second contact\"\n                  />\n                </FormGroup>\n              </Container>\n\n              {this.state.checkedContact2 ? (\n                <Container>\n                  <Divider variant=\"middle\" />\n                  <Typography\n                    className={classes.title}\n                    align=\"center\"\n                    variant=\"h5\"\n                  >\n                    Contact 2 Information\n                  </Typography>\n                </Container>\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-select-contactTitle2\"\n                  select\n                  label=\"Title\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactTitle2}\n                  onChange={this.handleChange(\"contactTitle2\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {titles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  required\n                  id=\"standard-contactFirstName2\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactFirstName2}\n                  onChange={this.handleChange(\"contactFirstName2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact2 ? (\n                <TextField\n                  required\n                  id=\"standard-lastNamename2\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactLastName2}\n                  onChange={this.handleChange(\"contactLastName2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-contactAddress2\"\n                  variant=\"outlined\"\n                  label=\"Street Address\"\n                  className={classes.textField}\n                  value={this.state.contactAddress2}\n                  onChange={this.handleChange(\"contactAddress2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-contactCity-2\"\n                  variant=\"outlined\"\n                  label=\"City\"\n                  className={classes.textField}\n                  value={this.state.contactCity2}\n                  onChange={this.handleChange(\"contactCity2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-state2\"\n                  variant=\"outlined\"\n                  label=\"State\"\n                  className={classes.textField}\n                  value={this.state.contactState2}\n                  onChange={this.handleChange(\"contactState2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-contactZip2\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.contactZip2}\n                  onChange={this.handleChange(\"contactZip2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  required\n                  id=\"standard-contactEmail2\"\n                  variant=\"outlined\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  value={this.state.contactEmail2}\n                  onChange={this.handleChange(\"contactEmail2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-contactPhone2\"\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  className={classes.textField}\n                  value={this.state.contactPhone2}\n                  onChange={this.handleChange(\"contactPhone2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <Container>\n                  <FormGroup row>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={this.state.checkedContact3}\n                          onChange={this.handleChangeCheck3(\"checkedContact3\")}\n                          value=\"checkedContact3\"\n                        />\n                      }\n                      label=\"Add third contact\"\n                    />\n                  </FormGroup>\n                </Container>\n              ) : null}\n              {/* Contact 3 */}\n\n              {this.state.checkedContact3 ? (\n                <Container>\n                  <Divider variant=\"middle\" />\n                  <Typography\n                    className={classes.title}\n                    align=\"center\"\n                    variant=\"h5\"\n                  >\n                    Contact 3 Information\n                  </Typography>\n                </Container>\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-select-contactTitle3\"\n                  select\n                  label=\"Title\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactTitle3}\n                  onChange={this.handleChange(\"contactTitle3\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {titles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  required\n                  id=\"standard-contactFirstName3\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactFirstName3}\n                  onChange={this.handleChange(\"contactFirstName3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact3 ? (\n                <TextField\n                  required\n                  id=\"standard-lastNamename3\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactLastName3}\n                  onChange={this.handleChange(\"contactLastName3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-contactAddress3\"\n                  variant=\"outlined\"\n                  label=\"Street Address\"\n                  className={classes.textField}\n                  value={this.state.contactAddress3}\n                  onChange={this.handleChange(\"contactAddress3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-contactCity-3\"\n                  variant=\"outlined\"\n                  label=\"City\"\n                  className={classes.textField}\n                  value={this.state.contactCity3}\n                  onChange={this.handleChange(\"contactCity3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-state3\"\n                  variant=\"outlined\"\n                  label=\"State\"\n                  className={classes.textField}\n                  value={this.state.contactState3}\n                  onChange={this.handleChange(\"contactState3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-contactZip3\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.contactZip3}\n                  onChange={this.handleChange(\"contactZip3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  required\n                  id=\"standard-contactEmail3\"\n                  variant=\"outlined\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  value={this.state.contactEmail3}\n                  onChange={this.handleChange(\"contactEmail3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-contactPhone3\"\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  className={classes.textField}\n                  value={this.state.contactPhone3}\n                  onChange={this.handleChange(\"contactPhone3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {/*\n            <Button\n              size=\"medium\"\n              variant=\"contained\"\n              className={classes.button}\n            >\n              Add Additional\n            </Button>\n            */}\n\n              {/* Payor Info  */}\n              {/*\n              <FormGroup className={classes.marg} row>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state.sameAsContact}\n                      onChange={this.handleChange(\"sameAsContact\")}\n                      value=\"sameAsContact\"\n                      color=\"default\"\n                    />\n                  }\n                  label=\"Same as contact\" \n                />\n              </FormGroup>\n                */}\n\n              <Container>\n                <Divider variant=\"middle\" />\n                <Typography\n                  className={classes.title2}\n                  align=\"center\"\n                  variant=\"h5\"\n                >\n                  Payor Information\n                </Typography>\n              </Container>\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <TextField\n                  required\n                  id=\"billingFirstName\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.billingFirstName}\n                  onChange={this.handleChange(\"billingFirstName\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  id=\"billingLastName\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.billingLastName}\n                  onChange={this.handleChange(\"billingLastName\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-select-paymentType\"\n                  select\n                  label=\"Payment Type\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.paymentType}\n                  onChange={this.handleChange(\"paymentType\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {paymentTypes.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                <TextField\n                  id=\"standard-select-cardType\"\n                  select\n                  label=\"Card Type\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.cardType}\n                  onChange={this.handleChange(\"cardType\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {cardTypes.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                {/*\n\n                <TextField\n                  id=\"standard-select-payorTitle\"\n                  select\n                  label=\"payorTitle\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.payorTitle}\n                  onChange={this.handleChange(\"payorTitle\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {titles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                  */}\n\n                <TextField\n                  required\n                  id=\"standard-nameOnCard\"\n                  label=\"Name on Card\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.nameOnCard}\n                  onChange={this.handleChange(\"nameOnCard\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-billingAddress\"\n                  variant=\"outlined\"\n                  label=\"Billing Street Address\"\n                  className={classes.textField}\n                  value={this.state.billingAddress}\n                  onChange={this.handleChange(\"billingAddress\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-cardNum\"\n                  label=\"Card Number\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.cardNum}\n                  onChange={this.handleChange(\"cardNum\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-billingCity-\"\n                  variant=\"outlined\"\n                  label=\"City\"\n                  className={classes.textField}\n                  value={this.state.billingCity}\n                  onChange={this.handleChange(\"billingCity\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-payorEmail\"\n                  variant=\"outlined\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  value={this.state.payorEmail}\n                  onChange={this.handleChange(\"payorEmail\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-expDate\"\n                  variant=\"outlined\"\n                  label=\"Expiration Date\"\n                  className={classes.textField}\n                  value={this.state.expDate}\n                  onChange={this.handleChange(\"expDate\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-state\"\n                  variant=\"outlined\"\n                  label=\"State\"\n                  className={classes.textField}\n                  value={this.state.billingState}\n                  onChange={this.handleChange(\"billingState\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-phone\"\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  className={classes.textField}\n                  value={this.state.billingPhone}\n                  onChange={this.handleChange(\"billingPhone\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-cvv\"\n                  label=\"CVV\"\n                  type=\"password\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.cvv}\n                  onChange={this.handleChange(\"cvv\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-billingZip\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.billingZip}\n                  onChange={this.handleChange(\"billingZip\")}\n                  margin=\"normal\"\n                />\n\n                {/*\n                <Button\n                  size=\"medium\"\n                  variant=\"contained\"\n                  className={classes.button}\n                >\n                  +\n                </Button>\n*/}\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"flex-end\">\n              <Button\n                className={classes.saveButton}\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.onSubmit(\n                    // client info\n                    this.state.clientType,\n                    this.state.clientFirstName,\n                    this.state.clientLastName,\n                    this.state.clientEmail,\n                    this.state.clientTitle,\n                    this.state.clientCurrentPassword,\n                    this.state.clientConfirmPassword,\n                    this.state.sessionType,\n                    this.state.sessionCost,\n                    this.state.sessionLegnth,\n                    this.state.clientPhone,\n                    this.state.clientAddress,\n                    this.state.clientBday,\n                    this.state.clientCity,\n                    this.state.clientState,\n                    this.state.clientZipCode,\n                    this.state.clientStreetAddress,\n                    this.state.contactNotes,\n                    // contact info\n                    this.state.contactFirstName,\n                    this.state.contactLastName,\n                    this.state.contactEmail,\n                    this.state.contactTitle,\n                    this.state.contactPhone,\n                    this.state.contactAddress,\n                    this.state.contactCity,\n                    this.state.contactState,\n                    this.state.contactZip,\n                    // contact 2 info\n                    this.state.contactFirstName2,\n                    this.state.contactLastName2,\n                    this.state.contactEmail2,\n                    this.state.contactTitle2,\n                    this.state.contactPhone2,\n                    this.state.contactAddress2,\n                    this.state.contactCity2,\n                    this.state.contactState2,\n                    this.state.contactZip2,\n                    // contact 3 info\n                    this.state.contactFirstName3,\n                    this.state.contactLastName3,\n                    this.state.contactEmail3,\n                    this.state.contactTitle3,\n                    this.state.contactPhone3,\n                    this.state.contactAddress3,\n                    this.state.contactCity3,\n                    this.state.contactState3,\n                    this.state.contactZip3,\n                    // payor info\n                    this.state.billingFirstName,\n                    this.state.billingLastName,\n                    this.state.nameOnCard,\n                    this.state.cardNum,\n                    this.state.payorEmail,\n                    this.state.payorTitle,\n                    this.state.paymentType,\n                    this.state.billingPhone,\n                    this.state.billingAddress,\n                    this.state.billingCity,\n                    this.state.billingZip,\n                    this.state.billingState,\n                    this.state.cvv,\n                    this.state.expDate,\n                    this.state.cardType\n                  );\n                  //this.setLocation();\n                  //this.setState({ navigate: true });\n                  // this.reloadPage();\n                }}\n              >\n                {/*  <Link style={navStyle} to=\"/clients\"> */}\n                Save\n                {/*   </Link> */}\n              </Button>\n            </Grid>\n          </Paper>\n        </form>\n      </Container>\n    );\n  }\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TopPanel);\n"]},"metadata":{},"sourceType":"module"}