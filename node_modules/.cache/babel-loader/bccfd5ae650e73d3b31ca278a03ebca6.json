{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos/MTSaaSRepo/mtsaas/src/accountsTableOLD.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    //the width might have to change to actual number\n    width: \"1200\",\n    marginTop: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * -41,\n    // marginRight: theme.spacing.unit * 30,\n    overflowX: \"auto\"\n  },\n  table: {//minWidth: 700\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n});\n\nlet id = 0;\n\nfunction createData(primaryAccount, client, accountType, phone, email, paymentMethod, currentBal, lastPayDate) {\n  id += 1;\n  return {\n    id,\n    primaryAccount,\n    client,\n    accountType,\n    phone,\n    email,\n    paymentMethod,\n    currentBal,\n    lastPayDate\n  };\n}\n\nconst rows = [createData(\"Smith, Mary\", \"Smith, Joe\", \"Family\", \"123-456-7899\", \"mary@mail.com\", \"Cash\", \"$30\", \"2/10/19\"), createData(\"Johnson, Jack\", \"\", \"Individual\", \"123-456-7899\", \"jack@mail.com\", \"Card\", \"$0\", \"3/15/19\"), createData(\"Smith, Mary\", \"Smith, Joe\", \"Family\", \"123-456-7899\", \"mary@mail.com\", \"Cash\", \"$30\", \"2/10/19\"), createData(\"Smith, Mary\", \"Smith, Joe\", \"Family\", \"123-456-7899\", \"mary@mail.com\", \"Cash\", \"$30\", \"2/10/19\")];\n\nfunction CustomizedTable(props) {\n  const classes = props.classes;\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Primary Account Holder\"), React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Client if different than primary\"), React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Account Type\"), React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Email\"), React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Primary Payment Method\"), React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Current Balance\"), React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Last Payment Date\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, rows.map(row => React.createElement(TableRow, {\n    className: classes.row,\n    key: row.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, row.primaryAccount), React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, row.client), React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, row.accountType), React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, row.phone), React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, row.email), React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, row.paymentMethod), React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, row.currentBal), React.createElement(CustomTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, row.lastPayDate))))));\n}\n\nCustomizedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CustomizedTable);","map":{"version":3,"sources":["/Users/kenneth/repos/MTSaaSRepo/mtsaas/src/accountsTableOLD.js"],"names":["React","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","CustomTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","styles","root","width","marginTop","spacing","unit","marginLeft","overflowX","table","row","background","default","id","createData","primaryAccount","client","accountType","phone","email","paymentMethod","currentBal","lastPayDate","rows","CustomizedTable","props","classes","map","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    //the width might have to change to actual number\n    width: \"1200\",\n    marginTop: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * -41,\n    // marginRight: theme.spacing.unit * 30,\n    overflowX: \"auto\"\n  },\n  table: {\n    //minWidth: 700\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n});\n\nlet id = 0;\nfunction createData(\n  primaryAccount,\n  client,\n  accountType,\n  phone,\n  email,\n  paymentMethod,\n  currentBal,\n  lastPayDate\n) {\n  id += 1;\n  return {\n    id,\n    primaryAccount,\n    client,\n    accountType,\n    phone,\n    email,\n    paymentMethod,\n    currentBal,\n    lastPayDate\n  };\n}\n\nconst rows = [\n  createData(\n    \"Smith, Mary\",\n    \"Smith, Joe\",\n    \"Family\",\n    \"123-456-7899\",\n    \"mary@mail.com\",\n    \"Cash\",\n    \"$30\",\n    \"2/10/19\"\n  ),\n  createData(\n    \"Johnson, Jack\",\n    \"\",\n    \"Individual\",\n    \"123-456-7899\",\n    \"jack@mail.com\",\n    \"Card\",\n    \"$0\",\n    \"3/15/19\"\n  ),\n  createData(\n    \"Smith, Mary\",\n    \"Smith, Joe\",\n    \"Family\",\n    \"123-456-7899\",\n    \"mary@mail.com\",\n    \"Cash\",\n    \"$30\",\n    \"2/10/19\"\n  ),\n  createData(\n    \"Smith, Mary\",\n    \"Smith, Joe\",\n    \"Family\",\n    \"123-456-7899\",\n    \"mary@mail.com\",\n    \"Cash\",\n    \"$30\",\n    \"2/10/19\"\n  )\n];\n\nfunction CustomizedTable(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <CustomTableCell align=\"center\">\n              Primary Account Holder\n            </CustomTableCell>\n            <CustomTableCell align=\"center\">\n              Client if different than primary\n            </CustomTableCell>\n            <CustomTableCell align=\"center\">Account Type</CustomTableCell>\n            <CustomTableCell align=\"center\">Phone</CustomTableCell>\n            <CustomTableCell align=\"center\">Email</CustomTableCell>\n            <CustomTableCell align=\"center\">\n              Primary Payment Method\n            </CustomTableCell>\n            <CustomTableCell align=\"center\">Current Balance</CustomTableCell>\n            <CustomTableCell align=\"center\">Last Payment Date</CustomTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow className={classes.row} key={row.id}>\n              <CustomTableCell align=\"center\">\n                {row.primaryAccount}\n              </CustomTableCell>\n              <CustomTableCell align=\"center\">{row.client}</CustomTableCell>\n              <CustomTableCell align=\"center\">\n                {row.accountType}\n              </CustomTableCell>\n              <CustomTableCell align=\"center\">{row.phone}</CustomTableCell>\n              <CustomTableCell align=\"center\">{row.email}</CustomTableCell>\n              <CustomTableCell align=\"center\">\n                {row.paymentMethod}\n              </CustomTableCell>\n              <CustomTableCell align=\"center\">{row.currentBal}</CustomTableCell>\n              <CustomTableCell align=\"center\">\n                {row.lastPayDate}\n              </CustomTableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nCustomizedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(CustomizedTable);\n"]},"metadata":{},"sourceType":"module"}