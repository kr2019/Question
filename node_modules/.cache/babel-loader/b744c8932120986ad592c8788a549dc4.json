{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/Client/clientTopPanel.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport FilterIcon from \"@material-ui/icons/FilterList\";\nimport ActiveRadioButton from \"../Old/activeRadioButton\";\nimport TeamMemberChecked from \"../Old/teamMemberChecked\";\nimport MemberAvatar from \"../Old/memberAvatarOLD\";\nimport Grid from \"@material-ui/core/Grid\";\nimport clientTextInputs from \"./clientTextInputs\";\nimport ClientChecked from \"./clientChecked\";\nimport ClientAvatar from \"./clientAvatar\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = theme => ({\n  root: {\n    paddingTop: theme.spacing.unit * 1,\n    // paddingBottom: theme.spacing.unit * 1,\n    paddingLeft: theme.spacing.unit,\n    marginTop: theme.spacing.unit * -6,\n    marginLeft: theme.spacing.unit * 22,\n    marginRight: theme.spacing.unit * 22,\n    align: \"center\",\n    width: \"1020\",\n    height: \"120\"\n  },\n  button: {\n    margin: theme.spacing.unit\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    //marginRight: theme.spacing.unit,\n    width: 200\n  }\n});\n\nconst clientTypes = [{\n  value: \"\",\n  label: \"\"\n}, {\n  value: \"Individual\",\n  label: \"Individual\"\n}, {\n  value: \"Facility\",\n  label: \"Facility\"\n}];\n\nclass AssignedClientActions extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clientType: \"Individual\",\n      open: false,\n      client: \"\",\n      cost: \"\",\n      length: \"\",\n      type: \"\"\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(ClientAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: classes.root,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(ClientChecked, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-select-member\",\n      select: true,\n      label: \"Client Type\",\n      variant: \"outlined\",\n      className: classes.textField2,\n      value: this.state.clientType,\n      onChange: this.handleChange(\"clientType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, clientTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, option.label)))));\n  }\n\n}\n\nAssignedClientActions.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(AssignedClientActions);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/Client/clientTopPanel.js"],"names":["React","PropTypes","withStyles","Paper","Typography","classNames","Button","AddIcon","EmailIcon","FilterIcon","ActiveRadioButton","TeamMemberChecked","MemberAvatar","Grid","clientTextInputs","ClientChecked","ClientAvatar","MenuItem","TextField","styles","theme","root","paddingTop","spacing","unit","paddingLeft","marginTop","marginLeft","marginRight","align","width","height","button","margin","leftIcon","rightIcon","iconSmall","fontSize","textField2","clientTypes","value","label","AssignedClientActions","Component","state","clientType","open","client","cost","length","type","handleChange","name","event","setState","target","render","classes","props","MenuProps","className","menu","map","option","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAcC,IAAd,GAAqB,CAD7B;AAEJ;AACAC,IAAAA,WAAW,EAAEL,KAAK,CAACG,OAAN,CAAcC,IAHvB;AAIJE,IAAAA,SAAS,EAAEN,KAAK,CAACG,OAAN,CAAcC,IAAd,GAAqB,CAAC,CAJ7B;AAKJG,IAAAA,UAAU,EAAEP,KAAK,CAACG,OAAN,CAAcC,IAAd,GAAqB,EAL7B;AAMJI,IAAAA,WAAW,EAAER,KAAK,CAACG,OAAN,CAAcC,IAAd,GAAqB,EAN9B;AAOJK,IAAAA,KAAK,EAAE,QAPH;AAQJC,IAAAA,KAAK,EAAE,MARH;AASJC,IAAAA,MAAM,EAAE;AATJ,GADiB;AAYvBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEb,KAAK,CAACG,OAAN,CAAcC;AADhB,GAZe;AAevBU,EAAAA,QAAQ,EAAE;AACRN,IAAAA,WAAW,EAAER,KAAK,CAACG,OAAN,CAAcC;AADnB,GAfa;AAkBvBW,EAAAA,SAAS,EAAE;AACTR,IAAAA,UAAU,EAAEP,KAAK,CAACG,OAAN,CAAcC;AADjB,GAlBY;AAqBvBY,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE;AADD,GArBY;AAyBvBC,EAAAA,UAAU,EAAE;AACVX,IAAAA,UAAU,EAAEP,KAAK,CAACG,OAAN,CAAcC,IADhB;AAEV;AACAM,IAAAA,KAAK,EAAE;AAHG;AAzBW,CAAL,CAApB;;AAgCA,MAAMS,WAAW,GAAG,CAClB;AACEC,EAAAA,KAAK,EAAE,EADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADkB,EAMlB;AACED,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CANkB,EAWlB;AACED,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAXkB,CAApB;;AAiBA,MAAMC,qBAAN,SAAoC1C,KAAK,CAAC2C,SAA1C,CAAoD;AAAA;AAAA;AAAA,SAClDC,KADkD,GAC1C;AACNC,MAAAA,UAAU,EAAE,YADN;AAENC,MAAAA,IAAI,EAAE,KAFA;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,IAAI,EAAE,EAJA;AAKNC,MAAAA,MAAM,EAAE,EALF;AAMNC,MAAAA,IAAI,EAAE;AANA,KAD0C;;AAAA,SAWlDC,YAXkD,GAWnCC,IAAI,IAAIC,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQC,KAAK,CAACE,MAAN,CAAaf;AAAvB,OAAd;AACD,KAbiD;AAAA;;AAelDgB,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEA,OAAO,CAACpC,IAA1B;AAAgC,MAAA,SAAS,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,wBADL;AAEE,MAAA,MAAM,MAFR;AAGE,MAAA,KAAK,EAAC,aAHR;AAIE,MAAA,OAAO,EAAC,UAJV;AAKE,MAAA,SAAS,EAAEoC,OAAO,CAACnB,UALrB;AAME,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWC,UANpB;AAOE,MAAA,QAAQ,EAAE,KAAKM,YAAL,CAAkB,YAAlB,CAPZ;AAQE,MAAA,WAAW,EAAE;AACXQ,QAAAA,SAAS,EAAE;AACTC,UAAAA,SAAS,EAAEH,OAAO,CAACI;AADV;AADA,OARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcGtB,WAAW,CAACuB,GAAZ,CAAgBC,MAAM,IACrB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,MAAM,CAACvB,KAAtB;AAA6B,MAAA,KAAK,EAAEuB,MAAM,CAACvB,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGuB,MAAM,CAACtB,KADV,CADD,CAdH,CAFF,CAFF,CADF;AA4BD;;AA9CiD;;AAiDpDC,qBAAqB,CAACsB,SAAtB,GAAkC;AAChCP,EAAAA,OAAO,EAAExD,SAAS,CAACgE,MAAV,CAAiBC;AADM,CAAlC;AAIA,eAAehE,UAAU,CAACiB,MAAD,CAAV,CAAmBuB,qBAAnB,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport FilterIcon from \"@material-ui/icons/FilterList\";\nimport ActiveRadioButton from \"../Old/activeRadioButton\";\nimport TeamMemberChecked from \"../Old/teamMemberChecked\";\nimport MemberAvatar from \"../Old/memberAvatarOLD\";\nimport Grid from \"@material-ui/core/Grid\";\nimport clientTextInputs from \"./clientTextInputs\";\nimport ClientChecked from \"./clientChecked\";\nimport ClientAvatar from \"./clientAvatar\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = theme => ({\n  root: {\n    paddingTop: theme.spacing.unit * 1,\n    // paddingBottom: theme.spacing.unit * 1,\n    paddingLeft: theme.spacing.unit,\n    marginTop: theme.spacing.unit * -6,\n    marginLeft: theme.spacing.unit * 22,\n    marginRight: theme.spacing.unit * 22,\n    align: \"center\",\n    width: \"1020\",\n    height: \"120\"\n  },\n  button: {\n    margin: theme.spacing.unit\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    //marginRight: theme.spacing.unit,\n    width: 200\n  }\n});\n\nconst clientTypes = [\n  {\n    value: \"\",\n    label: \"\"\n  },\n\n  {\n    value: \"Individual\",\n    label: \"Individual\"\n  },\n\n  {\n    value: \"Facility\",\n    label: \"Facility\"\n  }\n];\n\nclass AssignedClientActions extends React.Component {\n  state = {\n    clientType: \"Individual\",\n    open: false,\n    client: \"\",\n    cost: \"\",\n    length: \"\",\n    type: \"\"\n  };\n\n  /* change of team member dropdown */\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <ClientAvatar />\n        <Paper className={classes.root} elevation={1}>\n          <ClientChecked />\n          <TextField\n            id=\"standard-select-member\"\n            select\n            label=\"Client Type\"\n            variant=\"outlined\"\n            className={classes.textField2}\n            value={this.state.clientType}\n            onChange={this.handleChange(\"clientType\")}\n            SelectProps={{\n              MenuProps: {\n                className: classes.menu\n              }\n            }}\n          >\n            {clientTypes.map(option => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nAssignedClientActions.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AssignedClientActions);\n"]},"metadata":{},"sourceType":"module"}