{"ast":null,"code":"import _objectSpread from \"/Users/kenneth/repos2/mtsaas/mtrepo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/kenneth/repos2/mtsaas/mtrepo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/noteTemplateSOAP.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ClientAvatar from \"./clientAvatarTest2\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1) //width: 400\n\n  },\n  textField2: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 198\n  },\n  textField3: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1) //height: 400\n\n  },\n  checkBoxStyle: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  }\n}));\nconst noteTypes = [{\n  value: \"Regular\",\n  label: \"Regular\"\n}, {\n  value: \"Type 2\",\n  label: \"Type 2\"\n}, {\n  value: \"Type 3\",\n  label: \"Type 3\"\n}, {\n  value: \"Type 4\",\n  label: \"Type 4\"\n}];\nconst attendanceTypes = [{\n  value: \"Present\",\n  label: \"Present\"\n}, {\n  value: \"Absent\",\n  label: \"Absent\"\n}, {\n  value: \"Late\",\n  label: \"Late\"\n}];\nexport default function FullScreenDialog() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    //name: '',\n    //age: '',\n    //multiline: 'Controlled',\n    //currency: 'EUR',\n    noteType: \"Regular\",\n    attendanceType: \"Present\"\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  const _React$useState3 = React.useState({\n    checkedPayor: true,\n    checkedFamily: true,\n    checkedTherapist: true,\n    checkedHIPAA: true\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        state = _React$useState4[0],\n        setState = _React$useState4[1];\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  const handleChangeCheck = name => event => {\n    setState(_objectSpread({}, state, {\n      [name]: event.target.checked\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-textbox\",\n    label: \"Name\",\n    defaultValue: \"John Smith\",\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-textbox\",\n    label: \"Date\",\n    defaultValue: \"4/1/2019\",\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    label: \"Note Type\",\n    className: classes.textField2,\n    value: values.noteType,\n    onChange: handleChange(\"noteType\"),\n    SelectProps: {\n      MenuProps: {\n        className: classes.menu\n      }\n    },\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, noteTypes.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, option.label))), React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    label: \"Attendance\",\n    className: classes.textField2,\n    value: values.attendanceType,\n    onChange: handleChange(\"attendanceType\"),\n    SelectProps: {\n      MenuProps: {\n        className: classes.menu\n      }\n    },\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, attendanceTypes.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, option.label)))), React.createElement(TextField, {\n    id: \"standard-full-width\",\n    label: \"Notes\" //style={{ margin: 8 }}\n    ,\n    className: classes.textField3,\n    placeholder: \"Add notes here\",\n    fullWidth: true,\n    variant: \"outlined\",\n    multiline: true,\n    rows: \"15\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      className: classes.checkBoxStyle,\n      checked: state.checkedPayor,\n      onChange: handleChangeCheck(\"checkedPayor\"),\n      value: \"checkedPayor\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }),\n    label: \"Payor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      className: classes.checkBoxStyle,\n      checked: state.checkedFamily,\n      onChange: handleChangeCheck(\"checkedFamily\"),\n      value: \"checkedFamily\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }),\n    label: \"Family\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      className: classes.checkBoxStyle,\n      checked: state.checkedTherapist,\n      onChange: handleChangeCheck(\"checkedTherapist\"),\n      value: \"checkedTherapist\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }),\n    label: \"Therapist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      className: classes.checkBoxStyle,\n      checked: state.checkedHIPAA,\n      onChange: handleChangeCheck(\"checkedHIPAA\"),\n      value: \"checkedHIPAA\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }),\n    label: \"HIPAA\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/noteTemplateSOAP.js"],"names":["React","makeStyles","Grid","TextField","MenuItem","FormGroup","FormControlLabel","Checkbox","ClientAvatar","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","textField","marginRight","textField2","width","textField3","checkBoxStyle","noteTypes","value","label","attendanceTypes","FullScreenDialog","classes","useState","noteType","attendanceType","values","setValues","checkedPayor","checkedFamily","checkedTherapist","checkedHIPAA","state","setState","handleChange","name","event","target","handleChangeCheck","checked","MenuProps","className","menu","map","option","shrink"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport ClientAvatar from \"./clientAvatarTest2\";\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n    //width: 400\n  },\n  textField2: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 198\n  },\n  textField3: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n    //height: 400\n  },\n  checkBoxStyle: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst noteTypes = [\n  {\n    value: \"Regular\",\n    label: \"Regular\"\n  },\n  {\n    value: \"Type 2\",\n    label: \"Type 2\"\n  },\n  {\n    value: \"Type 3\",\n    label: \"Type 3\"\n  },\n  {\n    value: \"Type 4\",\n    label: \"Type 4\"\n  }\n];\n\nconst attendanceTypes = [\n  {\n    value: \"Present\",\n    label: \"Present\"\n  },\n  {\n    value: \"Absent\",\n    label: \"Absent\"\n  },\n  {\n    value: \"Late\",\n    label: \"Late\"\n  }\n];\n\nexport default function FullScreenDialog() {\n  const classes = useStyles();\n\n  const [values, setValues] = React.useState({\n    //name: '',\n    //age: '',\n    //multiline: 'Controlled',\n    //currency: 'EUR',\n    noteType: \"Regular\",\n    attendanceType: \"Present\"\n  });\n\n  const [state, setState] = React.useState({\n    checkedPayor: true,\n    checkedFamily: true,\n    checkedTherapist: true,\n    checkedHIPAA: true\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleChangeCheck = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <div>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <TextField\n          id=\"outlined-textbox\"\n          label=\"Name\"\n          defaultValue=\"John Smith\"\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n        <TextField\n          id=\"outlined-textbox\"\n          label=\"Date\"\n          defaultValue=\"4/1/2019\"\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n      </Grid>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <TextField\n          id=\"outlined-select-currency\"\n          select\n          label=\"Note Type\"\n          className={classes.textField2}\n          value={values.noteType}\n          onChange={handleChange(\"noteType\")}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu\n            }\n          }}\n          margin=\"normal\"\n          variant=\"outlined\"\n        >\n          {noteTypes.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"outlined-select-currency\"\n          select\n          label=\"Attendance\"\n          className={classes.textField2}\n          value={values.attendanceType}\n          onChange={handleChange(\"attendanceType\")}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu\n            }\n          }}\n          margin=\"normal\"\n          variant=\"outlined\"\n        >\n          {attendanceTypes.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n\n      <TextField\n        id=\"standard-full-width\"\n        label=\"Notes\"\n        //style={{ margin: 8 }}\n        className={classes.textField3}\n        placeholder=\"Add notes here\"\n        fullWidth\n        variant=\"outlined\"\n        multiline\n        rows=\"15\"\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true\n        }}\n      />\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Checkbox\n              className={classes.checkBoxStyle}\n              checked={state.checkedPayor}\n              onChange={handleChangeCheck(\"checkedPayor\")}\n              value=\"checkedPayor\"\n              color=\"primary\"\n            />\n          }\n          label=\"Payor\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              className={classes.checkBoxStyle}\n              checked={state.checkedFamily}\n              onChange={handleChangeCheck(\"checkedFamily\")}\n              value=\"checkedFamily\"\n              color=\"primary\"\n            />\n          }\n          label=\"Family\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              className={classes.checkBoxStyle}\n              checked={state.checkedTherapist}\n              onChange={handleChangeCheck(\"checkedTherapist\")}\n              value=\"checkedTherapist\"\n              color=\"primary\"\n            />\n          }\n          label=\"Therapist\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              className={classes.checkBoxStyle}\n              checked={state.checkedHIPAA}\n              onChange={handleChangeCheck(\"checkedHIPAA\")}\n              value=\"checkedHIPAA\"\n              color=\"primary\"\n            />\n          }\n          label=\"HIPAA\"\n        />\n      </FormGroup>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}