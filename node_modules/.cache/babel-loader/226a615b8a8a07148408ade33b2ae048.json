{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/ReactCalendarBase.js\";\nimport React, { Component } from \"react\"; //import { render } from \"react-dom\";\n\nimport events from \"./events\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport NewEventDialog from \"./newEventDialog\"; //import NewEventDialog2 from \"./newEventDialog2\";\n\nimport ExistingEventDialog from \"./existingEventDialogHooks\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport MomentUtils from \"@date-io/moment\";\nimport { MuiPickersUtilsProvider, DatePicker, TimePicker } from \"@material-ui/pickers\";\nimport { BrowserRouter, Switch, Link, Route } from \"react-router-dom\";\nimport Home from \"./home\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst propTypes = {};\nmoment().toDate();\n\nconst styles = theme => ({\n  state: {\n    open: false,\n    openV: false\n  },\n  root: {\n    paddingTop: theme.spacing(10),\n    height: \"100%\" // width: \"90%\"\n\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  },\n  textField2: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 192\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  },\n  root3: {\n    width: \"100%\"\n  }\n});\n\nconst navStyle = {\n  color: \"black\",\n  textDecoration: \"none\"\n};\nconst newBillTypes = [{\n  value: \"Billable\",\n  label: \"Billable\"\n}, {\n  value: \"Non-billable\",\n  label: \"Non-billable\"\n}];\nconst newClientTypes = [{\n  value: \"Individual\",\n  label: \"Individual\"\n}, {\n  value: \"Facility\",\n  label: \"Facility\"\n}];\nconst clients = [{\n  value: \"John Smith\",\n  label: \"John Smith\"\n}, {\n  value: \"Jill Smith\",\n  label: \"Jill Smith\"\n}, {\n  value: \"Ashley Flowers\",\n  label: \"Ashley Flowers\"\n}];\nconst therapists = [{\n  value: \"Therapist 1\",\n  label: \"Therapist 1\"\n}, {\n  value: \"Harry Potter\",\n  label: \"Harry Potter\"\n}, {\n  value: \"Therapist 3\",\n  label: \"Therapist 3\"\n}];\nconst categories = [{\n  value: \"None\",\n  label: \"None\"\n}];\n\nclass ReactCalendarBase extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.convertDate = date => {\n      return moment.utc(date).toDate();\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false,\n        //this will set the values to blank once the window is closed\n        newBillType: \"\",\n        newClientType: \"\",\n        title: \"\",\n        newClient: \"\",\n        newTherapist: \"\",\n        newLocation: \"\",\n        newCategory: \"\",\n        selectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n        endSelectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n      });\n    };\n\n    this.handleClickOpen2 = () => {\n      this.setState({\n        openV: true\n      });\n    };\n\n    this.handleClose2 = () => {\n      this.setState({\n        openV: false\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeCheck = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n\n    this.handleDateChangeStart = date => {\n      this.setState({\n        selectedDate: date.format(\"YYYY-MM-DD HH:mm:ss\")\n      });\n    };\n\n    this.handleDateChangeEnd = date => {\n      this.setState({\n        endSelectedDate: date.format(\"YYYY-MM-DD HH:mm:ss\")\n      });\n    };\n\n    this.state = {\n      cal_events: [//State is updated via componentDidMount\n      ],\n      therapistData: [],\n      clientData: [],\n      data: [],\n      //id: 0,\n      newBillType: \"\",\n      newClientType: \"\",\n      // title: null,\n      newClient: \"\",\n      newTherapist: \"\",\n      newLocation: \"\",\n      newCategory: \"\",\n      newStartDate: \"\",\n      newStartTime: \"\",\n      newEndDate: \"\",\n      newEndTime: \"\",\n      information: \"\",\n      intervalIsSet: \"\",\n      idToDelete: \"\",\n      idToUpdate: \"\",\n      objectToUpdate: \"\",\n      checkedRepeat: false,\n      selectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n      endSelectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/events\").then(response => {\n      console.log(\"Got event data!\");\n      console.log(response.data);\n      let appointments = response.data;\n      this.setState({\n        cal_events: appointments\n      });\n    }).then(response2 => {\n      return axios.get(\"http://localhost:5000/gettherapists\") // this is not using the sequelize method\n      .then(response2 => {\n        console.log(\"Got therapist data!\");\n        console.log(response2.data);\n        this.setState({\n          therapistData: response2.data\n        });\n      });\n    }).then(response3 => {\n      return axios.get(\"http://localhost:5000/getclients\").then(response3 => {\n        console.log(\"Got client data!\");\n        console.log(response3.data);\n        let clientTest = response3.data;\n        this.setState({\n          clientData: clientTest\n        });\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  reloadPage(prevState) {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  } //}\n  // never let a process live forever\n  // always kill a process everytime we are done using it\n\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from events!\");\n    }\n  } // just a note, here, in the front end, we use the id key of our data object\n  // in order to identify which we want to Update or delete.\n  // for our back end, we use the object id assigned by MongoDB to modify\n  // data base entries\n  // our first get method that uses our backend api to\n  // fetch data from our data base\n\n  /*\n  getDataFromDb = () => {\n    fetch(\"http://localhost:5000/events\")\n      .then(data => data.json())\n      .then(res => this.setState({ data: res.data }));\n  };\n  */\n\n  /*\n  componentDidUpdate(prevState) {\n    if (this.state.cal_events !== prevState.cal_events) {\n      console.log(\"Updated!\");\n    }\n  }\n  */\n  // this technically works, but it keeps \"updating\" non-stop instead of just the few times\n  // even technically works for state.data\n\n  /*\n  componentDidUpdate(prevState) {\n    if (this.state.cal_events !== prevState.cal_events) {\n      this.componentDidMount();\n      console.log(\"Updated!\");\n    }\n  }\n  */\n  // our put method that uses our backend api\n  // to create new query into our data base\n\n  /*\n  //this is being commented out because the same thing is already being done at onSubmit\n  putDataToDB = (\n    newBillType,\n    newClientType,\n    title,\n    newClient,\n    newTherapist,\n    newLocation,\n    newCategory\n  ) => {\n    let currentIds = this.state.data.map(data => data.id);\n    let idToBeAdded = 0;\n    while (currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n     axios.post(\"http://localhost:5000/api/putData2\", {\n      id: idToBeAdded,\n      newBillType: newBillType,\n      newClientType: newClientType,\n      title: title,\n      newClient: newClient,\n      newTherapist: newTherapist,\n      newLocation: newLocation,\n      newCategory: newCategory\n      //start: start,\n      //end: end,\n      //newClient: newClient,\n      //newTherapist: newTherapist\n    });\n  };\n  */\n\n\n  onSubmit(e) {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n    const obj = {\n      //title: this.state.title,\n      newBillType: this.state.newBillType,\n      newClientType: this.state.newClientType,\n      newTherapist: this.state.newTherapist,\n      newLocation: this.state.newLocation,\n      newCategory: this.state.newCategory,\n      newClient: this.state.newClient,\n      selectedDate: this.state.selectedDate,\n      endSelectedDate: this.state.endSelectedDate\n    };\n    axios.post(\"http://localhost:5000/putData2\", obj).then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      newBillType: \"\",\n      newClientType: \"\",\n      //title: \"\",\n      newClient: \"\",\n      newTherapist: \"\",\n      newLocation: \"\",\n      newCategory: \"\",\n      selectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n      endSelectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n    });\n  }\n  /* show new event dialog box */\n\n\n  /*\n  reloadPage() {\n    window.location.reload();\n  }\n  */\n\n  /*\n  someMethod() {\n    // Force a render without state change...\n    this.forceUpdate();\n  }\n  */\n  render() {\n    const classes = this.props.classes; //const classes = withStyles();\n\n    const _this$state = this.state,\n          cal_events = _this$state.cal_events,\n          therapistData = _this$state.therapistData,\n          clientData = _this$state.clientData,\n          selectedDate = _this$state.selectedDate,\n          endSelectedDate = _this$state.endSelectedDate;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        height: 1000\n      },\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(BigCalendar, {\n      className: classes.root,\n      selectable: true,\n      startAccessor: cal_events => new Date(cal_events.start),\n      endAccessor: cal_events => new Date(cal_events.end),\n      localizer: localizer,\n      events: cal_events,\n      views: [\"month\", \"week\", \"day\"],\n      defaultDate: new Date(),\n      defaultView: \"month\",\n      onSelectEvent: this.handleClickOpen2,\n      onSelectSlot: this.handleClickOpen // (this sets the start time of 7am) min={new Date(2000, 1, 1, 7)}\n      // this sets the end time of 6pm)  max={new Date(2000, 1, 1, 18)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.openV,\n      onClose: this.handleClose2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(ExistingEventDialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose2,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleClose2,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Button, {\n      onClick: this.handleClose2,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, \"Save & Next\"))), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"bill_type\",\n      select: true,\n      label: \"Bill Type\",\n      className: classes.textField,\n      value: this.state.newBillType,\n      onChange: e => this.setState({\n        newBillType: e.target.value\n      }) //helperText=\"Please select your currency\"\n      ,\n      margin: \"normal\",\n      variant: \"outlined\",\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, newBillTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      required: true,\n      id: \"client_type\",\n      select: true,\n      label: \"Client Type\",\n      className: classes.textField,\n      value: this.state.newClientType,\n      onChange: e => this.setState({\n        newClientType: e.target.value\n      }) //helperText=\"Please select your currency\"\n      ,\n      margin: \"normal\",\n      variant: \"outlined\",\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, newClientTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      required: true,\n      id: \"newClient\",\n      select: true,\n      label: \"Client\",\n      className: classes.textField,\n      value: this.state.newClient,\n      onChange: this.handleChange(\"newClient\") //helperText=\"Please select your currency\"\n      ,\n      margin: \"normal\",\n      variant: \"outlined\",\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, clientData.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value:\n      /* option.first_name */\n      option.last_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, option.first_name, \" \", option.last_name))), React.createElement(TextField, {\n      id: \"standard-select-therapist\",\n      select: true,\n      label: \"Therapist\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.state.newTherapist,\n      onChange: this.handleChange(\"newTherapist\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, therapistData.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value:\n      /* option.first_name */\n      option.last_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, option.first_name, \" \", option.last_name))), React.createElement(TextField, {\n      required: true,\n      id: \"newLocation\",\n      label: \"Location \",\n      className: classes.textField2,\n      value: this.state.newLocation,\n      onChange: e => this.setState({\n        newLocation: e.target.value\n      }),\n      margin: \"normal\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"newCategory\",\n      select: true,\n      label: \"Category\",\n      className: classes.textField2,\n      value: this.state.newCategory,\n      onChange: e => this.setState({\n        newCategory: e.target.value\n      }) //helperText=\"Please select your currency\"\n      ,\n      margin: \"normal\",\n      variant: \"outlined\",\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }, categories.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }, option.label))), React.createElement(MuiPickersUtilsProvider, {\n      utils: MomentUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: classes.grid,\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      margin: \"normal\",\n      label: \"Date picker\",\n      value: selectedDate,\n      onChange: this.handleDateChangeStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }), React.createElement(TimePicker, {\n      margin: \"normal\",\n      label: \"Time picker\",\n      value: selectedDate,\n      onChange: this.handleDateChangeStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }))), React.createElement(MuiPickersUtilsProvider, {\n      utils: MomentUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: classes.grid,\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      margin: \"normal\",\n      label: \"Date picker\",\n      value: endSelectedDate,\n      onChange: this.handleDateChangeEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }), React.createElement(TimePicker, {\n      margin: \"normal\",\n      label: \"Time picker\",\n      value: endSelectedDate,\n      onChange: this.handleDateChangeEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }))), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedRepeat,\n        onChange: this.handleChangeCheck(\"checkedRepeat\"),\n        value: \"checkedRepeat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        },\n        __self: this\n      }),\n      label: \"Repeat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    })))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Paper, {\n      elevation: 0,\n      className: classes.root3,\n      onClick: this.reloadPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.onSubmit( //this.state.title,\n        this.state.newBillType, this.state.newClientType, this.state.newClient, this.state.thereapist, this.state.newLocation, this.state.newCategory, this.state.selectedDate, this.state.endSelectedDate); //this.reloadPage();\n      },\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    }, \"Save\")), React.createElement(Button, {\n      onClick: this.reloadPage,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673\n      },\n      __self: this\n    }, \"Close\")))));\n  }\n\n}\n\nReactCalendarBase.propTypes = propTypes; //export default ReactCalendarBase;\n\nexport default withStyles(styles)(ReactCalendarBase);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/ReactCalendarBase.js"],"names":["React","Component","events","BigCalendar","moment","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","Grid","MenuItem","TextField","withStyles","FormGroup","FormControlLabel","Checkbox","NewEventDialog","ExistingEventDialog","MomentUtils","MuiPickersUtilsProvider","DatePicker","TimePicker","BrowserRouter","Switch","Link","Route","Home","Container","Paper","axios","localizer","momentLocalizer","propTypes","toDate","styles","theme","state","open","openV","root","paddingTop","spacing","height","container","display","flexWrap","textField","marginLeft","marginRight","width","textField2","dense","marginTop","menu","root3","navStyle","color","textDecoration","newBillTypes","value","label","newClientTypes","clients","therapists","categories","ReactCalendarBase","constructor","args","convertDate","date","utc","handleClickOpen","setState","handleClose","newBillType","newClientType","title","newClient","newTherapist","newLocation","newCategory","selectedDate","format","endSelectedDate","handleClickOpen2","handleClose2","handleChange","name","event","target","handleChangeCheck","checked","handleDateChangeStart","handleDateChangeEnd","cal_events","therapistData","clientData","data","newStartDate","newStartTime","newEndDate","newEndTime","information","intervalIsSet","idToDelete","idToUpdate","objectToUpdate","checkedRepeat","componentDidMount","get","then","response","console","log","appointments","response2","response3","clientTest","catch","error","interval","setInterval","getDataFromDb","reloadPage","prevState","window","location","reload","componentWillUnmount","clearInterval","onSubmit","e","obj","post","res","render","classes","props","Date","start","end","MenuProps","className","map","option","last_name","first_name","grid","thereapist"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import { render } from \"react-dom\";\nimport events from \"./events\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport NewEventDialog from \"./newEventDialog\";\n//import NewEventDialog2 from \"./newEventDialog2\";\nimport ExistingEventDialog from \"./existingEventDialogHooks\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport MomentUtils from \"@date-io/moment\";\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker,\n  TimePicker\n} from \"@material-ui/pickers\";\nimport { BrowserRouter, Switch, Link, Route } from \"react-router-dom\";\nimport Home from \"./home\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport axios from \"axios\";\n\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst propTypes = {};\nmoment().toDate();\n\nconst styles = theme => ({\n  state: {\n    open: false,\n    openV: false\n  },\n\n  root: {\n    paddingTop: theme.spacing(10),\n    height: \"100%\"\n    // width: \"90%\"\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  },\n  textField2: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 192\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  },\n  root3: {\n    width: \"100%\"\n  }\n});\n\nconst navStyle = {\n  color: \"black\",\n  textDecoration: \"none\"\n};\n\nconst newBillTypes = [\n  {\n    value: \"Billable\",\n    label: \"Billable\"\n  },\n\n  {\n    value: \"Non-billable\",\n    label: \"Non-billable\"\n  }\n];\n\nconst newClientTypes = [\n  {\n    value: \"Individual\",\n    label: \"Individual\"\n  },\n\n  {\n    value: \"Facility\",\n    label: \"Facility\"\n  }\n];\n\nconst clients = [\n  {\n    value: \"John Smith\",\n    label: \"John Smith\"\n  },\n\n  {\n    value: \"Jill Smith\",\n    label: \"Jill Smith\"\n  },\n  {\n    value: \"Ashley Flowers\",\n    label: \"Ashley Flowers\"\n  }\n];\n\nconst therapists = [\n  {\n    value: \"Therapist 1\",\n    label: \"Therapist 1\"\n  },\n\n  {\n    value: \"Harry Potter\",\n    label: \"Harry Potter\"\n  },\n  {\n    value: \"Therapist 3\",\n    label: \"Therapist 3\"\n  }\n];\n\nconst categories = [\n  {\n    value: \"None\",\n    label: \"None\"\n  }\n];\n\nclass ReactCalendarBase extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = {\n      cal_events: [\n        //State is updated via componentDidMount\n      ],\n      therapistData: [],\n      clientData: [],\n      data: [],\n      //id: 0,\n      newBillType: \"\",\n      newClientType: \"\",\n      // title: null,\n      newClient: \"\",\n      newTherapist: \"\",\n      newLocation: \"\",\n      newCategory: \"\",\n      newStartDate: \"\",\n      newStartTime: \"\",\n      newEndDate: \"\",\n      newEndTime: \"\",\n      information: \"\",\n      intervalIsSet: \"\",\n      idToDelete: \"\",\n      idToUpdate: \"\",\n      objectToUpdate: \"\",\n      checkedRepeat: false,\n      selectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n      endSelectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n    };\n  }\n\n  convertDate = date => {\n    return moment.utc(date).toDate();\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/events\")\n      .then(response => {\n        console.log(\"Got event data!\");\n        console.log(response.data);\n        let appointments = response.data;\n        this.setState({\n          cal_events: appointments\n        });\n      })\n      .then(response2 => {\n        return axios\n          .get(\"http://localhost:5000/gettherapists\") // this is not using the sequelize method\n          .then(response2 => {\n            console.log(\"Got therapist data!\");\n            console.log(response2.data);\n            this.setState({\n              therapistData: response2.data\n            });\n          });\n      })\n      .then(response3 => {\n        return axios.get(\"http://localhost:5000/getclients\").then(response3 => {\n          console.log(\"Got client data!\");\n          console.log(response3.data);\n          let clientTest = response3.data;\n          this.setState({\n            clientData: clientTest\n          });\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  reloadPage(prevState) {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  }\n  //}\n\n  // never let a process live forever\n  // always kill a process everytime we are done using it\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from events!\");\n    }\n  }\n\n  // just a note, here, in the front end, we use the id key of our data object\n  // in order to identify which we want to Update or delete.\n  // for our back end, we use the object id assigned by MongoDB to modify\n  // data base entries\n\n  // our first get method that uses our backend api to\n  // fetch data from our data base\n  /*\n  getDataFromDb = () => {\n    fetch(\"http://localhost:5000/events\")\n      .then(data => data.json())\n      .then(res => this.setState({ data: res.data }));\n  };\n  */\n  /*\n  componentDidUpdate(prevState) {\n    if (this.state.cal_events !== prevState.cal_events) {\n      console.log(\"Updated!\");\n    }\n  }\n  */\n\n  // this technically works, but it keeps \"updating\" non-stop instead of just the few times\n  // even technically works for state.data\n  /*\n  componentDidUpdate(prevState) {\n    if (this.state.cal_events !== prevState.cal_events) {\n      this.componentDidMount();\n      console.log(\"Updated!\");\n    }\n  }\n  */\n\n  // our put method that uses our backend api\n  // to create new query into our data base\n  /*\n  //this is being commented out because the same thing is already being done at onSubmit\n  putDataToDB = (\n    newBillType,\n    newClientType,\n    title,\n    newClient,\n    newTherapist,\n    newLocation,\n    newCategory\n  ) => {\n    let currentIds = this.state.data.map(data => data.id);\n    let idToBeAdded = 0;\n    while (currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n\n    axios.post(\"http://localhost:5000/api/putData2\", {\n      id: idToBeAdded,\n      newBillType: newBillType,\n      newClientType: newClientType,\n      title: title,\n      newClient: newClient,\n      newTherapist: newTherapist,\n      newLocation: newLocation,\n      newCategory: newCategory\n      //start: start,\n      //end: end,\n      //newClient: newClient,\n      //newTherapist: newTherapist\n    });\n  };\n*/\n\n  onSubmit(e) {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n\n    const obj = {\n      //title: this.state.title,\n      newBillType: this.state.newBillType,\n      newClientType: this.state.newClientType,\n      newTherapist: this.state.newTherapist,\n      newLocation: this.state.newLocation,\n      newCategory: this.state.newCategory,\n      newClient: this.state.newClient,\n      selectedDate: this.state.selectedDate,\n      endSelectedDate: this.state.endSelectedDate\n    };\n    axios\n      .post(\"http://localhost:5000/putData2\", obj)\n      .then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      newBillType: \"\",\n      newClientType: \"\",\n      //title: \"\",\n      newClient: \"\",\n      newTherapist: \"\",\n      newLocation: \"\",\n      newCategory: \"\",\n      selectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n      endSelectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n    });\n  }\n\n  /* show new event dialog box */\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  /* close new event dialog box */\n  handleClose = () => {\n    this.setState({\n      open: false,\n      //this will set the values to blank once the window is closed\n      newBillType: \"\",\n      newClientType: \"\",\n      title: \"\",\n      newClient: \"\",\n      newTherapist: \"\",\n      newLocation: \"\",\n      newCategory: \"\",\n      selectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n      endSelectedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n    });\n  };\n\n  /* show existing event dialog box */\n  handleClickOpen2 = () => {\n    this.setState({ openV: true });\n  };\n\n  /* close existing event dialog box */\n  handleClose2 = () => {\n    this.setState({ openV: false });\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChangeCheck = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  handleDateChangeStart = date => {\n    this.setState({ selectedDate: date.format(\"YYYY-MM-DD HH:mm:ss\") });\n  };\n\n  handleDateChangeEnd = date => {\n    this.setState({ endSelectedDate: date.format(\"YYYY-MM-DD HH:mm:ss\") });\n  };\n  /*\n  reloadPage() {\n    window.location.reload();\n  }\n  */\n\n  /*\n  someMethod() {\n    // Force a render without state change...\n    this.forceUpdate();\n  }\n  */\n\n  render() {\n    const { classes } = this.props;\n    //const classes = withStyles();\n    const {\n      cal_events,\n      therapistData,\n      clientData,\n      selectedDate,\n      endSelectedDate\n    } = this.state;\n\n    return (\n      <div>\n        <Container style={{ height: 1000 }} maxWidth=\"lg\">\n          <BigCalendar\n            className={classes.root}\n            selectable\n            startAccessor={cal_events => new Date(cal_events.start)}\n            endAccessor={cal_events => new Date(cal_events.end)}\n            localizer={localizer}\n            events={cal_events}\n            views={[\"month\", \"week\", \"day\"]}\n            defaultDate={new Date()}\n            defaultView=\"month\"\n            onSelectEvent={this.handleClickOpen2}\n            onSelectSlot={this.handleClickOpen}\n            // (this sets the start time of 7am) min={new Date(2000, 1, 1, 7)}\n            // this sets the end time of 6pm)  max={new Date(2000, 1, 1, 18)}\n          />\n        </Container>\n        {/* existing dialog */}\n        <Dialog open={this.state.openV} onClose={this.handleClose2}>\n          <DialogContent>\n            <ExistingEventDialog />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose2} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleClose2} color=\"primary\">\n              Save\n            </Button>\n            <Button onClick={this.handleClose2} color=\"primary\">\n              Save & Next\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog open={this.state.open} onClose={this.handleClose}>\n          <form className={classes.container} noValidate autoComplete=\"off\">\n            <DialogContent>\n              {/*\n              <TextField\n                required\n                id=\"title\"\n                label=\"Title \"\n                className={classes.textField}\n                value={this.state.title}\n                onChange={e => this.setState({ title: e.target.value })}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            */}\n              <TextField\n                required\n                id=\"bill_type\"\n                select\n                label=\"Bill Type\"\n                className={classes.textField}\n                value={this.state.newBillType}\n                onChange={e => this.setState({ newBillType: e.target.value })}\n                //helperText=\"Please select your currency\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {newBillTypes.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n\n              <TextField\n                required\n                id=\"client_type\"\n                select\n                label=\"Client Type\"\n                className={classes.textField}\n                value={this.state.newClientType}\n                onChange={e => this.setState({ newClientType: e.target.value })}\n                //helperText=\"Please select your currency\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {newClientTypes.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                required\n                id=\"newClient\"\n                select\n                label=\"Client\"\n                className={classes.textField}\n                value={this.state.newClient}\n                onChange={this.handleChange(\"newClient\")}\n                //helperText=\"Please select your currency\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {clientData.map(option => (\n                  <MenuItem\n                    key={option.value}\n                    value={/* option.first_name */ option.last_name}\n                  >\n                    {option.first_name} {option.last_name}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                id=\"standard-select-therapist\"\n                select\n                label=\"Therapist\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                className={classes.textField}\n                value={this.state.newTherapist}\n                onChange={this.handleChange(\"newTherapist\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {therapistData.map(option => (\n                  <MenuItem\n                    key={option.value}\n                    value={/* option.first_name */ option.last_name}\n                  >\n                    {option.first_name} {option.last_name}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                required\n                id=\"newLocation\"\n                label=\"Location \"\n                className={classes.textField2}\n                value={this.state.newLocation}\n                onChange={e => this.setState({ newLocation: e.target.value })}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                required\n                id=\"newCategory\"\n                select\n                label=\"Category\"\n                className={classes.textField2}\n                value={this.state.newCategory}\n                onChange={e => this.setState({ newCategory: e.target.value })}\n                //helperText=\"Please select your currency\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {categories.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <MuiPickersUtilsProvider utils={MomentUtils}>\n                <Grid container className={classes.grid} justify=\"space-around\">\n                  <DatePicker\n                    margin=\"normal\"\n                    label=\"Date picker\"\n                    value={selectedDate}\n                    onChange={this.handleDateChangeStart}\n                  />\n                  <TimePicker\n                    margin=\"normal\"\n                    label=\"Time picker\"\n                    value={selectedDate}\n                    onChange={this.handleDateChangeStart}\n                  />\n                </Grid>\n              </MuiPickersUtilsProvider>\n              <MuiPickersUtilsProvider utils={MomentUtils}>\n                <Grid container className={classes.grid} justify=\"space-around\">\n                  <DatePicker\n                    margin=\"normal\"\n                    label=\"Date picker\"\n                    value={endSelectedDate}\n                    onChange={this.handleDateChangeEnd}\n                  />\n                  <TimePicker\n                    margin=\"normal\"\n                    label=\"Time picker\"\n                    value={endSelectedDate}\n                    onChange={this.handleDateChangeEnd}\n                  />\n                </Grid>\n              </MuiPickersUtilsProvider>\n              <Container>\n                <FormGroup row>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.checkedRepeat}\n                        onChange={this.handleChangeCheck(\"checkedRepeat\")}\n                        value=\"checkedRepeat\"\n                      />\n                    }\n                    label=\"Repeat\"\n                  />\n                </FormGroup>\n              </Container>\n            </DialogContent>\n\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Paper\n                elevation={0}\n                className={classes.root3}\n                onClick={this.reloadPage}\n              >\n                <Button\n                  onClick={() => {\n                    this.onSubmit(\n                      //this.state.title,\n                      this.state.newBillType,\n                      this.state.newClientType,\n                      this.state.newClient,\n                      this.state.thereapist,\n                      this.state.newLocation,\n                      this.state.newCategory,\n                      this.state.selectedDate,\n                      this.state.endSelectedDate\n                    );\n                    //this.reloadPage();\n                  }}\n                  color=\"primary\"\n                >\n                  Save\n                </Button>\n              </Paper>\n              <Button onClick={this.reloadPage} color=\"primary\">\n                Close\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nReactCalendarBase.propTypes = propTypes;\n\n//export default ReactCalendarBase;\nexport default withStyles(styles)(ReactCalendarBase);\n"]},"metadata":{},"sourceType":"module"}