{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/newClientPanelTabs.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport green from \"@material-ui/core/colors/green\";\nimport red from \"@material-ui/core/colors/red\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport AssignedClientsTable from \"./Tables/assignedClientsTable\";\nimport TeamMemFilesTable from \"./Tables/teamMemFilesTable\";\nimport AssignedClientsActions from \"./Actions/asssignedClientsActions\";\nimport PleaseWork3 from \"./teamMemberInfo\";\nimport NewClientInfo from \"./newClientInfo\";\nimport ClientContactInfo from \"./clientContactInfo\";\nimport ClientPayorInfo from \"./clientPayorInfo\";\nimport NoteHistoryTableOld from \"./Old/clientNoteHistoryTableOld\";\nimport NoteHistoryTable from \"./Tables/noteHistoryTable\";\nimport ClientAvatar from \"./clientAvatarTest\";\nimport GoalsObjectives from \"./goalsObjectives\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport Container from \"@material-ui/core/Container\";\n\nconst styles = theme => ({\n  root: {\n    //paddingTop: theme.spacing.unit * 1,\n    // paddingBottom: theme.spacing.unit * 1,\n    // paddingLeft: theme.spacing.unit,\n    marginTop: theme.spacing.unit * 15,\n    marginLeft: theme.spacing.unit * 22,\n    marginRight: theme.spacing.unit * 22,\n    align: \"center\",\n    width: \"77.5%\",\n    height: \"120\"\n  },\n  toggle: {\n    paddingRight: theme.spacing.unit * 30\n  },\n  marg: {\n    marginLeft: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  },\n  purpleAvatar: {\n    margin: 10,\n    color: \"#fff\",\n    backgroundColor: deepPurple[500],\n    width: 100,\n    height: 100,\n    fontSize: 40,\n    marginBottom: theme.spacing.unit * -28,\n    marginRight: theme.spacing.unit * 18\n  },\n  appBar: {\n    backgroundColor: Cyan[800],\n    marginTop: theme.spacing(10),\n    borderRadius: theme.shape.borderRadius\n  },\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    width: 300\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    width: 200\n  },\n  menu: {\n    width: 200\n  },\n  checked: {},\n  root2: {\n    //flexGrow: 1,\n    //backgroundColor: theme.palette.background.paper,\n    // marginLeft: theme.spacing.unit * 22,\n    marginRight: theme.spacing.unit * 22,\n    //marginTop: theme.spacing.unit * 22,\n    width: \"77.5%\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: Cyan[800]\n  }\n});\n\nconst selectedClient = [{\n  value: \"Billy Joe\",\n  label: \"Billy Joe\"\n}, {\n  value: \"Ashley Flowers\",\n  label: \"Ashley Flowers\"\n}, {\n  value: \"John Smith\",\n  label: \"John Smith\"\n}];\nconst clientTypes = [{\n  value: \"\",\n  label: \"\"\n}, {\n  value: \"Individual\",\n  label: \"Individual\"\n}, {\n  value: \"Facility\",\n  label: \"Facility\"\n}];\n\nclass TopPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkedA: true,\n      client: \"John Smith\",\n      open: false,\n      cost: \"\",\n      length: \"\",\n      clientType: \"\",\n      checkedProspect: false,\n      checkedThera: true,\n      checkedIntern: false,\n      tabValue: 0\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n\n    this.handleChange2 = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange3 = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n\n    this.handleChange4 = (event, tabValue) => {\n      this.setState({\n        tabValue\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const tabValue = this.state.tabValue;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      className: classes.appBar,\n      position: \"static\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      value: tabValue,\n      onChange: this.handleChange4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: \"Client Information\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Contact Information\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Payor Information\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }))), tabValue === 0 && React.createElement(NewClientInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), tabValue === 1 && React.createElement(ClientContactInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), tabValue === 2 && React.createElement(ClientPayorInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), tabValue === 5 && React.createElement(GoalsObjectives, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    })));\n  }\n\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TopPanel);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/newClientPanelTabs.js"],"names":["React","PropTypes","withStyles","Paper","deepPurple","Grid","Avatar","green","red","FormGroup","FormControlLabel","Switch","MenuItem","TextField","Checkbox","AppBar","Tab","Tabs","AssignedClientsTable","TeamMemFilesTable","AssignedClientsActions","PleaseWork3","NewClientInfo","ClientContactInfo","ClientPayorInfo","NoteHistoryTableOld","NoteHistoryTable","ClientAvatar","GoalsObjectives","Cyan","Container","styles","theme","root","marginTop","spacing","unit","marginLeft","marginRight","align","width","height","toggle","paddingRight","marg","marginBottom","purpleAvatar","margin","color","backgroundColor","fontSize","appBar","borderRadius","shape","colorSwitchBase","colorBar","colorChecked","textField","textField2","menu","checked","root2","selectedClient","value","label","clientTypes","TopPanel","Component","state","checkedA","client","open","cost","length","clientType","checkedProspect","checkedThera","checkedIntern","tabValue","handleChange","name","event","setState","target","handleChange2","handleChange3","handleChange4","render","classes","props","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport green from \"@material-ui/core/colors/green\";\nimport red from \"@material-ui/core/colors/red\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\n\nimport AssignedClientsTable from \"./Tables/assignedClientsTable\";\n\nimport TeamMemFilesTable from \"./Tables/teamMemFilesTable\";\nimport AssignedClientsActions from \"./Actions/asssignedClientsActions\";\nimport PleaseWork3 from \"./teamMemberInfo\";\nimport NewClientInfo from \"./newClientInfo\";\nimport ClientContactInfo from \"./clientContactInfo\";\nimport ClientPayorInfo from \"./clientPayorInfo\";\nimport NoteHistoryTableOld from \"./Old/clientNoteHistoryTableOld\";\nimport NoteHistoryTable from \"./Tables/noteHistoryTable\";\nimport ClientAvatar from \"./clientAvatarTest\";\nimport GoalsObjectives from \"./goalsObjectives\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport Container from \"@material-ui/core/Container\";\n\nconst styles = theme => ({\n  root: {\n    //paddingTop: theme.spacing.unit * 1,\n    // paddingBottom: theme.spacing.unit * 1,\n    // paddingLeft: theme.spacing.unit,\n    marginTop: theme.spacing.unit * 15,\n    marginLeft: theme.spacing.unit * 22,\n    marginRight: theme.spacing.unit * 22,\n    align: \"center\",\n    width: \"77.5%\",\n    height: \"120\"\n  },\n\n  toggle: {\n    paddingRight: theme.spacing.unit * 30\n  },\n\n  marg: {\n    marginLeft: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  },\n\n  purpleAvatar: {\n    margin: 10,\n    color: \"#fff\",\n    backgroundColor: deepPurple[500],\n    width: 100,\n    height: 100,\n    fontSize: 40,\n    marginBottom: theme.spacing.unit * -28,\n    marginRight: theme.spacing.unit * 18\n  },\n\n  appBar: {\n    backgroundColor: Cyan[800],\n    marginTop: theme.spacing(10),\n    borderRadius: theme.shape.borderRadius\n  },\n\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    width: 300\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    width: 200\n  },\n  menu: {\n    width: 200\n  },\n\n  checked: {},\n\n  root2: {\n    //flexGrow: 1,\n    //backgroundColor: theme.palette.background.paper,\n    // marginLeft: theme.spacing.unit * 22,\n    marginRight: theme.spacing.unit * 22,\n    //marginTop: theme.spacing.unit * 22,\n    width: \"77.5%\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: Cyan[800]\n  }\n});\n\nconst selectedClient = [\n  {\n    value: \"Billy Joe\",\n    label: \"Billy Joe\"\n  },\n\n  {\n    value: \"Ashley Flowers\",\n    label: \"Ashley Flowers\"\n  },\n  {\n    value: \"John Smith\",\n    label: \"John Smith\"\n  }\n];\n\nconst clientTypes = [\n  {\n    value: \"\",\n    label: \"\"\n  },\n\n  {\n    value: \"Individual\",\n    label: \"Individual\"\n  },\n\n  {\n    value: \"Facility\",\n    label: \"Facility\"\n  }\n];\n\nclass TopPanel extends React.Component {\n  state = {\n    checkedA: true,\n    client: \"John Smith\",\n    open: false,\n    cost: \"\",\n    length: \"\",\n    clientType: \"\",\n    checkedProspect: false,\n    checkedThera: true,\n    checkedIntern: false,\n    tabValue: 0\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  /* change of client dropdown */\n  handleChange2 = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  // change of check boxes\n  handleChange3 = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  handleChange4 = (event, tabValue) => {\n    this.setState({ tabValue });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { tabValue } = this.state;\n\n    return (\n      <div>\n        <Container maxWidth=\"md\">\n          {/* Avatar */}\n          {/*\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <ClientAvatar />\n          </Grid>\n          <Paper className={classes.root} elevation={1}>\n            <Grid container row justify=\"space-between\">\n              <FormGroup row>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.checkedA}\n                      onChange={this.handleChange(\"checkedA\")}\n                      value=\"checkedA\"\n                      className={classes.marg}\n                      classes={{\n                        switchBase: classes.colorSwitchBase,\n                        checked: classes.colorChecked,\n                        bar: classes.colorBar\n                      }}\n                    />\n                  }\n                  label=\"Active\"\n                />\n              </FormGroup>\n\n              <FormGroup row>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state.checkedProspect}\n                      onChange={this.handleChange(\"checkedProspect\")}\n                      value=\"checkedProspect\"\n                      color=\"default\"\n                    />\n                  }\n                  label=\"Prospect\"\n                />\n              </FormGroup>\n            </Grid>\n            \n            <Grid container row justify=\"space-between\">\n              <TextField\n                id=\"standard-select-client\"\n                select\n                label=\"Client\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.client}\n                onChange={this.handleChange(\"client\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {selectedClient.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n\n              <TextField\n                id=\"standard-select-member\"\n                select\n                label=\"Client Type\"\n                variant=\"outlined\"\n                className={classes.textField2}\n                value={this.state.clientType}\n                onChange={this.handleChange(\"clientType\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {clientTypes.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n          </Paper>\n*/}\n          <AppBar className={classes.appBar} position=\"static\">\n            <Tabs value={tabValue} onChange={this.handleChange4}>\n              <Tab label=\"Client Information\" />\n              <Tab label=\"Contact Information\" />\n              <Tab label=\"Payor Information\" />\n              {/*  <Tab label=\"Note History\" />\n              <Tab label=\"Message History\" />\n<Tab label=\"Goals & Objectives\" /> */}\n            </Tabs>\n          </AppBar>\n\n          {tabValue === 0 && <NewClientInfo />}\n          {tabValue === 1 && <ClientContactInfo />}\n          {tabValue === 2 && <ClientPayorInfo />}\n          {/*  {tabValue === 3 && <NoteHistoryTable />} */}\n          {/* {tabValue === 4 && <Paper>Message History</Paper>} */}\n          {tabValue === 5 && <GoalsObjectives />}\n        </Container>\n      </div>\n    );\n  }\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TopPanel);\n"]},"metadata":{},"sourceType":"module"}