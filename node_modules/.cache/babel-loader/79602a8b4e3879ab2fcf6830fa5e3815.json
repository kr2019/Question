{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/newTeamMemberInfo.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport red from \"@material-ui/core/colors/red\";\nimport green from \"@material-ui/core/colors/green\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  marg: {\n    marginLeft: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  },\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  saveButton: {\n    marginRight: theme.spacing(2)\n  },\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 850\n  },\n  menu2: {\n    width: 200\n  },\n  button: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  }\n});\n\nconst titles = [{\n  value: \"\",\n  label: \"\"\n}, {\n  value: \"Dr.\",\n  label: \"Dr.\"\n}, {\n  value: \"Miss\",\n  label: \"Miss\"\n}, {\n  value: \"Mr.\",\n  label: \"Mr.\"\n}, {\n  value: \"Mrs.\",\n  label: \"Mrs.\"\n}, {\n  value: \"Ms.\",\n  label: \"Ms.\"\n}, {\n  value: \"Mx.\",\n  label: \"Mx.\"\n}];\n\nclass TopPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkedActive: false,\n      checkedAdmin: false,\n      checkedThera: false,\n      checkedIntern: false,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      title: \"\",\n      currentPassword: \"\",\n      confirmPassword: \"\",\n      phone: \"\",\n      address: \"\",\n      primaryLocation: \"\",\n      npi: \"\",\n      city: \"\",\n      zipCode: \"\",\n      multiline: \"Controlled\"\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange2 = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange3 = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/membersTable\").then(response => {\n      console.log(\"Got team member data!\");\n      console.log(response.data);\n      this.setState({\n        memberData: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Team member interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from team data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n    const obj = {\n      //title: this.state.title,\n      checkedActive: this.state.checkedActive,\n      checkedAdmin: this.state.checkedAdmin,\n      checkedThera: this.state.checkedThera,\n      checkedIntern: this.state.checkedIntern,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode\n    };\n    axios.post(\"http://localhost:5000/registermember\", obj).then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      checkedActive: this.state.checkedActive,\n      checkedAdmin: this.state.checkedAdmin,\n      checkedThera: this.state.checkedThera,\n      checkedIntern: this.state.checkedIntern,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"form\", {\n      /* className={classes.container} */\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      row: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: this.state.checkedActive,\n        onChange: this.handleChange3(\"checkedActive\"),\n        value: \"checkedActive\",\n        marginLeft: \"theme.spacing.unit * 20\",\n        className: classes.marg,\n        classes: {\n          switchBase: classes.colorSwitchBase,\n          checked: classes.colorChecked,\n          bar: classes.colorBar\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }),\n      label: \"Active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedAdmin,\n        onChange: this.handleChange3(\"checkedAdmin\"),\n        value: \"checkedAdmin\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }),\n      label: \"Administrator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedThera,\n        onChange: this.handleChange3(\"checkedThera\"),\n        value: \"checkedThera\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }),\n      label: \"Therapist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedIntern,\n        onChange: this.handleChange3(\"checkedIntern\"),\n        value: \"checkedIntern\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }),\n      label: \"Intern\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-title\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.title,\n      onChange: this.handleChange(\"title\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, option.label)))), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.phone,\n      onChange: this.handleChange(\"phone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-firstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.firstName,\n      onChange: this.handleChange(\"firstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.email,\n      onChange: this.handleChange(\"email\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.lastName,\n      onChange: this.handleChange(\"lastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-address\",\n      variant: \"outlined\",\n      label: \"Address\",\n      className: classes.textField,\n      value: this.state.address,\n      onChange: this.handleChange(\"address\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-password-input\",\n      variant: \"outlined\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.currentPassword,\n      onChange: this.handleChange(\"currentPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-city-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.city,\n      onChange: this.handleChange(\"city\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-confirmPassword-input\",\n      variant: \"outlined\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange(\"confirmPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-zipCode\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.zipCode,\n      onChange: this.handleChange(\"zipCode\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-npi\",\n      variant: \"outlined\",\n      label: \"NPI Number\",\n      className: classes.textField,\n      value: this.state.npi,\n      onChange: this.handleChange(\"npi\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-primary-location\",\n      variant: \"outlined\",\n      label: \"Primary Location\",\n      className: classes.textField,\n      value: this.state.primaryLocation,\n      onChange: this.handleChange(\"primaryLocation\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    })), React.createElement(TextField, {\n      id: \"standard-full-width\",\n      label: \"Additional Notes\",\n      style: {\n        margin: 8\n      },\n      className: classes.textField2,\n      placeholder: \"Add any additional notes here\",\n      fullWidth: true,\n      multiline: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TopPanel);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/newTeamMemberInfo.js"],"names":["React","PropTypes","withStyles","Paper","Grid","MenuItem","TextField","Button","Container","FormGroup","FormControlLabel","Switch","Checkbox","red","green","axios","styles","theme","container","display","flexWrap","marg","marginLeft","spacing","unit","marginBottom","colorSwitchBase","color","backgroundColor","colorBar","colorChecked","textField","marginRight","width","menu","root","paddingTop","paddingBottom","saveButton","container2","textField2","menu2","button","titles","value","label","TopPanel","Component","state","checkedActive","checkedAdmin","checkedThera","checkedIntern","firstName","lastName","email","title","currentPassword","confirmPassword","phone","address","primaryLocation","npi","city","zipCode","multiline","handleChange","name","event","setState","target","handleChange2","handleChange3","checked","componentDidMount","get","then","response","console","log","data","memberData","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","onSubmit","obj","post","res","render","classes","props","switchBase","bar","MenuProps","className","map","option","margin","shrink","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport red from \"@material-ui/core/colors/red\";\nimport green from \"@material-ui/core/colors/green\";\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n\n  marg: {\n    marginLeft: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  },\n\n  colorSwitchBase: {\n    color: red[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {},\n\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2\n  },\n\n  saveButton: {\n    marginRight: theme.spacing(2)\n  },\n\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField2: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 850\n  },\n\n  menu2: {\n    width: 200\n  },\n  button: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  }\n});\n\nconst titles = [\n  {\n    value: \"\",\n    label: \"\"\n  },\n\n  {\n    value: \"Dr.\",\n    label: \"Dr.\"\n  },\n\n  {\n    value: \"Miss\",\n    label: \"Miss\"\n  },\n\n  {\n    value: \"Mr.\",\n    label: \"Mr.\"\n  },\n  {\n    value: \"Mrs.\",\n    label: \"Mrs.\"\n  },\n  {\n    value: \"Ms.\",\n    label: \"Ms.\"\n  },\n  {\n    value: \"Mx.\",\n    label: \"Mx.\"\n  }\n];\n\nclass TopPanel extends React.Component {\n  state = {\n    checkedActive: false,\n    checkedAdmin: false,\n    checkedThera: false,\n    checkedIntern: false,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    title: \"\",\n    currentPassword: \"\",\n    confirmPassword: \"\",\n    phone: \"\",\n    address: \"\",\n    primaryLocation: \"\",\n    npi: \"\",\n    city: \"\",\n    zipCode: \"\",\n    multiline: \"Controlled\"\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/membersTable\")\n      .then(response => {\n        console.log(\"Got team member data!\");\n        console.log(response.data);\n        this.setState({\n          memberData: response.data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Team member interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from team data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n\n    const obj = {\n      //title: this.state.title,\n      checkedActive: this.state.checkedActive,\n      checkedAdmin: this.state.checkedAdmin,\n      checkedThera: this.state.checkedThera,\n      checkedIntern: this.state.checkedIntern,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode\n    };\n    axios\n      .post(\"http://localhost:5000/registermember\", obj)\n      .then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      checkedActive: this.state.checkedActive,\n      checkedAdmin: this.state.checkedAdmin,\n      checkedThera: this.state.checkedThera,\n      checkedIntern: this.state.checkedIntern,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      title: this.state.title,\n      currentPassword: this.state.currentPassword,\n      confirmPassword: this.state.confirmPassword,\n      phone: this.state.phone,\n      address: this.state.address,\n      primaryLocation: this.state.primaryLocation,\n      npi: this.state.npi,\n      city: this.state.city,\n      zipCode: this.state.zipCode\n    });\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChange2 = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChange3 = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form /* className={classes.container} */ noValidate autoComplete=\"off\">\n        <Paper className={classes.root} elevation={1}>\n          <Grid container row justify=\"space-between\">\n            <FormGroup row>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={this.state.checkedActive}\n                    onChange={this.handleChange3(\"checkedActive\")}\n                    value=\"checkedActive\"\n                    marginLeft=\"theme.spacing.unit * 20\"\n                    className={classes.marg}\n                    classes={{\n                      switchBase: classes.colorSwitchBase,\n                      checked: classes.colorChecked,\n                      bar: classes.colorBar\n                    }}\n                  />\n                }\n                label=\"Active\"\n              />\n            </FormGroup>\n\n            {/* member drop down */}\n\n            <FormGroup row>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.checkedAdmin}\n                    onChange={this.handleChange3(\"checkedAdmin\")}\n                    value=\"checkedAdmin\"\n                    color=\"default\"\n                  />\n                }\n                label=\"Administrator\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.checkedThera}\n                    onChange={this.handleChange3(\"checkedThera\")}\n                    value=\"checkedThera\"\n                    color=\"default\"\n                  />\n                }\n                label=\"Therapist\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.checkedIntern}\n                    onChange={this.handleChange3(\"checkedIntern\")}\n                    value=\"checkedIntern\"\n                    color=\"default\"\n                  />\n                }\n                label=\"Intern\"\n              />\n            </FormGroup>\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid direction=\"column\">\n              <TextField\n                id=\"standard-select-title\"\n                select\n                label=\"Title\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.title}\n                onChange={this.handleChange(\"title\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {titles.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n\n            <Grid direction=\"column\">\n              <TextField\n                id=\"standard-phone\"\n                variant=\"outlined\"\n                label=\"Phone Number\"\n                className={classes.textField}\n                value={this.state.phone}\n                onChange={this.handleChange(\"phone\")}\n                margin=\"normal\"\n              />\n            </Grid>\n\n            <Grid direction=\"column\">\n              <TextField\n                required\n                id=\"standard-firstName\"\n                label=\"First Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.firstName}\n                onChange={this.handleChange(\"firstName\")}\n                margin=\"normal\"\n              />\n            </Grid>\n\n            <Grid direction=\"column\">\n              <TextField\n                required\n                id=\"standard-email\"\n                variant=\"outlined\"\n                label=\"Email\"\n                className={classes.textField}\n                value={this.state.email}\n                onChange={this.handleChange(\"email\")}\n                margin=\"normal\"\n              />\n            </Grid>\n\n            <Grid direction=\"column\">\n              <TextField\n                required\n                id=\"standard-lastNamename\"\n                label=\"Last Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.lastName}\n                onChange={this.handleChange(\"lastName\")}\n                margin=\"normal\"\n              />\n            </Grid>\n\n            <Grid direction=\"column\">\n              <TextField\n                id=\"standard-address\"\n                variant=\"outlined\"\n                label=\"Address\"\n                className={classes.textField}\n                value={this.state.address}\n                onChange={this.handleChange(\"address\")}\n                margin=\"normal\"\n              />\n            </Grid>\n\n            <Grid direction=\"column\">\n              <TextField\n                required\n                id=\"standard-password-input\"\n                variant=\"outlined\"\n                label=\"Password\"\n                className={classes.textField}\n                type=\"password\"\n                value={this.state.currentPassword}\n                onChange={this.handleChange(\"currentPassword\")}\n                //autoComplete=\"current-password\"\n                margin=\"normal\"\n              />\n            </Grid>\n\n            <Grid direction=\"column\">\n              <TextField\n                id=\"standard-city-\"\n                variant=\"outlined\"\n                label=\"City\"\n                className={classes.textField}\n                value={this.state.city}\n                onChange={this.handleChange(\"city\")}\n                margin=\"normal\"\n              />\n            </Grid>\n\n            <Grid direction=\"column\">\n              <TextField\n                required\n                id=\"standard-confirmPassword-input\"\n                variant=\"outlined\"\n                label=\"Confirm Password\"\n                className={classes.textField}\n                type=\"password\"\n                value={this.state.confirmPassword}\n                onChange={this.handleChange(\"confirmPassword\")}\n                //autoComplete=\"current-password\"\n                margin=\"normal\"\n              />\n            </Grid>\n\n            <Grid direction=\"column\">\n              <TextField\n                id=\"standard-zipCode\"\n                variant=\"outlined\"\n                label=\"Zip Code\"\n                className={classes.textField}\n                value={this.state.zipCode}\n                onChange={this.handleChange(\"zipCode\")}\n                margin=\"normal\"\n              />\n            </Grid>\n\n            <Grid direction=\"column\">\n              <TextField\n                id=\"standard-npi\"\n                variant=\"outlined\"\n                label=\"NPI Number\"\n                className={classes.textField}\n                value={this.state.npi}\n                onChange={this.handleChange(\"npi\")}\n                margin=\"normal\"\n              />\n            </Grid>\n            <Grid direction=\"column\">\n              <TextField\n                id=\"standard-primary-location\"\n                variant=\"outlined\"\n                label=\"Primary Location\"\n                className={classes.textField}\n                value={this.state.primaryLocation}\n                onChange={this.handleChange(\"primaryLocation\")}\n                margin=\"normal\"\n              />\n            </Grid>\n\n            <TextField\n              id=\"standard-full-width\"\n              label=\"Additional Notes\"\n              style={{ margin: 8 }}\n              className={classes.textField2}\n              placeholder=\"Add any additional notes here\"\n              fullWidth\n              multiline\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true\n              }}\n            />\n          </Grid>\n          <Grid container direction=\"row\" justify=\"flex-end\">\n            <Button\n              className={classes.saveButton}\n              size=\"large\"\n              variant=\"contained\"\n            >\n              Save\n            </Button>\n          </Grid>\n        </Paper>\n      </form>\n    );\n  }\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TopPanel);\n"]},"metadata":{},"sourceType":"module"}