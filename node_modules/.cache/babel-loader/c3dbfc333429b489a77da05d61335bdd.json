{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/repos2/mtsaas/mtrepo/src/newClientConsolidate.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport red from \"@material-ui/core/colors/red\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport green from \"@material-ui/core/colors/green\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiSwitch from \"@material-ui/core/Switch\"; // putting commmnent to change push comment\n\nimport { Switch, Link, Route, withRouter, Redirect } from \"react-router-dom\"; //\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n  textFieldTest: {\n    marginRight: theme.spacing(79),\n    width: 300\n  },\n  checkboxAlign: {\n    marginRight: theme.spacing(86)\n  },\n  textFieldSession: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginTop: theme.spacing(6),\n    width: 300\n  },\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    // paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2 //backgroundColor: red[200]\n\n  },\n  rootTitle: {\n    width: \"100%\",\n    marginTop: theme.spacing(-1),\n    marginBottom: theme.spacing(2),\n    backgroundColor: Cyan[800],\n    color: theme.palette.getContrastText(\"#00838f\") //paddingTop: theme.spacing.unit,\n    //paddingBottom: theme.spacing.unit * 2\n\n  },\n  rootTitle2: {\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n    backgroundColor: \"#1de9b6\" //paddingTop: theme.spacing.unit,\n    //paddingBottom: theme.spacing.unit * 2\n\n  },\n  marg: {\n    marginRight: theme.spacing(45) // marginBottom: theme.spacing(5)\n\n  },\n  switchBase: {\n    color: green[300],\n    \"&$checked\": {\n      color: green[500]\n    },\n    \"&$checked + $track\": {\n      backgroundColor: green[500]\n    }\n  },\n  checked: {},\n  track: {},\n  colorSwitchBase: {\n    color: \"#1de9b6\",\n    \"&$colorChecked\": {\n      color: \"#1de9b6\",\n      \"& + $colorBar\": {\n        backgroundColor: \"#1de9b6\"\n      }\n    }\n  },\n  colorBar: \"#1de9b6\",\n  colorChecked: \"#1de9b6\",\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField2: {\n    //marginLeft: theme.spacing.unit,\n    //marginRight: theme.spacing.unit,\n    //marginBottom: theme.spacing(2),\n    width: 938\n  },\n  textField3: {\n    marginLeft: theme.spacing(23),\n    //marginBottom: theme.spacing(5),\n    // marginRight: theme.spacing(20),\n    width: 300\n  },\n  title: {\n    align: \"center\" //marginTop: theme.spacing(1)\n    //marginBottom: theme.spacing(3)\n\n  },\n  title2: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  },\n  menu2: {\n    width: 200\n  },\n  root2: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  root3: {\n    width: \"5%\"\n  },\n  divider: {\n    backgroundColor: \"#1de9b6\",\n    marginBottom: theme.spacing(2)\n  },\n  saveButton: {\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n    /* this is text color */\n    color: theme.palette.getContrastText(\"#00bfa5\"),\n    backgroundColor: \"#00bfa5\",\n    \"&:hover\": {\n      backgroundColor: \"#00bfa5\"\n    }\n  }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#00838f\"\n    }\n  }\n});\nconst theme2 = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#00838f\"\n    }\n  }\n});\nconst theme3 = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#00838f\"\n    }\n  }\n});\nconst titles = [{\n  value: \"\",\n  label: \"\"\n}, {\n  value: \"Dr.\",\n  label: \"Dr.\"\n}, {\n  value: \"Miss\",\n  label: \"Miss\"\n}, {\n  value: \"Mr.\",\n  label: \"Mr.\"\n}, {\n  value: \"Mrs.\",\n  label: \"Mrs.\"\n}, {\n  value: \"Ms.\",\n  label: \"Ms.\"\n}, {\n  value: \"Mx.\",\n  label: \"Mx.\"\n}];\nconst clientTypes = [{\n  value: \"Individual\",\n  label: \"Individual\"\n}, {\n  value: \"Facility\",\n  label: \"Facility\"\n}];\nconst sessionTypes = [{\n  value: \"Lessons\",\n  label: \"Lessons\"\n}, {\n  value: \"Therapy\",\n  label: \"Therapy\"\n}];\nconst paymentTypes = [{\n  value: \"Card\",\n  label: \"Card\"\n}, {\n  value: \"Cash\",\n  label: \"Cash\"\n}, {\n  value: \"Check\",\n  label: \"Check\"\n}];\nconst cardTypes = [{\n  value: \"American Express\",\n  label: \"American Express\"\n}, {\n  value: \"Discover\",\n  label: \"Discover\"\n}, {\n  value: \"MasterCard\",\n  label: \"MasterCard\"\n}, {\n  value: \"Visa\",\n  label: \"Visa\"\n}];\nconst navStyle = {\n  color: \"black\",\n  textDecoration: \"none\"\n};\n\nclass TopPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //client info state\n      clientType: \"\",\n      clientFirstName: \"\",\n      clientLastName: \"\",\n      clientEmail: \"\",\n      clientTitle: \"\",\n      clientCurrentPassword: \"\",\n      clientConfirmPassword: \"\",\n      sessionType: \"\",\n      sessionCost: \"\",\n      sessionLegnth: \"\",\n      clientPhone: \"\",\n      clientAddress: \"\",\n      clientBday: \"\",\n      clientState: \"\",\n      clientCity: \"\",\n      clientZipCode: \"\",\n      clientStreetAddress: \"\",\n      clientNotes: \"\",\n      multiline: \"Controlled\",\n      //contact info state\n      checkedSameCont: null,\n      contactFirstName: \"\",\n      contactLastName: \"\",\n      contactEmail: \"\",\n      contactTitle: \"\",\n      contactPhone: \"\",\n      contactAddress: \"\",\n      contactCity: \"\",\n      contactState: \"\",\n      contactZip: \"\",\n      // contact 2 info state\n      contactFirstName2: null,\n      contactLastName2: null,\n      contactEmail2: null,\n      contactTitle2: null,\n      contactPhone2: null,\n      contactAddress2: null,\n      contactCity2: null,\n      contactState2: null,\n      contactZip2: null,\n      // contact 3 info state\n      contactFirstName3: null,\n      contactLastName3: null,\n      contactEmail3: null,\n      contactTitle3: null,\n      contactPhone3: null,\n      contactAddress3: null,\n      contactCity3: null,\n      contactState3: null,\n      contactZip3: null,\n      //payor info state\n      billingFirstName: \"\",\n      billingLastName: \"\",\n      nameOnCard: \"\",\n      cardNum: \"\",\n      payorEmail: \"\",\n      payorTitle: \"\",\n      paymentType: \"Cash\",\n      billingPhone: \"\",\n      billingAddress: \"\",\n      billingCity: \"\",\n      billingZip: \"\",\n      billingState: \"\",\n      cvv: \"\",\n      expDate: \"\",\n      cardType: \"\",\n      sameAsContact: false,\n      //toDashboard: false,\n      navigate: false,\n      //intervalIsSet: \"\"\n      therapistData: [],\n      therapist: \"\",\n      // condition\n      checkedContact2: false,\n      checkedContact3: false\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChange2 = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleChangeCheckSameCont = name => event => {\n      this.setState({\n        [name]: event.target.checked,\n        //this will set the values to blank once the window is closed\n        contactFirstName: this.state.clientFirstName,\n        contactLastName: this.state.clientLastName,\n        contactEmail: this.state.clientEmail,\n        contactTitle: this.state.clientTitle,\n        contactPhone: this.state.clientPhone,\n        contactAddress: this.state.clientAddress,\n        contactCity: this.state.clientCity,\n        contactState: this.state.clientState,\n        contactZip: this.state.clientZipCode\n      });\n    };\n\n    this.handleChangeCheck2 = name => event => {\n      this.setState({\n        [name]: event.target.checked,\n        //this will set the values to blank once the window is closed\n        contactFirstName2: null,\n        contactLastName2: null,\n        contactEmail2: null,\n        contactTitle2: null,\n        contactPhone2: null,\n        contactAddress2: null,\n        contactCity2: null,\n        contactState2: null,\n        contactZip2: null,\n        // contact 3,\n        checkedContact3: false,\n        contactFirstName3: null,\n        contactLastName3: null,\n        contactEmail3: null,\n        contactTitle3: null,\n        contactPhone3: null,\n        contactAddress3: null,\n        contactCity3: null,\n        contactState3: null,\n        contactZip3: null\n      });\n    };\n\n    this.handleChangeCheck3 = name => event => {\n      this.setState({\n        [name]: event.target.checked,\n        //this will set the values to blank once the window is closed\n        contactFirstName3: null,\n        contactLastName3: null,\n        contactEmail3: null,\n        contactTitle3: null,\n        contactPhone3: null,\n        contactAddress3: null,\n        contactCity3: null,\n        contactState3: null,\n        contactZip3: null\n      });\n    };\n\n    this.handleChangeCheck = name => event => {\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n\n    this.toggleShow = () => {\n      this.setState(state => ({\n        isShow: !state.isShow\n      }));\n    };\n  }\n\n  /*\n  reloadPage() {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  }\n  */\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/allclients\").then(response => {\n      console.log(\"Got client data!\");\n      console.log(response.data);\n      this.setState({\n        clientData: response.data\n      });\n    }).then(response2 => {\n      return axios.get(\"http://localhost:5000/gettherapists\") // this is not using the sequelize method\n      .then(response2 => {\n        console.log(\"Got therapist data!\");\n        console.log(response2.data);\n        this.setState({\n          therapistData: response2.data\n        });\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n    const clientObj = {\n      // client info\n      checkedActive: false,\n      clientType: this.state.clientType,\n      clientFirstName: this.state.clientFirstName,\n      clientLastName: this.state.clientLastName,\n      clientEmail: this.state.clientEmail,\n      clientTitle: this.state.clientTitle,\n      clientCurrentPassword: this.state.clientCurrentPassword,\n      clientConfirmPassword: this.state.clientConfirmPassword,\n      clientPhone: this.state.clientPhone,\n      clientAddress: this.state.clientAddress,\n      sessionType: this.state.sessionType,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLegnth,\n      clientBday: this.state.clientBday,\n      clientState: this.state.clientState,\n      clientCity: this.state.clientCity,\n      clientZipCode: this.state.clientZipCode,\n      clientStreetAddress: this.state.clientStreetAddress,\n      clientNotes: this.state.clientNotes,\n      // contact info\n      contactFirstName: this.state.contactFirstName,\n      contactLastName: this.state.contactLastName,\n      contactEmail: this.state.contactEmail,\n      contactTitle: this.state.contactTitle,\n      contactPhone: this.state.contactPhone,\n      contactAddress: this.state.contactAddress,\n      contactCity: this.state.contactCity,\n      contactState: this.state.contactState,\n      contactZip: this.state.contactZip,\n      // contact 2 info\n      contactFirstName2: this.state.contactFirstName2,\n      contactLastName2: this.state.contactLastName2,\n      contactEmail2: this.state.contactEmail2,\n      contactTitle2: this.state.contactTitle2,\n      contactPhone2: this.state.contactPhone2,\n      contactAddress2: this.state.contactAddress2,\n      contactCity2: this.state.contactCity2,\n      contactState2: this.state.contactState2,\n      contactZip2: this.state.contactZip2,\n      // contact 3 info\n      contactFirstName3: this.state.contactFirstName3,\n      contactLastName3: this.state.contactLastName3,\n      contactEmail3: this.state.contactEmail3,\n      contactTitle3: this.state.contactTitle3,\n      contactPhone3: this.state.contactPhone3,\n      contactAddress3: this.state.contactAddress3,\n      contactCity3: this.state.contactCity3,\n      contactState3: this.state.contactState3,\n      contactZip3: this.state.contactZip3,\n      // payor info\n      billingFirstName: this.state.billingFirstName,\n      billingLastName: this.state.billingLastName,\n      nameOnCard: this.state.nameOnCard,\n      cardNum: this.state.cardNum,\n      payorEmail: this.state.payorEmail,\n      payorTitle: this.state.payorTitle,\n      paymentType: this.state.paymentType,\n      billingPhone: this.state.billingPhone,\n      billingAddress: this.state.billingAddress,\n      billingCity: this.state.billingCity,\n      billingZip: this.state.billingZip,\n      billingState: this.state.billingState,\n      cvv: this.state.cvv,\n      expDate: this.state.expDate,\n      cardType: this.state.cardType\n    };\n    axios.post(\"http://localhost:5000/clients/registerclient\", clientObj).then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      //client info\n      clientObj\n    });\n  }\n\n  /*\n  handleSubmit = (user) => {\n    saveUser(user)\n      .then(() => this.setState(() => ({\n        toDashboard: true\n      })))\n  }\n  */\n\n  /*\n  setLocation() {\n    this.props.history.push(\"/clients\");\n  } */\n  render() {\n    const classes = this.props.classes;\n    const therapistData = this.state.therapistData;\n    /*\n    if (this.state.toDashboard === true) {\n        return <Redirect to='/dashboard' />\n      }\n    */\n\n    /*\n     const { navigate } = this.state;\n     // here is the important part\n    if (navigate) {\n      return <Redirect to=\"/clients\" push={true} />;\n    }\n    */\n\n    return React.createElement(Container, {\n      maxWidth: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.rootTitle,\n      elevation: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }, \"Client Information\")), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      row: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    }, React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      className: classes.marg,\n      control: React.createElement(MuiSwitch, {\n        checked: this.state.checkedActive,\n        onChange: this.handleChangeCheck(\"checkedActive\"),\n        value: \"checkedActive\" // marginLeft=\"theme.spacing(2)\"\n\n        /*\n        classes={{\n        switchBase: \"#1de9b6\",\n        checked: \"#1de9b6\",\n        bar: \"#1de9b6\"\n        }}*/\n        ,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      }),\n      label: \"Active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    }))), React.createElement(MuiThemeProvider, {\n      theme: theme2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-clientType\",\n      select: true,\n      label: \"Client Type\",\n      variant: \"outlined\",\n      className: classes.textField3,\n      value: this.state.clientType,\n      onChange: this.handleChange(\"clientType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }, clientTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660\n      },\n      __self: this\n    }, option.label))))), React.createElement(TextField, {\n      id: \"standard-select-title\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.clientTitle,\n      onChange: this.handleChange(\"clientTitle\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }, option.label))), React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"standard-firstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      color: theme,\n      className: classes.textField,\n      value: this.state.clientFirstName,\n      onChange: this.handleChange(\"clientFirstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    })), React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.clientLastName,\n      onChange: this.handleChange(\"clientLastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.clientEmail,\n      onChange: this.handleChange(\"clientEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-password-input\",\n      variant: \"outlined\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.clientCurrentPassword,\n      onChange: this.handleChange(\"clientCurrentPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-confirmPassword-input\",\n      variant: \"outlined\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange(\"confirmPassword\") //autoComplete=\"current-password\"\n      ,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-address\",\n      variant: \"outlined\",\n      label: \"Address\",\n      className: classes.textField,\n      value: this.state.clientAddress,\n      onChange: this.handleChange(\"clientAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-city-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.clientCity,\n      onChange: this.handleChange(\"clientCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.clientState,\n      onChange: this.handleChange(\"clientState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-zipCode\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.clientZipCode,\n      onChange: this.handleChange(\"clientZipCode\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.clientPhone,\n      onChange: this.handleChange(\"clientPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-bday\",\n      variant: \"outlined\",\n      label: \"Birthday\",\n      className: classes.textField,\n      value: this.state.clientBday,\n      onChange: this.handleChange(\"clientBday\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-select-sessionType\",\n      select: true,\n      label: \"Session Type\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textFieldSession,\n      value: this.state.sessionType,\n      onChange: this.handleChange(\"sessionType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801\n      },\n      __self: this\n    }, sessionTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-cost\",\n      label: \"Session Cost (dollars)\",\n      variant: \"outlined\",\n      className: classes.textFieldSession,\n      value: this.state.sessionCost,\n      onChange: this.handleChange(\"sessionCost\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-length\",\n      label: \"Session Length (minutes)\",\n      variant: \"outlined\",\n      className: classes.textFieldSession,\n      value: this.state.sessionLength,\n      onChange: this.handleChange(\"sessionLength\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-therapist\",\n      select: true,\n      label: \"Therapist\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      className: classes.textFieldTest,\n      value: this.state.therapist,\n      onChange: this.handleChange(\"therapist\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841\n      },\n      __self: this\n    }, therapistData.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.member_full_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857\n      },\n      __self: this\n    }, option.member_full_name)))), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\" //label=\"Additional Notes\"\n      ,\n      style: {\n        margin: 8\n      },\n      className: classes.textField2,\n      value: this.state.clientNotes,\n      onChange: this.handleChange(\"clientNotes\"),\n      placeholder: \"Add any additional notes here\" //fullWidth\n      ,\n      multiline: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      className: classes.divider,\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: classes.rootTitle,\n      elevation: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887\n      },\n      __self: this\n    }, \"Contact Information\")), React.createElement(Grid, {\n      className: classes.checkboxAlign,\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(MuiThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: this.state.checkedSameCont,\n        onChange: this.handleChangeCheckSameCont(\"checkedSameCont\"),\n        value: \"checkedSameCont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905\n        },\n        __self: this\n      })),\n      label: \"Same as client information\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902\n      },\n      __self: this\n    }))), React.createElement(TextField, {\n      id: \"standard-select-contactTitle\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactTitle,\n      onChange: this.handleChange(\"contactTitle\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactFirstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactFirstName,\n      onChange: this.handleChange(\"contactFirstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactLastName,\n      onChange: this.handleChange(\"contactLastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactAddress\",\n      variant: \"outlined\",\n      label: \"Street Address\",\n      className: classes.textField,\n      value: this.state.contactAddress,\n      onChange: this.handleChange(\"contactAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 959\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactCity-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.contactCity,\n      onChange: this.handleChange(\"contactCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.contactState,\n      onChange: this.handleChange(\"contactState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 977\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactZip\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.contactZip,\n      onChange: this.handleChange(\"contactZip\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 986\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-contactPhone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.contactPhone,\n      onChange: this.handleChange(\"contactPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 996\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactEmail\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.contactEmail,\n      onChange: this.handleChange(\"contactEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1006\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1017\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1018\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedContact2,\n        onChange: this.handleChangeCheck2(\"checkedContact2\"),\n        value: \"checkedContact2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021\n        },\n        __self: this\n      }),\n      label: \"Add second contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1019\n      },\n      __self: this\n    }))), this.state.checkedContact2 ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1033\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1034\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1035\n      },\n      __self: this\n    }, \"Contact 2 Information\")) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-select-contactTitle2\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactTitle2,\n      onChange: this.handleChange(\"contactTitle2\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1046\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1061\n      },\n      __self: this\n    }, option.label))) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactFirstName2\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactFirstName2,\n      onChange: this.handleChange(\"contactFirstName2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename2\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactLastName2,\n      onChange: this.handleChange(\"contactLastName2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-contactAddress2\",\n      variant: \"outlined\",\n      label: \"Street Address\",\n      className: classes.textField,\n      value: this.state.contactAddress2,\n      onChange: this.handleChange(\"contactAddress2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1094\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-contactCity-2\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.contactCity2,\n      onChange: this.handleChange(\"contactCity2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1105\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-state2\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.contactState2,\n      onChange: this.handleChange(\"contactState2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1117\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-contactZip2\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.contactZip2,\n      onChange: this.handleChange(\"contactZip2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1128\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      id: \"standard-contactPhone2\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.contactPhone2,\n      onChange: this.handleChange(\"contactPhone2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1140\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactEmail2\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.contactEmail2,\n      onChange: this.handleChange(\"contactEmail2\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1152\n      },\n      __self: this\n    }) : null, this.state.checkedContact2 ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1165\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1166\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedContact3,\n        onChange: this.handleChangeCheck3(\"checkedContact3\"),\n        value: \"checkedContact3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1169\n        },\n        __self: this\n      }),\n      label: \"Add third contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1167\n      },\n      __self: this\n    }))) : null, this.state.checkedContact3 ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1183\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1184\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.title,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1185\n      },\n      __self: this\n    }, \"Contact 3 Information\")) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-select-contactTitle3\",\n      select: true,\n      label: \"Title\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactTitle3,\n      onChange: this.handleChange(\"contactTitle3\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1196\n      },\n      __self: this\n    }, titles.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1211\n      },\n      __self: this\n    }, option.label))) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactFirstName3\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactFirstName3,\n      onChange: this.handleChange(\"contactFirstName3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1219\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-lastNamename3\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.contactLastName3,\n      onChange: this.handleChange(\"contactLastName3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1231\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-contactAddress3\",\n      variant: \"outlined\",\n      label: \"Street Address\",\n      className: classes.textField,\n      value: this.state.contactAddress3,\n      onChange: this.handleChange(\"contactAddress3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-contactCity-3\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.contactCity3,\n      onChange: this.handleChange(\"contactCity3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1255\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-state3\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.contactState3,\n      onChange: this.handleChange(\"contactState3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1267\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-contactZip3\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.contactZip3,\n      onChange: this.handleChange(\"contactZip3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1278\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      id: \"standard-contactPhone3\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.contactPhone3,\n      onChange: this.handleChange(\"contactPhone3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1290\n      },\n      __self: this\n    }) : null, this.state.checkedContact3 ? React.createElement(TextField, {\n      required: true,\n      id: \"standard-contactEmail3\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.contactEmail3,\n      onChange: this.handleChange(\"contactEmail3\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1302\n      },\n      __self: this\n    }) : null, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1341\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      className: classes.divider,\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1342\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.title2,\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1343\n      },\n      __self: this\n    }, \"Payor Information\")), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1351\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"billingFirstName\",\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.billingFirstName,\n      onChange: this.handleChange(\"billingFirstName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1352\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"billingLastName\",\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.billingLastName,\n      onChange: this.handleChange(\"billingLastName\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1362\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-select-paymentType\",\n      select: true,\n      label: \"Payment Type\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.paymentType,\n      onChange: this.handleChange(\"paymentType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1372\n      },\n      __self: this\n    }, paymentTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1387\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      id: \"standard-select-cardType\",\n      select: true,\n      label: \"Card Type\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cardType,\n      onChange: this.handleChange(\"cardType\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1393\n      },\n      __self: this\n    }, cardTypes.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1408\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      required: true,\n      id: \"standard-nameOnCard\",\n      label: \"Name on Card\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.nameOnCard,\n      onChange: this.handleChange(\"nameOnCard\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1438\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-billingAddress\",\n      variant: \"outlined\",\n      label: \"Billing Street Address\",\n      className: classes.textField,\n      value: this.state.billingAddress,\n      onChange: this.handleChange(\"billingAddress\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1449\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-cardNum\",\n      label: \"Card Number\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cardNum,\n      onChange: this.handleChange(\"cardNum\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1459\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-billingCity-\",\n      variant: \"outlined\",\n      label: \"City\",\n      className: classes.textField,\n      value: this.state.billingCity,\n      onChange: this.handleChange(\"billingCity\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1470\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-payorEmail\",\n      variant: \"outlined\",\n      label: \"Email\",\n      className: classes.textField,\n      value: this.state.payorEmail,\n      onChange: this.handleChange(\"payorEmail\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1480\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-expDate\",\n      variant: \"outlined\",\n      label: \"Expiration Date\",\n      className: classes.textField,\n      value: this.state.expDate,\n      onChange: this.handleChange(\"expDate\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1491\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-state\",\n      variant: \"outlined\",\n      label: \"State\",\n      className: classes.textField,\n      value: this.state.billingState,\n      onChange: this.handleChange(\"billingState\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1501\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-phone\",\n      variant: \"outlined\",\n      label: \"Phone Number\",\n      className: classes.textField,\n      value: this.state.billingPhone,\n      onChange: this.handleChange(\"billingPhone\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1511\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"standard-cvv\",\n      label: \"CVV\",\n      type: \"password\",\n      variant: \"outlined\",\n      className: classes.textField,\n      value: this.state.cvv,\n      onChange: this.handleChange(\"cvv\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1521\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-billingZip\",\n      variant: \"outlined\",\n      label: \"Zip Code\",\n      className: classes.textField,\n      value: this.state.billingZip,\n      onChange: this.handleChange(\"billingZip\"),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1533\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1555\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.saveButton,\n      size: \"large\",\n      variant: \"contained\",\n      onClick: () => {\n        this.onSubmit( // client info\n        this.state.clientType, this.state.clientFirstName, this.state.clientLastName, this.state.clientEmail, this.state.clientTitle, this.state.clientCurrentPassword, this.state.clientConfirmPassword, this.state.sessionType, this.state.sessionCost, this.state.sessionLegnth, this.state.clientPhone, this.state.clientAddress, this.state.clientBday, this.state.clientCity, this.state.clientState, this.state.clientZipCode, this.state.clientStreetAddress, this.state.contactNotes, // contact info\n        this.state.contactFirstName, this.state.contactLastName, this.state.contactEmail, this.state.contactTitle, this.state.contactPhone, this.state.contactAddress, this.state.contactCity, this.state.contactState, this.state.contactZip, // contact 2 info\n        this.state.contactFirstName2, this.state.contactLastName2, this.state.contactEmail2, this.state.contactTitle2, this.state.contactPhone2, this.state.contactAddress2, this.state.contactCity2, this.state.contactState2, this.state.contactZip2, // contact 3 info\n        this.state.contactFirstName3, this.state.contactLastName3, this.state.contactEmail3, this.state.contactTitle3, this.state.contactPhone3, this.state.contactAddress3, this.state.contactCity3, this.state.contactState3, this.state.contactZip3, // payor info\n        this.state.billingFirstName, this.state.billingLastName, this.state.nameOnCard, this.state.cardNum, this.state.payorEmail, this.state.payorTitle, this.state.paymentType, this.state.billingPhone, this.state.billingAddress, this.state.billingCity, this.state.billingZip, this.state.billingState, this.state.cvv, this.state.expDate, this.state.cardType); //this.setLocation();\n        //this.setState({ navigate: true });\n        // this.reloadPage();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1556\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TopPanel);","map":{"version":3,"sources":["/Users/kenneth/repos2/mtsaas/mtrepo/src/newClientConsolidate.js"],"names":["React","PropTypes","withStyles","createMuiTheme","MuiThemeProvider","Paper","Grid","MenuItem","TextField","Button","FormGroup","FormControlLabel","Checkbox","Container","Typography","red","Cyan","green","Divider","MuiSwitch","Switch","Link","Route","withRouter","Redirect","axios","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","width","textFieldTest","checkboxAlign","textFieldSession","marginTop","menu","root","paddingBottom","rootTitle","marginBottom","backgroundColor","color","palette","getContrastText","rootTitle2","marg","switchBase","checked","track","colorSwitchBase","colorBar","colorChecked","container2","textField2","textField3","title","align","title2","menu2","root2","root3","divider","saveButton","primary","main","theme2","theme3","titles","value","label","clientTypes","sessionTypes","paymentTypes","cardTypes","navStyle","textDecoration","TopPanel","Component","state","clientType","clientFirstName","clientLastName","clientEmail","clientTitle","clientCurrentPassword","clientConfirmPassword","sessionType","sessionCost","sessionLegnth","clientPhone","clientAddress","clientBday","clientState","clientCity","clientZipCode","clientStreetAddress","clientNotes","multiline","checkedSameCont","contactFirstName","contactLastName","contactEmail","contactTitle","contactPhone","contactAddress","contactCity","contactState","contactZip","contactFirstName2","contactLastName2","contactEmail2","contactTitle2","contactPhone2","contactAddress2","contactCity2","contactState2","contactZip2","contactFirstName3","contactLastName3","contactEmail3","contactTitle3","contactPhone3","contactAddress3","contactCity3","contactState3","contactZip3","billingFirstName","billingLastName","nameOnCard","cardNum","payorEmail","payorTitle","paymentType","billingPhone","billingAddress","billingCity","billingZip","billingState","cvv","expDate","cardType","sameAsContact","navigate","therapistData","therapist","checkedContact2","checkedContact3","handleChange","name","event","setState","target","handleChange2","handleChangeCheckSameCont","handleChangeCheck2","handleChangeCheck3","handleChangeCheck","toggleShow","isShow","componentDidMount","get","then","response","console","log","data","clientData","response2","catch","error","intervalIsSet","interval","setInterval","getDataFromDb","componentWillUnmount","clearInterval","onSubmit","clientObj","checkedActive","sessionLength","post","res","render","classes","props","MenuProps","className","map","option","confirmPassword","member_full_name","margin","shrink","contactNotes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  withStyles,\n  createMuiTheme,\n  MuiThemeProvider\n} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport red from \"@material-ui/core/colors/red\";\nimport Cyan from \"@material-ui/core/colors/cyan\";\nimport green from \"@material-ui/core/colors/green\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiSwitch from \"@material-ui/core/Switch\";\n\n// putting commmnent to change push comment\nimport { Switch, Link, Route, withRouter, Redirect } from \"react-router-dom\";\n\n//\n\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300\n  },\n\n  textFieldTest: {\n    marginRight: theme.spacing(79),\n\n    width: 300\n  },\n\n  checkboxAlign: {\n    marginRight: theme.spacing(86)\n  },\n\n  textFieldSession: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginTop: theme.spacing(6),\n    width: 300\n  },\n\n  menu: {\n    width: 200\n  },\n  root: {\n    width: \"100%\",\n    //marginLeft: theme.spacing.unit * 22,\n    // paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 2\n    //backgroundColor: red[200]\n  },\n  rootTitle: {\n    width: \"100%\",\n    marginTop: theme.spacing(-1),\n    marginBottom: theme.spacing(2),\n    backgroundColor: Cyan[800],\n    color: theme.palette.getContrastText(\"#00838f\")\n\n    //paddingTop: theme.spacing.unit,\n    //paddingBottom: theme.spacing.unit * 2\n  },\n\n  rootTitle2: {\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n    backgroundColor: \"#1de9b6\"\n\n    //paddingTop: theme.spacing.unit,\n    //paddingBottom: theme.spacing.unit * 2\n  },\n\n  marg: {\n    marginRight: theme.spacing(45)\n    // marginBottom: theme.spacing(5)\n  },\n\n  switchBase: {\n    color: green[300],\n    \"&$checked\": {\n      color: green[500]\n    },\n    \"&$checked + $track\": {\n      backgroundColor: green[500]\n    }\n  },\n  checked: {},\n  track: {},\n\n  colorSwitchBase: {\n    color: \"#1de9b6\",\n    \"&$colorChecked\": {\n      color: \"#1de9b6\",\n      \"& + $colorBar\": {\n        backgroundColor: \"#1de9b6\"\n      }\n    }\n  },\n  colorBar: \"#1de9b6\",\n  colorChecked: \"#1de9b6\",\n\n  container2: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField2: {\n    //marginLeft: theme.spacing.unit,\n    //marginRight: theme.spacing.unit,\n    //marginBottom: theme.spacing(2),\n    width: 938\n  },\n\n  textField3: {\n    marginLeft: theme.spacing(23),\n    //marginBottom: theme.spacing(5),\n    // marginRight: theme.spacing(20),\n    width: 300\n  },\n\n  title: {\n    align: \"center\"\n    //marginTop: theme.spacing(1)\n    //marginBottom: theme.spacing(3)\n  },\n  title2: {\n    align: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  },\n\n  menu2: {\n    width: 200\n  },\n  root2: {\n    width: 1020,\n    paddingBottom: theme.spacing.unit * 2\n  },\n\n  root3: {\n    width: \"5%\"\n  },\n\n  divider: {\n    backgroundColor: \"#1de9b6\",\n    marginBottom: theme.spacing(2)\n  },\n\n  saveButton: {\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    /* this is text color */ color: theme.palette.getContrastText(\"#00bfa5\"),\n    backgroundColor: \"#00bfa5\",\n    \"&:hover\": {\n      backgroundColor: \"#00bfa5\"\n    }\n  }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#00838f\" }\n  }\n});\n\nconst theme2 = createMuiTheme({\n  palette: {\n    primary: { main: \"#00838f\" }\n  }\n});\n\nconst theme3 = createMuiTheme({\n  palette: {\n    primary: { main: \"#00838f\" }\n  }\n});\n\nconst titles = [\n  {\n    value: \"\",\n    label: \"\"\n  },\n\n  {\n    value: \"Dr.\",\n    label: \"Dr.\"\n  },\n\n  {\n    value: \"Miss\",\n    label: \"Miss\"\n  },\n\n  {\n    value: \"Mr.\",\n    label: \"Mr.\"\n  },\n  {\n    value: \"Mrs.\",\n    label: \"Mrs.\"\n  },\n  {\n    value: \"Ms.\",\n    label: \"Ms.\"\n  },\n  {\n    value: \"Mx.\",\n    label: \"Mx.\"\n  }\n];\n\nconst clientTypes = [\n  {\n    value: \"Individual\",\n    label: \"Individual\"\n  },\n\n  {\n    value: \"Facility\",\n    label: \"Facility\"\n  }\n];\n\nconst sessionTypes = [\n  {\n    value: \"Lessons\",\n    label: \"Lessons\"\n  },\n\n  {\n    value: \"Therapy\",\n    label: \"Therapy\"\n  }\n];\n\nconst paymentTypes = [\n  {\n    value: \"Card\",\n    label: \"Card\"\n  },\n\n  {\n    value: \"Cash\",\n    label: \"Cash\"\n  },\n\n  {\n    value: \"Check\",\n    label: \"Check\"\n  }\n];\n\nconst cardTypes = [\n  {\n    value: \"American Express\",\n    label: \"American Express\"\n  },\n\n  {\n    value: \"Discover\",\n    label: \"Discover\"\n  },\n\n  {\n    value: \"MasterCard\",\n    label: \"MasterCard\"\n  },\n  {\n    value: \"Visa\",\n    label: \"Visa\"\n  }\n];\n\nconst navStyle = {\n  color: \"black\",\n  textDecoration: \"none\"\n};\n\nclass TopPanel extends React.Component {\n  state = {\n    //client info state\n    clientType: \"\",\n    clientFirstName: \"\",\n    clientLastName: \"\",\n    clientEmail: \"\",\n    clientTitle: \"\",\n    clientCurrentPassword: \"\",\n    clientConfirmPassword: \"\",\n    sessionType: \"\",\n    sessionCost: \"\",\n    sessionLegnth: \"\",\n    clientPhone: \"\",\n    clientAddress: \"\",\n    clientBday: \"\",\n    clientState: \"\",\n    clientCity: \"\",\n    clientZipCode: \"\",\n    clientStreetAddress: \"\",\n    clientNotes: \"\",\n    multiline: \"Controlled\",\n    //contact info state\n    checkedSameCont: null,\n    contactFirstName: \"\",\n    contactLastName: \"\",\n    contactEmail: \"\",\n    contactTitle: \"\",\n    contactPhone: \"\",\n    contactAddress: \"\",\n    contactCity: \"\",\n    contactState: \"\",\n    contactZip: \"\",\n    // contact 2 info state\n    contactFirstName2: null,\n    contactLastName2: null,\n    contactEmail2: null,\n    contactTitle2: null,\n    contactPhone2: null,\n    contactAddress2: null,\n    contactCity2: null,\n    contactState2: null,\n    contactZip2: null,\n    // contact 3 info state\n    contactFirstName3: null,\n    contactLastName3: null,\n    contactEmail3: null,\n    contactTitle3: null,\n    contactPhone3: null,\n    contactAddress3: null,\n    contactCity3: null,\n    contactState3: null,\n    contactZip3: null,\n    //payor info state\n    billingFirstName: \"\",\n    billingLastName: \"\",\n    nameOnCard: \"\",\n    cardNum: \"\",\n    payorEmail: \"\",\n    payorTitle: \"\",\n    paymentType: \"Cash\",\n    billingPhone: \"\",\n    billingAddress: \"\",\n    billingCity: \"\",\n    billingZip: \"\",\n    billingState: \"\",\n    cvv: \"\",\n    expDate: \"\",\n    cardType: \"\",\n    sameAsContact: false,\n    //toDashboard: false,\n    navigate: false,\n    //intervalIsSet: \"\"\n    therapistData: [],\n    therapist: \"\",\n    // condition\n    checkedContact2: false,\n    checkedContact3: false\n  };\n  /*\n  reloadPage() {\n    // if (this.state.location !== prevState.location) {\n    window.location.reload();\n    console.log(\"Refresh!\");\n  }\n*/\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/allclients\")\n      .then(response => {\n        console.log(\"Got client data!\");\n        console.log(response.data);\n        this.setState({\n          clientData: response.data\n        });\n      })\n      .then(response2 => {\n        return axios\n          .get(\"http://localhost:5000/gettherapists\") // this is not using the sequelize method\n          .then(response2 => {\n            console.log(\"Got therapist data!\");\n            console.log(response2.data);\n            this.setState({\n              therapistData: response2.data\n            });\n          });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n      console.log(\"Data interval set!\");\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n      console.log(\"Unmounted from client data!\");\n    }\n  }\n\n  onSubmit() {\n    //experiment keeping preventDefault\n    //e.preventDefault();\n\n    const clientObj = {\n      // client info\n      checkedActive: false,\n      clientType: this.state.clientType,\n      clientFirstName: this.state.clientFirstName,\n      clientLastName: this.state.clientLastName,\n      clientEmail: this.state.clientEmail,\n      clientTitle: this.state.clientTitle,\n      clientCurrentPassword: this.state.clientCurrentPassword,\n      clientConfirmPassword: this.state.clientConfirmPassword,\n      clientPhone: this.state.clientPhone,\n      clientAddress: this.state.clientAddress,\n      sessionType: this.state.sessionType,\n      sessionCost: this.state.sessionCost,\n      sessionLength: this.state.sessionLegnth,\n      clientBday: this.state.clientBday,\n      clientState: this.state.clientState,\n      clientCity: this.state.clientCity,\n      clientZipCode: this.state.clientZipCode,\n      clientStreetAddress: this.state.clientStreetAddress,\n      clientNotes: this.state.clientNotes,\n      // contact info\n      contactFirstName: this.state.contactFirstName,\n      contactLastName: this.state.contactLastName,\n      contactEmail: this.state.contactEmail,\n      contactTitle: this.state.contactTitle,\n      contactPhone: this.state.contactPhone,\n      contactAddress: this.state.contactAddress,\n      contactCity: this.state.contactCity,\n      contactState: this.state.contactState,\n      contactZip: this.state.contactZip,\n      // contact 2 info\n      contactFirstName2: this.state.contactFirstName2,\n      contactLastName2: this.state.contactLastName2,\n      contactEmail2: this.state.contactEmail2,\n      contactTitle2: this.state.contactTitle2,\n      contactPhone2: this.state.contactPhone2,\n      contactAddress2: this.state.contactAddress2,\n      contactCity2: this.state.contactCity2,\n      contactState2: this.state.contactState2,\n      contactZip2: this.state.contactZip2,\n      // contact 3 info\n      contactFirstName3: this.state.contactFirstName3,\n      contactLastName3: this.state.contactLastName3,\n      contactEmail3: this.state.contactEmail3,\n      contactTitle3: this.state.contactTitle3,\n      contactPhone3: this.state.contactPhone3,\n      contactAddress3: this.state.contactAddress3,\n      contactCity3: this.state.contactCity3,\n      contactState3: this.state.contactState3,\n      contactZip3: this.state.contactZip3,\n      // payor info\n      billingFirstName: this.state.billingFirstName,\n      billingLastName: this.state.billingLastName,\n      nameOnCard: this.state.nameOnCard,\n      cardNum: this.state.cardNum,\n      payorEmail: this.state.payorEmail,\n      payorTitle: this.state.payorTitle,\n      paymentType: this.state.paymentType,\n      billingPhone: this.state.billingPhone,\n      billingAddress: this.state.billingAddress,\n      billingCity: this.state.billingCity,\n      billingZip: this.state.billingZip,\n      billingState: this.state.billingState,\n      cvv: this.state.cvv,\n      expDate: this.state.expDate,\n      cardType: this.state.cardType\n    };\n    axios\n      .post(\"http://localhost:5000/clients/registerclient\", clientObj)\n      .then(res => console.log(res.data));\n    /* this will clear everything after saving+closing */\n\n    this.setState({\n      //client info\n      clientObj\n    });\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChange2 = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleChangeCheckSameCont = name => event => {\n    this.setState({\n      [name]: event.target.checked,\n      //this will set the values to blank once the window is closed\n      contactFirstName: this.state.clientFirstName,\n      contactLastName: this.state.clientLastName,\n      contactEmail: this.state.clientEmail,\n      contactTitle: this.state.clientTitle,\n      contactPhone: this.state.clientPhone,\n      contactAddress: this.state.clientAddress,\n      contactCity: this.state.clientCity,\n      contactState: this.state.clientState,\n      contactZip: this.state.clientZipCode\n    });\n  };\n\n  handleChangeCheck2 = name => event => {\n    this.setState({\n      [name]: event.target.checked,\n      //this will set the values to blank once the window is closed\n      contactFirstName2: null,\n      contactLastName2: null,\n      contactEmail2: null,\n      contactTitle2: null,\n      contactPhone2: null,\n      contactAddress2: null,\n      contactCity2: null,\n      contactState2: null,\n      contactZip2: null,\n      // contact 3,\n      checkedContact3: false,\n      contactFirstName3: null,\n      contactLastName3: null,\n      contactEmail3: null,\n      contactTitle3: null,\n      contactPhone3: null,\n      contactAddress3: null,\n      contactCity3: null,\n      contactState3: null,\n      contactZip3: null\n    });\n  };\n\n  handleChangeCheck3 = name => event => {\n    this.setState({\n      [name]: event.target.checked,\n      //this will set the values to blank once the window is closed\n      contactFirstName3: null,\n      contactLastName3: null,\n      contactEmail3: null,\n      contactTitle3: null,\n      contactPhone3: null,\n      contactAddress3: null,\n      contactCity3: null,\n      contactState3: null,\n      contactZip3: null\n    });\n  };\n\n  handleChangeCheck = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n  toggleShow = () => {\n    this.setState(state => ({ isShow: !state.isShow }));\n  };\n\n  /*\n  handleSubmit = (user) => {\n    saveUser(user)\n      .then(() => this.setState(() => ({\n        toDashboard: true\n      })))\n  }\n  */\n  /*\n  setLocation() {\n    this.props.history.push(\"/clients\");\n  } */\n\n  render() {\n    const { classes } = this.props;\n    const { therapistData } = this.state;\n    /*\n    if (this.state.toDashboard === true) {\n        return <Redirect to='/dashboard' />\n      }\n  */\n    /*\n\n    const { navigate } = this.state;\n\n    // here is the important part\n    if (navigate) {\n      return <Redirect to=\"/clients\" push={true} />;\n    }\n    */\n\n    return (\n      <Container maxWidth=\"lg\">\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          <Paper className={classes.root} elevation={1}>\n            <Paper className={classes.rootTitle} elevation={0}>\n              <Typography className={classes.title} align=\"center\" variant=\"h5\">\n                Client Information\n              </Typography>\n            </Paper>\n\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid container row justify=\"center\" alignItems=\"center\">\n                <MuiThemeProvider theme={theme}>\n                  <FormGroup row>\n                    <FormControlLabel\n                      className={classes.marg}\n                      control={\n                        <MuiSwitch\n                          checked={this.state.checkedActive}\n                          onChange={this.handleChangeCheck(\"checkedActive\")}\n                          value=\"checkedActive\"\n                          // marginLeft=\"theme.spacing(2)\"\n\n                          /*\n                        classes={{\n                          switchBase: \"#1de9b6\",\n                          checked: \"#1de9b6\",\n                          bar: \"#1de9b6\"\n                        }}*/\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Active\"\n                    />\n                  </FormGroup>\n                </MuiThemeProvider>\n                <MuiThemeProvider theme={theme2}>\n                  <TextField\n                    id=\"standard-select-clientType\"\n                    select\n                    label=\"Client Type\"\n                    variant=\"outlined\"\n                    className={classes.textField3}\n                    value={this.state.clientType}\n                    onChange={this.handleChange(\"clientType\")}\n                    SelectProps={{\n                      MenuProps: {\n                        className: classes.menu\n                      }\n                    }}\n                  >\n                    {clientTypes.map(option => (\n                      <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </MuiThemeProvider>\n              </Grid>\n\n              <TextField\n                id=\"standard-select-title\"\n                select\n                label=\"Title\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.clientTitle}\n                onChange={this.handleChange(\"clientTitle\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {titles.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <MuiThemeProvider theme={theme}>\n                <TextField\n                  required\n                  id=\"standard-firstName\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  color={theme}\n                  className={classes.textField}\n                  value={this.state.clientFirstName}\n                  onChange={this.handleChange(\"clientFirstName\")}\n                  margin=\"normal\"\n                />\n              </MuiThemeProvider>\n              <TextField\n                required\n                id=\"standard-lastNamename\"\n                label=\"Last Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.clientLastName}\n                onChange={this.handleChange(\"clientLastName\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-email\"\n                variant=\"outlined\"\n                label=\"Email\"\n                className={classes.textField}\n                value={this.state.clientEmail}\n                onChange={this.handleChange(\"clientEmail\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-password-input\"\n                variant=\"outlined\"\n                label=\"Password\"\n                className={classes.textField}\n                type=\"password\"\n                value={this.state.clientCurrentPassword}\n                onChange={this.handleChange(\"clientCurrentPassword\")}\n                //autoComplete=\"current-password\"\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-confirmPassword-input\"\n                variant=\"outlined\"\n                label=\"Confirm Password\"\n                className={classes.textField}\n                type=\"password\"\n                value={this.state.confirmPassword}\n                onChange={this.handleChange(\"confirmPassword\")}\n                //autoComplete=\"current-password\"\n                margin=\"normal\"\n              />\n\n              <TextField\n                id=\"standard-address\"\n                variant=\"outlined\"\n                label=\"Address\"\n                className={classes.textField}\n                value={this.state.clientAddress}\n                onChange={this.handleChange(\"clientAddress\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-city-\"\n                variant=\"outlined\"\n                label=\"City\"\n                className={classes.textField}\n                value={this.state.clientCity}\n                onChange={this.handleChange(\"clientCity\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-state\"\n                variant=\"outlined\"\n                label=\"State\"\n                className={classes.textField}\n                value={this.state.clientState}\n                onChange={this.handleChange(\"clientState\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-zipCode\"\n                variant=\"outlined\"\n                label=\"Zip Code\"\n                className={classes.textField}\n                value={this.state.clientZipCode}\n                onChange={this.handleChange(\"clientZipCode\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-phone\"\n                variant=\"outlined\"\n                label=\"Phone Number\"\n                className={classes.textField}\n                value={this.state.clientPhone}\n                onChange={this.handleChange(\"clientPhone\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-bday\"\n                variant=\"outlined\"\n                label=\"Birthday\"\n                className={classes.textField}\n                value={this.state.clientBday}\n                onChange={this.handleChange(\"clientBday\")}\n                margin=\"normal\"\n              />\n\n              <TextField\n                id=\"standard-select-sessionType\"\n                select\n                label=\"Session Type\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                className={classes.textFieldSession}\n                value={this.state.sessionType}\n                onChange={this.handleChange(\"sessionType\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {sessionTypes.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                id=\"standard-cost\"\n                label=\"Session Cost (dollars)\"\n                variant=\"outlined\"\n                className={classes.textFieldSession}\n                value={this.state.sessionCost}\n                onChange={this.handleChange(\"sessionCost\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-length\"\n                label=\"Session Length (minutes)\"\n                variant=\"outlined\"\n                className={classes.textFieldSession}\n                value={this.state.sessionLength}\n                onChange={this.handleChange(\"sessionLength\")}\n                margin=\"normal\"\n              />\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <TextField\n                  id=\"standard-select-therapist\"\n                  select\n                  label=\"Therapist\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  className={classes.textFieldTest}\n                  value={this.state.therapist}\n                  onChange={this.handleChange(\"therapist\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {therapistData.map(option => (\n                    <MenuItem\n                      key={option.value}\n                      value={option.member_full_name}\n                    >\n                      {option.member_full_name}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <TextField\n                  id=\"standard-full-width\"\n                  //label=\"Additional Notes\"\n                  style={{ margin: 8 }}\n                  className={classes.textField2}\n                  value={this.state.clientNotes}\n                  onChange={this.handleChange(\"clientNotes\")}\n                  placeholder=\"Add any additional notes here\"\n                  //fullWidth\n                  multiline\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                />\n              </Grid>\n\n              <Divider className={classes.divider} variant=\"middle\" />\n              <Paper className={classes.rootTitle} elevation={0}>\n                <Typography\n                  className={classes.title}\n                  align=\"center\"\n                  variant=\"h5\"\n                >\n                  Contact Information\n                </Typography>\n              </Paper>\n              <Grid\n                className={classes.checkboxAlign}\n                container\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <FormGroup row>\n                  <FormControlLabel\n                    control={\n                      <MuiThemeProvider theme={theme}>\n                        <Checkbox\n                          checked={this.state.checkedSameCont}\n                          onChange={this.handleChangeCheckSameCont(\n                            \"checkedSameCont\"\n                          )}\n                          value=\"checkedSameCont\"\n                        />\n                      </MuiThemeProvider>\n                    }\n                    label=\"Same as client information\"\n                  />\n                </FormGroup>\n              </Grid>\n              {/* Contact Info*/}\n              <TextField\n                id=\"standard-select-contactTitle\"\n                select\n                label=\"Title\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.contactTitle}\n                onChange={this.handleChange(\"contactTitle\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n              >\n                {titles.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                required\n                id=\"standard-contactFirstName\"\n                label=\"First Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.contactFirstName}\n                onChange={this.handleChange(\"contactFirstName\")}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-lastNamename\"\n                label=\"Last Name\"\n                variant=\"outlined\"\n                className={classes.textField}\n                value={this.state.contactLastName}\n                onChange={this.handleChange(\"contactLastName\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-contactAddress\"\n                variant=\"outlined\"\n                label=\"Street Address\"\n                className={classes.textField}\n                value={this.state.contactAddress}\n                onChange={this.handleChange(\"contactAddress\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-contactCity-\"\n                variant=\"outlined\"\n                label=\"City\"\n                className={classes.textField}\n                value={this.state.contactCity}\n                onChange={this.handleChange(\"contactCity\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-state\"\n                variant=\"outlined\"\n                label=\"State\"\n                className={classes.textField}\n                value={this.state.contactState}\n                onChange={this.handleChange(\"contactState\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-contactZip\"\n                variant=\"outlined\"\n                label=\"Zip Code\"\n                className={classes.textField}\n                value={this.state.contactZip}\n                onChange={this.handleChange(\"contactZip\")}\n                margin=\"normal\"\n              />\n\n              <TextField\n                id=\"standard-contactPhone\"\n                variant=\"outlined\"\n                label=\"Phone Number\"\n                className={classes.textField}\n                value={this.state.contactPhone}\n                onChange={this.handleChange(\"contactPhone\")}\n                margin=\"normal\"\n              />\n\n              <TextField\n                required\n                id=\"standard-contactEmail\"\n                variant=\"outlined\"\n                label=\"Email\"\n                className={classes.textField}\n                value={this.state.contactEmail}\n                onChange={this.handleChange(\"contactEmail\")}\n                margin=\"normal\"\n              />\n\n              <Container>\n                <FormGroup row>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.checkedContact2}\n                        onChange={this.handleChangeCheck2(\"checkedContact2\")}\n                        value=\"checkedContact2\"\n                      />\n                    }\n                    label=\"Add second contact\"\n                  />\n                </FormGroup>\n              </Container>\n\n              {this.state.checkedContact2 ? (\n                <Container>\n                  <Divider variant=\"middle\" />\n                  <Typography\n                    className={classes.title}\n                    align=\"center\"\n                    variant=\"h5\"\n                  >\n                    Contact 2 Information\n                  </Typography>\n                </Container>\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-select-contactTitle2\"\n                  select\n                  label=\"Title\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactTitle2}\n                  onChange={this.handleChange(\"contactTitle2\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {titles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  required\n                  id=\"standard-contactFirstName2\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactFirstName2}\n                  onChange={this.handleChange(\"contactFirstName2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact2 ? (\n                <TextField\n                  required\n                  id=\"standard-lastNamename2\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactLastName2}\n                  onChange={this.handleChange(\"contactLastName2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-contactAddress2\"\n                  variant=\"outlined\"\n                  label=\"Street Address\"\n                  className={classes.textField}\n                  value={this.state.contactAddress2}\n                  onChange={this.handleChange(\"contactAddress2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-contactCity-2\"\n                  variant=\"outlined\"\n                  label=\"City\"\n                  className={classes.textField}\n                  value={this.state.contactCity2}\n                  onChange={this.handleChange(\"contactCity2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-state2\"\n                  variant=\"outlined\"\n                  label=\"State\"\n                  className={classes.textField}\n                  value={this.state.contactState2}\n                  onChange={this.handleChange(\"contactState2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-contactZip2\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.contactZip2}\n                  onChange={this.handleChange(\"contactZip2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  id=\"standard-contactPhone2\"\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  className={classes.textField}\n                  value={this.state.contactPhone2}\n                  onChange={this.handleChange(\"contactPhone2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <TextField\n                  required\n                  id=\"standard-contactEmail2\"\n                  variant=\"outlined\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  value={this.state.contactEmail2}\n                  onChange={this.handleChange(\"contactEmail2\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact2 ? (\n                <Container>\n                  <FormGroup row>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={this.state.checkedContact3}\n                          onChange={this.handleChangeCheck3(\"checkedContact3\")}\n                          value=\"checkedContact3\"\n                        />\n                      }\n                      label=\"Add third contact\"\n                    />\n                  </FormGroup>\n                </Container>\n              ) : null}\n              {/* Contact 3 */}\n\n              {this.state.checkedContact3 ? (\n                <Container>\n                  <Divider variant=\"middle\" />\n                  <Typography\n                    className={classes.title}\n                    align=\"center\"\n                    variant=\"h5\"\n                  >\n                    Contact 3 Information\n                  </Typography>\n                </Container>\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-select-contactTitle3\"\n                  select\n                  label=\"Title\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactTitle3}\n                  onChange={this.handleChange(\"contactTitle3\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {titles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  required\n                  id=\"standard-contactFirstName3\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactFirstName3}\n                  onChange={this.handleChange(\"contactFirstName3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact3 ? (\n                <TextField\n                  required\n                  id=\"standard-lastNamename3\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.contactLastName3}\n                  onChange={this.handleChange(\"contactLastName3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-contactAddress3\"\n                  variant=\"outlined\"\n                  label=\"Street Address\"\n                  className={classes.textField}\n                  value={this.state.contactAddress3}\n                  onChange={this.handleChange(\"contactAddress3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-contactCity-3\"\n                  variant=\"outlined\"\n                  label=\"City\"\n                  className={classes.textField}\n                  value={this.state.contactCity3}\n                  onChange={this.handleChange(\"contactCity3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-state3\"\n                  variant=\"outlined\"\n                  label=\"State\"\n                  className={classes.textField}\n                  value={this.state.contactState3}\n                  onChange={this.handleChange(\"contactState3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-contactZip3\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.contactZip3}\n                  onChange={this.handleChange(\"contactZip3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  id=\"standard-contactPhone3\"\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  className={classes.textField}\n                  value={this.state.contactPhone3}\n                  onChange={this.handleChange(\"contactPhone3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {this.state.checkedContact3 ? (\n                <TextField\n                  required\n                  id=\"standard-contactEmail3\"\n                  variant=\"outlined\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  value={this.state.contactEmail3}\n                  onChange={this.handleChange(\"contactEmail3\")}\n                  margin=\"normal\"\n                />\n              ) : null}\n\n              {/*\n            <Button\n              size=\"medium\"\n              variant=\"contained\"\n              className={classes.button}\n            >\n              Add Additional\n            </Button>\n            */}\n\n              {/* Payor Info  */}\n              {/*\n              <FormGroup className={classes.marg} row>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state.sameAsContact}\n                      onChange={this.handleChange(\"sameAsContact\")}\n                      value=\"sameAsContact\"\n                      color=\"default\"\n                    />\n                  }\n                  label=\"Same as contact\" \n                />\n              </FormGroup>\n                */}\n\n              <Container>\n                <Divider className={classes.divider} variant=\"middle\" />\n                <Typography\n                  className={classes.title2}\n                  align=\"center\"\n                  variant=\"h5\"\n                >\n                  Payor Information\n                </Typography>\n              </Container>\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <TextField\n                  required\n                  id=\"billingFirstName\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.billingFirstName}\n                  onChange={this.handleChange(\"billingFirstName\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  id=\"billingLastName\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.billingLastName}\n                  onChange={this.handleChange(\"billingLastName\")}\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"standard-select-paymentType\"\n                  select\n                  label=\"Payment Type\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.paymentType}\n                  onChange={this.handleChange(\"paymentType\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {paymentTypes.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                <TextField\n                  id=\"standard-select-cardType\"\n                  select\n                  label=\"Card Type\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.cardType}\n                  onChange={this.handleChange(\"cardType\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {cardTypes.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                {/*\n\n                <TextField\n                  id=\"standard-select-payorTitle\"\n                  select\n                  label=\"payorTitle\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.payorTitle}\n                  onChange={this.handleChange(\"payorTitle\")}\n                  SelectProps={{\n                    MenuProps: {\n                      className: classes.menu\n                    }\n                  }}\n                >\n                  {titles.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                  */}\n\n                <TextField\n                  required\n                  id=\"standard-nameOnCard\"\n                  label=\"Name on Card\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.nameOnCard}\n                  onChange={this.handleChange(\"nameOnCard\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-billingAddress\"\n                  variant=\"outlined\"\n                  label=\"Billing Street Address\"\n                  className={classes.textField}\n                  value={this.state.billingAddress}\n                  onChange={this.handleChange(\"billingAddress\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-cardNum\"\n                  label=\"Card Number\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.cardNum}\n                  onChange={this.handleChange(\"cardNum\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-billingCity-\"\n                  variant=\"outlined\"\n                  label=\"City\"\n                  className={classes.textField}\n                  value={this.state.billingCity}\n                  onChange={this.handleChange(\"billingCity\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-payorEmail\"\n                  variant=\"outlined\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  value={this.state.payorEmail}\n                  onChange={this.handleChange(\"payorEmail\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-expDate\"\n                  variant=\"outlined\"\n                  label=\"Expiration Date\"\n                  className={classes.textField}\n                  value={this.state.expDate}\n                  onChange={this.handleChange(\"expDate\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-state\"\n                  variant=\"outlined\"\n                  label=\"State\"\n                  className={classes.textField}\n                  value={this.state.billingState}\n                  onChange={this.handleChange(\"billingState\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-phone\"\n                  variant=\"outlined\"\n                  label=\"Phone Number\"\n                  className={classes.textField}\n                  value={this.state.billingPhone}\n                  onChange={this.handleChange(\"billingPhone\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  required\n                  id=\"standard-cvv\"\n                  label=\"CVV\"\n                  type=\"password\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  value={this.state.cvv}\n                  onChange={this.handleChange(\"cvv\")}\n                  margin=\"normal\"\n                />\n\n                <TextField\n                  id=\"standard-billingZip\"\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  className={classes.textField}\n                  value={this.state.billingZip}\n                  onChange={this.handleChange(\"billingZip\")}\n                  margin=\"normal\"\n                />\n\n                {/*\n                <Button\n                  size=\"medium\"\n                  variant=\"contained\"\n                  className={classes.button}\n                >\n                  +\n                </Button>\n*/}\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"flex-end\">\n              <Button\n                className={classes.saveButton}\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.onSubmit(\n                    // client info\n                    this.state.clientType,\n                    this.state.clientFirstName,\n                    this.state.clientLastName,\n                    this.state.clientEmail,\n                    this.state.clientTitle,\n                    this.state.clientCurrentPassword,\n                    this.state.clientConfirmPassword,\n                    this.state.sessionType,\n                    this.state.sessionCost,\n                    this.state.sessionLegnth,\n                    this.state.clientPhone,\n                    this.state.clientAddress,\n                    this.state.clientBday,\n                    this.state.clientCity,\n                    this.state.clientState,\n                    this.state.clientZipCode,\n                    this.state.clientStreetAddress,\n                    this.state.contactNotes,\n                    // contact info\n                    this.state.contactFirstName,\n                    this.state.contactLastName,\n                    this.state.contactEmail,\n                    this.state.contactTitle,\n                    this.state.contactPhone,\n                    this.state.contactAddress,\n                    this.state.contactCity,\n                    this.state.contactState,\n                    this.state.contactZip,\n                    // contact 2 info\n                    this.state.contactFirstName2,\n                    this.state.contactLastName2,\n                    this.state.contactEmail2,\n                    this.state.contactTitle2,\n                    this.state.contactPhone2,\n                    this.state.contactAddress2,\n                    this.state.contactCity2,\n                    this.state.contactState2,\n                    this.state.contactZip2,\n                    // contact 3 info\n                    this.state.contactFirstName3,\n                    this.state.contactLastName3,\n                    this.state.contactEmail3,\n                    this.state.contactTitle3,\n                    this.state.contactPhone3,\n                    this.state.contactAddress3,\n                    this.state.contactCity3,\n                    this.state.contactState3,\n                    this.state.contactZip3,\n                    // payor info\n                    this.state.billingFirstName,\n                    this.state.billingLastName,\n                    this.state.nameOnCard,\n                    this.state.cardNum,\n                    this.state.payorEmail,\n                    this.state.payorTitle,\n                    this.state.paymentType,\n                    this.state.billingPhone,\n                    this.state.billingAddress,\n                    this.state.billingCity,\n                    this.state.billingZip,\n                    this.state.billingState,\n                    this.state.cvv,\n                    this.state.expDate,\n                    this.state.cardType\n                  );\n                  //this.setLocation();\n                  //this.setState({ navigate: true });\n                  // this.reloadPage();\n                }}\n              >\n                {/*  <Link style={navStyle} to=\"/clients\"> */}\n                Save\n                {/*   </Link> */}\n              </Button>\n            </Grid>\n          </Paper>\n        </form>\n      </Container>\n    );\n  }\n}\n\nTopPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TopPanel);\n"]},"metadata":{},"sourceType":"module"}